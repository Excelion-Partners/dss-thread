{"version":3,"sources":["components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js"],"names":["DataikuItem","props","state","newDefModal","selectedDef","name","value","requestOptions","method","headers","body","JSON","stringify","this","item","key","fetch","window","getWebAppBackendUrl","then","res","json","result","setState","Row","deets","full_ds_name","type","arrayTags","tags","forEach","element","length","alert","renderDataset","renderProject","renderColumn","Col","comment","col","eventBus","dispatch","ds","proj","lineage","buildLineage","Modal","size","show","animation","Header","closeButton","Title","Body","Container","Form","style","paddingTop","Group","className","Label","Control","defaultValue","onChange","e","target","Footer","Button","variant","onClick","saveCol","class","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","Tab","eventKey","title","def","definition","id","newDef","padding","buildTagsString","meta","listItems","schema","map","openColumn","paddingLeft","href","Common","createDatasetLink","Table","striped","bordered","hover","dataSetRows","datasets","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","Component","App","formatQueryTypes","types","Object","entries","filters","strTypes","i","arr","console","log","handleOnChange","tempFilters","loadItem","loading","response","selectedItem","selectedItemType","search","term","url","p_list","keys","results","searchResults","dataiku","undefined","dataikuItem","columns","projects","isLoading","$","document","ready","rendered","on","option","fontWeight","split","paddingBottom","textAlign","rescan","width","height","cursor","filterBy","labelKey","minLength","onSearch","options","placeholder","renderMenuItemChildren","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","projkey","createDsLinkFull","createDsLink2","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","elements","position","y","backgroundColor","borderColor","borderWidth","sourcePosition","targetPosition","draggable","down_res","up_res","eval","lbl","splits","column","edge","source","arrowHeadType","count","label","animated","new_state","last_ds","nodeTypes","customFlowNode","rv","fitView","onLoad","showInteractive","memo","isConnectable","background","border","borderRadius","preventDefault"],"mappings":"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","file":"static/js/main.000d9afd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n// import Dataset from \"./dataset\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\n\nclass DataikuItem extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Definition\",\n                value: \"\"\n            }\n        };\n    }\n\n    saveCol() {\n        // this.setState({ newDefModal: false });\n        // let formData = new FormData()\n        // formData.append(\"name\", this.state.selectedDef.name);\n        // formData.append(\"description\", this.state.selectedDef.value);\n        // formData.append(\"applied_to\", [this.props.item.key]);\n        // formData.append(\"id\", -1);\n\n        // const requestOptions = {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'multipart/form-data'\n        //     },\n        //     body: formData\n        // };\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"name\": this.state.selectedDef.name,\n                \"description\": this.state.selectedDef.value,\n                \"applied_to\": [this.props.item.key],\n                \"id\": -1\n            })\n        }\n\n        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({ newDefModal: false });\n                    // eventBus.dispatch(\"dataRefresh\", {});\n                });\n    }\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n            {/* <Dataset deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Dataset> */}\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<span><b>Tags: </b></span>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        this.setState({\n            selectedDef: {\n                name: 'New Definition',\n                value: this.props.item.comment\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    renderColumn() {\n        let lineage = this.buildLineage();\n\n        return <Col>\n            {/* onHide={this.closeColumn}  */}\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.state.selectedDef.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Form style={{ paddingTop: '15px' }}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Description Name</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                        onChange={e => this.state.selectedDef.name = e.target.value}\n                                    />\n                                    {/* <Form.Text className=\"text-muted\">\n                                        Will be saved to the DSS Column name\n                                    </Form.Text> */}\n                                    <Form.Label>Description Value</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.value}\n                                        onChange={e => this.state.selectedDef.value = e.target.value}\n                                    />\n                                </Form.Group>\n                            </Form>\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" >Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol()}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <p class=\"name\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n            </p>\n            <p class=\"name\"><b>Dataset: </b>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '.' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <p class=\"name\"><b>Column Name: </b>{this.props.item.name}\n            </p>\n            <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        {\n                            this.props.item.definition.id == -1 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Add</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    {this.props.item.comment}\n                                </div>\n                            </div>\n                        }\n                        {\n                            this.props.item.definition.id > 0 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Edit</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    {this.props.item.comment}\n                                </div>\n                            </div>\n                        }\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={Common.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { FaRedo } from 'react-icons/fa';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    Container,\n    Col,\n    Row,\n    Spinner,\n    Button\n} from 'react-bootstrap';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                columns: true,\n                datasets: true,\n                projects: true,                \n            },\n            isLoading: false,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n            loading: true\n        }\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).map(([key, value]) => {            \n            if(value == true) {\n                types[types.length] = key;\n            }            \n        });\n\n        if(types.length > 0) {\n            let strTypes = \"&types=\";\n            strTypes += types.map((type, i, arr) => {\n                return type;\n            });\n    \n            console.log(\"strTypes == \" + strTypes);\n            return strTypes;\n        } else {\n            return null;\n        }        \n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({ \n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        loading: false,\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                });\n        }\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n\n        let types = this.formatQueryTypes();\n        console.log('search() :: types = ' + types);\n\n        if(types != null) {\n            url += types;\n        }\n        console.log('url = ' + url);\n\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = [];\n                Object.keys(response).forEach(function (results) {\n                    p_list[p_list.length] = response[results];\n                });\n\n                this.setState({\n                    searchResults: p_list\n                });\n                this.setState({ loading: false });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'column'\n                }])\n            );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, isLoading, searchResults, selectedItem, selectedItemType } = this.state;\n        // const ref = React.createRef();\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <AsyncTypeahead\n                        filterBy={filterBy}\n                        id=\"async-search\"\n                        isLoading={isLoading}\n                        labelKey=\"key\"\n                        minLength={3}\n                        onChange={this.loadItem}\n                        onSearch={this.search}\n                        options={searchResults}\n                        placeholder='Search'\n                        renderMenuItemChildren={this.renderMenuItemChildren}\n                    />\n                </Row>\n\n                <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                    <Col xs={1}>\n                        <h4>Filter By: </h4>\n                    </Col>\n                    {Object.entries(filters).map(([key, value]) => {\n                        return (\n                            <Col xs={1}>\n                                <div className=\"filter-types\" key={key}>\n                                    <input\n                                        type=\"checkbox\"\n                                        id={`filter-${key}`}\n                                        name={key}\n                                        value={key}\n                                        checked={value}\n                                        onChange={() => this.handleOnChange(key)}\n                                        style={{ marginRight:  \"1.0em\" }}\n                                    />\n                                    <label htmlFor={`filter-${key}`}>{key}</label>\n                                </div>\n                            </Col>                                \n                        );\n                    })}\n                </Row>\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\n// function createDsLink(ds) {\n//     return this.createDsLink2(ds.projectKey, ds.name)\n// }\n\n// function createDsLink2(proj, ds) {\n//     return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n// }\n\nfunction createDsLinkFull(proj, ds) {\n    return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkFull,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport ReactFlow, { Controls } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\n\n// import EditColumnModal from \"./editColumnModal\";\n\nclass Lineage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n        };\n\n        // this.toggleModal = this.toggleModal.bind(this);\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        var elements = [{\n            id: '-1',\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', width: '200px', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold' },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        }];\n\n        // find all the end-nodes\n        var down_res = [];\n        var up_res = [];\n\n        if(this.props.type == 'column') {\n            if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n                if (base_elem['lineage_downstream'] != null)\n                    this.traverse(down_res, base_elem, 'lineage_downstream');\n                else\n                    down_res = eval(base_elem['lineage_downstream']);\n            }\n            \n            if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n                if (base_elem['lineage_upstream'] != null)\n                    this.traverse(up_res, base_elem, 'lineage_upstream');\n                else\n                    up_res = eval(base_elem['lineage_upstream']);\n            }\n        } else {\n            if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n                if (base_elem['lineage_downstream'] != null)\n                    this.traverse(down_res, base_elem, 'lineage_downstream');\n                else\n                    down_res = eval(base_elem['lineage_downstream']);\n            }\n            \n            if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n                if (base_elem['lineage_upstream'] != null)\n                    this.traverse(up_res, base_elem, 'lineage_upstream');\n                else\n                    up_res = eval(base_elem['lineage_upstream']);\n            }\n        }\n\n        console.log('down_res == ');\n        console.log(down_res);\n        console.log('up_res == ');\n        console.log(up_res);\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            elements[elements.length] = {\n                id: 'down_' + x,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) },\n                draggable: false\n            }\n\n            var edge = { id: '-1-down_' + x, source: '-1', target: 'down_' + x, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            elements[elements.length] = {\n                id: 'up_' + x,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            }\n\n            var edge = { id: '-1-up_' + x, source: 'up_' + x, target: '-1', arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n        }\n        var new_state = {}\n        new_state[st] = elements;\n\n        this.setState(new_state)\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {        \n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: 500 }}>\n                {this.state.elements && <ReactFlow onLoad={this.onLoad} elements={this.state.elements} nodeTypes={this.nodeTypes}>\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );\n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', textAlign: 'center', padding: '10px' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});"],"sourceRoot":""}