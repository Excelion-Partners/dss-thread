{"version":3,"sources":["components/definition.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js","common/layout.js"],"names":["Definition","props","this","definition","id","style","maxWidth","border","borderRadius","padding","Row","Col","fontWeight","paddingRight","name","description","Component","DataikuItem","defSearch","term","url","window","getWebAppBackendUrl","setState","loading","fetch","method","headers","then","res","json","response","state","defSearchResults","selectDef","item","toggleNew","isNew","newDefSelected","selectedDef","comment","newDefModal","elem","key","orig","idx","length","r","push","flattenArray","applyUp","applyDown","applyTo","concat","confirmAlert","title","message","buttons","label","onClick","val","requestOptions","body","JSON","stringify","eventBus","dispatch","result","value","deets","full_ds_name","type","arrayTags","tags","forEach","element","alert","renderDataset","renderProject","renderColumn","col","ds","proj","option","lineage","buildLineage","Modal","size","show","animation","onHide","Header","closeButton","Title","Body","Container","ButtonGroup","Button","variant","paddingTop","delay","labelKey","minLength","onChange","onSearch","options","placeholder","renderMenuItemChildren","renderDefSearchMenuItem","width","Form","Group","className","Label","Control","defaultValue","e","target","height","as","rows","Text","Footer","saveCol","class","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","Tab","eventKey","def","newDef","editDef","buildTagsString","meta","listItems","schema","map","openColumn","Table","striped","bordered","hover","dataSetRows","datasets","paddingLeft","href","Common","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","App","filterDataikuItems","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","toString","entries","filters","handleOnChange","tempFilters","loadItem","console","log","selectedItem","selectedItemType","search","searchResults","dataiku","undefined","column","openFilter","$","document","ready","rendered","on","isLoading","split","paddingBottom","textAlign","rescan","cursor","filterBy","toggleFilter","backgroundColor","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","event","callback","addEventListener","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","createDatasetLink","projkey","createDsLinkTag","createDsLinkThread","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","basePositionX","basePositionY","baseElementId","baseNode","position","y","borderColor","borderWidth","DEFAULT_NODE_HEIGHT","DEFAULT_NODE_WIDTH","sourcePosition","targetPosition","draggable","elements","_nodes","_edges","down_res","eval","up_res","lbl","splits","elementId","edgeId","edge","source","arrowHeadType","count","animated","edges","nodes","createGraphLayout","els","err","last_ds","nodeTypes","customFlowNode","rv","fitView","DEFAULT_CONTAINER_HEIGHT","onLoad","showInteractive","DEFAULT_CONTAINER_WIDTH","memo","isConnectable","_data","project_splits","formatData","background","preventDefault","a","elk","Elk","defaultLayoutOptions","el","isNode","__rf","layout","children","newGraph","find","n","Math","random"],"mappings":"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","file":"static/js/main.3de2834f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Definition extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (<div>\n            {this.props.definition.id > -1 &&\n                <div style={{ maxWidth: \"300px\", border: \"solid 1px #999\", borderRadius: \"2px\", padding: \"10px\" }}>\n                    <Row>\n                        <Col>\n                            <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                                ID\n                            </span>\n                            <span>\n                                {this.props.definition.id}\n                            </span>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                                Name\n                            </span>\n                            <span>\n                                {this.props.definition.name}\n                            </span>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                                Description\n                            </span>\n                            <span>\n                                {this.props.definition.description}\n                            </span>\n                        </Col>\n                    </Row>\n                </div>\n            }\n        </div>\n        )\n    }\n}\n\nexport default Definition;","import React, { Component, Fragment } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast, ButtonGroup } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Definition from \"./definition\"\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Definition\",\n                description: \"\",\n                id: -1\n            },\n            newDefSelected: true,\n            defSearchResults: []\n        };\n\n    }\n\n    flattenArray(elem, key, orig = []) {\n        for (var idx = 0; idx < elem[key].length; idx++) {\n            let r = elem[key][idx];\n\n            orig.push(r.name);\n            if (r[key].length > 0) {\n                orig = this.flattenArray(r, key, orig);\n            }\n        }\n\n        return orig;\n    }\n\n    saveCol(applyUp, applyDown) {\n        let applyTo = [this.props.item.key];\n        if (applyUp)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_upstream'))\n        if (applyDown)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_downstream'))\n\n        confirmAlert({\n            title: 'Confirm Save',\n            message: 'Are you sure to apply this definition to ' + applyTo,\n            buttons: [\n                {\n                    label: 'Apply',\n                    onClick: () => {\n                        let val = '';\n                        if (this.state.selectedDef.description != null)\n                            val = this.state.selectedDef.description;\n\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                \"name\": this.state.selectedDef.name,\n                                \"description\": val,\n                                \"applied_to\": applyTo,\n                                \"id\": this.state.selectedDef.id\n                            })\n                        }\n\n                        eventBus.dispatch(\"loading\", true);\n\n                        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n                            .then(res => res.json())\n                            .then(\n                                (result) => {\n                                    this.props.item.definition = result.value;\n\n                                    this.setState({\n                                        newDefModal: false,\n                                        selectedDef: result.value\n                                    });\n\n                                    eventBus.dispatch(\"loading\", false);\n                                });\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => { }\n                }\n            ]\n        });\n    };\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        this.setState({ newDefModal: true });\n    }\n\n    resetSelectedDef() {\n        if (this.props.item.definition.id == -1) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id\n                }\n            })\n        }\n    }\n\n    editDef() {\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    defSearch = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('def-search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                this.state.defSearchResults = response\n            });\n\n    }\n\n    renderDefSearchMenuItem(option, props) {\n        return <Fragment>\n            <div style={{ fontWeight: 'bold' }}>{option.name}</div>\n            <div>{option.description}</div>\n        </Fragment>;\n    }\n\n    selectDef = (item) => {\n        this.setState({\n            selectDef: item\n        })\n    }\n\n    toggleNew = (isNew) => {\n        this.setState({\n            newDefSelected: isNew\n        })\n\n        if (isNew) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id\n                }\n            })\n        }\n    }\n\n    renderColumn() {\n        const filterBy = () => true;\n        const { defSearchResults } = this.state;\n\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        // this.resetSelectedDef()\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Definition: {this.state.selectedDef.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <row>\n                            <ButtonGroup>\n                                <Button onClick={() => this.toggleNew(true)} variant={this.state.newDefSelected ? \"primary\" : \"secondary\"}>New Definition</Button>\n                                <Button onClick={() => this.toggleNew(false)} variant={this.state.newDefSelected ? \"secondary\" : \"primary\"}>Existing Definition</Button>\n                            </ButtonGroup>\n                        </row>\n                        {!this.state.newDefSelected &&\n                            <Row style={{ paddingTop: \"6px\" }}>\n                                <AsyncTypeahead\n                                    // filterBy={filterBy}\n                                    id=\"def-search\"\n                                    delay={300}\n                                    labelKey=\"search_def\"\n                                    minLength={3}\n                                    onChange={this.selectDef}\n                                    onSearch={this.defSearch}\n                                    options={defSearchResults}\n                                    placeholder='Search'\n                                    renderMenuItemChildren={this.renderDefSearchMenuItem}\n                                    style={{ width: \"97.5%\" }}\n                                />\n\n                                <div style={{ paddingTop: \"10px\" }}>\n                                    <Definition definition={this.state.selectedDef}></Definition>\n                                </div>\n                            </Row>\n                        }\n                        {this.state.newDefSelected &&\n                            <Row>\n                                <Form style={{ paddingTop: '10px' }}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Definition Name</Form.Label>\n                                        <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                            onChange={e => this.state.selectedDef.name = e.target.value}\n                                        />\n                                        <div style={{ height: \"10px\" }}></div>\n                                        <Form.Label>Definition Description</Form.Label>\n                                        <Form.Control as=\"textarea\" rows=\"3\" defaultValue={this.state.selectedDef.description}\n                                            onChange={e => this.state.selectedDef.description = e.target.value}\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                            Will appear in the Dataiku Dataset's column description.\n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form>\n                            </Row>\n                        }\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" onClick={() => this.saveCol(true, true)}>Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol(false, false)}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <h1>{this.props.item.name}</h1>\n            <p class=\"name\">\n                <b>{this.props.item.type}</b> column in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n                <span style={{ padding: \"0px 3px\" }}>/</span>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + ' | ' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        {\n                            this.props.item.definition.id == -1 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Add Definition</Button>{' '}\n                            </div>\n                        }\n                        {\n                            this.props.item.definition.id > 0 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.editDef()}\n                                >Edit Definition</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    <Definition definition={this.state.selectedDef}></Definition>\n                                </div>\n                            </div>\n                        }\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <h1>{this.props.item.id}</h1>\n            <p>Dataset in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td class=\"cellLink\" onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <h1>{this.props.item.name}</h1>\n            <p>Dataiku Project<span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\" id='project-tabs'>\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                {/* <p>No Item to display...</p> */}\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    FaFilter,\n    FaRedo\n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,\n            },\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {\n            var dataikuItem = response[results];\n            if (types.indexOf(dataikuItem.type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }\n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).map(([key, value]) => {\n            if (value == true) {\n                types[types.length] = key.toString();\n            }\n        });\n\n        return types;\n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({\n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        loading: false,\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                });\n        }\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (col) =>\n                this.loadItem([{\n                    key: col,\n                    type: 'column'\n                }])\n            );\n\n            eventBus.on(\"loading\", (isLoading) =>\n                this.setState({ \"loading\": isLoading })\n            );\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{paddingTop: '20px', paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                labelKey=\"key\"\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{\n                                    backgroundColor: \"#66a3ff\",\n                                    color: \"#FFFFFF\",\n                                    cursor: 'pointer',\n                                    height: '34px',\n                                    padding: \"8px\",\n                                    width: '34px'\n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                {openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        {/* <Col xs={1}>\n                            <h5>Filter By: </h5>\n                        </Col> */}\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight: \"1.0em\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    : null}\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\nfunction createDsLinkThread(proj, ds) {\n    return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n}\n\nfunction createDsLinkTag(proj, ds) {\n    return '<a href=\"' + this.createDsLinkThread(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkTag,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component, useCallback, useState } from 'react';\nimport ReactFlow, { Controls } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\nimport { createGraphLayout } from '../common/layout.js';\n\nclass Lineage extends Component {\n\n    // CONSTANT VALUES\n    static DEFAULT_CONTAINER_HEIGHT = 500;\n    static DEFAULT_CONTAINER_WIDTH = 1030;\n\n    static DEFAULT_NODE_HEIGHT = 60;\n    static DEFAULT_NODE_WIDTH = 200;\n\n    constructor(props) {\n        super(props);\n\n        console.log('Lineage :: props == ');\n        console.log(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n            nodes: [],\n            edges: []\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        let basePositionX = 0;\n        let basePositionY = 0;\n\n        var baseElementId = 'base';\n        var baseNode = {\n            id: baseElementId,\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: basePositionX, y: basePositionY },\n            style: { backgroundColor: '#FFF', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold', height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        };\n\n        var elements = [baseNode];\n        var _nodes = [baseNode];\n        var _edges = [];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n            var node = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: basePositionX, y: basePositionY },                     \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'up_' + x.toString();\n            var node ={\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: basePositionX, y: basePositionY },         \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }        \n\n        this.setState({\n            edges: _edges,\n            elements: elements,\n            nodes: _nodes\n        });\n\n        createGraphLayout(elements)\n            .then((els) => this.setState({elements: els}))\n            .catch((err) => console.error(err));\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {      \n        console.log('Render() :: this.state == ');\n        console.log(this.state);\n\n        // SEPARATED NODES AND EDGES\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }        \n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: Lineage.DEFAULT_CONTAINER_HEIGHT, width: \"100%\" }}>\n                {this.state.elements && \n                <ReactFlow \n                    onLoad={this.onLoad} \n                    elements={this.state.elements}\n                    nodeTypes={this.nodeTypes} \n                    // onConnect={onConnect}\n                    // onEdgesChange={onEdgesChange}\n                    // onNodesChange={onNodesChange}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                >\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );        \n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  var project = \"\";\n  var dataset = \"\";\n  var column = \"\";\n\n  function formatData(_data)  {  \n    var project_splits = _data.project.split(' | ');\n    switch(project_splits.length) {\n      case 1:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n      case 2:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        break;\n      case 3:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        column = project_splits[2];\n        break;\n      default:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n    }\n  }\n\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '|' + data.dataset);\n  }\n\n  formatData(data);\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', height: '100%', padding: '10px', textAlign: 'center', width: '100%' }}>\n        <div style={{ fontWeight: 'bold' }}>{project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{dataset}</a>\n        </div>\n        <div>\n          {column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n        style={{ background: '#555' }}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});","import Elk from \"elkjs\";\nimport { isNode } from \"react-flow-renderer\";\nimport Lineage from \"../components/lineage\";\n\n// const DEFAULT_NODE_WIDTH = 200;\n// const DEFAULT_NODE_HEIGHT = 60;\n\nexport const createGraphLayout = async (elements) => {\n  const nodes = [];\n  const edges = [];\n\n  const elk = new Elk({\n    defaultLayoutOptions: {\n      \"elk.algorithm\": \"layered\",\n      \"elk.contentAlignment\": \"V_CENTER\",\n      \"elk.direction\": \"RIGHT\",\n      // \"elk.edgeLabels.inline\": true,\n      \"elk.edgeRouting\": \"SPLINES\",      \n      \"elk.layered.spacing.nodeNodeBetweenLayers\": 50,\n      \"elk.padding\": \"[top=50,left=150,bottom=25,right=25]\",\n      \"elk.spacing.nodeNode\": 25,      \n    }\n  });\n\n  elements.forEach((el) => {\n    if (isNode(el)) {\n      nodes.push({\n        id: el.id,\n        width: el.__rf?.width ?? Lineage.DEFAULT_NODE_WIDTH,\n        height: el.__rf?.height ?? Lineage.DEFAULT_NODE_HEIGHT\n      });\n    } else {\n      edges.push({\n        id: el.id,\n        target: el.target,\n        source: el.source\n      });\n    }\n  });\n\n  const newGraph = await elk.layout({\n    id: \"root\",\n    children: nodes,\n    edges: edges\n  });\n\n  return elements.map((el) => {\n    if (isNode(el)) {\n      const node = newGraph?.children?.find((n) => n.id === el.id);\n      el.sourcePosition = \"right\";\n      el.targetPosition = \"left\";\n      if (node?.x && node?.y && node?.width && node?.height) {\n        el.position = {\n          x: node.x - node.width / 2 + Math.random() / 1000,\n          y: node.y - node.height / 2\n        };\n      }\n    }\n\n    return el;\n  });\n};\n"],"sourceRoot":""}