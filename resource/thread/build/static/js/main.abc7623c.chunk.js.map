{"version":3,"sources":["components/definition.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js","common/layout.js"],"names":["Definition","props","this","definition","id","style","maxWidth","border","borderRadius","padding","Row","Col","fontWeight","paddingRight","name","description","Component","DataikuItem","defSearch","term","url","window","getWebAppBackendUrl","setState","loading","fetch","method","headers","then","res","json","response","state","defSearchResults","selectDef","item","selectedDef","toggleNew","isNew","newDefSelected","comment","applied_to","newDefModal","elem","key","orig","idx","length","r","push","flattenArray","applyUp","applyDown","applyTo","concat","confirmAlert","title","message","buttons","label","onClick","val","requestOptions","body","JSON","stringify","eventBus","dispatch","result","value","deets","full_ds_name","type","arrayTags","tags","forEach","element","Button","variant","size","alert","object_type","renderDataset","renderProject","renderColumn","prevProps","prevState","resetSelectedDef","col","ds","proj","option","lineage","buildLineage","Modal","show","animation","onHide","Header","closeButton","Title","Body","Container","ButtonGroup","float","paddingTop","delay","labelKey","minLength","onChange","onSearch","options","placeholder","renderMenuItemChildren","renderDefSearchMenuItem","width","Form","Group","className","Label","Control","disabled","defaultValue","e","target","as","rows","Text","Footer","saveCol","xs","class","Common","getIconForDataikuItemType","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","Tab","eventKey","def","newDef","editDef","buildTagsString","meta","listItems","schema","map","openColumn","Table","striped","bordered","hover","dataSetRows","datasets","split","paddingLeft","paddingBottom","href","createProjectLink","projectKey","folder","itemDetails","renderItemDetailsByType","App","filterDataikuItems","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","toString","entries","filters","sort","handleOnChange","tempFilters","loadItem","loadItemByKey","itemKey","obj_type","splitCt","console","log","selectedItem","selectedItemType","search","searchResults","dataiku","undefined","column","currentUser","openFilter","$","document","ready","rendered","navDeepLink","on","navToObject","isLoading","parts","top","location","obj","base_url","searchRef","React","createRef","fontSize","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","rescan","height","cursor","filterBy","replaceAll","ref","toggleFilter","backgroundColor","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","event","callback","addEventListener","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","createDatasetLink","projkey","createDatasetLinkTag","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","basePositionX","basePositionY","baseElementId","baseNode","position","y","DEFAULT_NODE_HEIGHT","DEFAULT_NODE_WIDTH","sourcePosition","targetPosition","draggable","elements","_nodes","_edges","down_res","eval","up_res","lbl","splits","elementId","edgeId","edge","source","arrowHeadType","count","animated","edges","nodes","createGraphLayout","els","err","last_ds","flowInstance","nodeTypes","customFlowNode","reactFlowInstance","rv","setTimeout","fitView","useStoreState","useStoreActions","actions","DEFAULT_CONTAINER_HEIGHT","onLoad","onFitView","onElementsRemove","showInteractive","DEFAULT_CONTAINER_WIDTH","memo","isConnectable","_data","project_splits","formatData","preventDefault","a","elk","Elk","defaultLayoutOptions","el","isNode","__rf","layout","children","newGraph","find","n","Math","random"],"mappings":"kbAoDeA,E,kDA7CX,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OAAQ,6BACHC,KAAKD,MAAME,WAAWC,IAAM,GACzB,yBAAKC,MAAO,CAAEC,SAAU,QAASC,OAAQ,iBAAkBC,aAAc,MAAOC,QAAS,SACrF,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMN,MAAO,CAAEO,WAAY,OAAQC,aAAc,SAAjD,MAGA,8BACKX,KAAKD,MAAME,WAAWC,MAInC,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMN,MAAO,CAAEO,WAAY,OAAQC,aAAc,SAAjD,QAGA,8BACKX,KAAKD,MAAME,WAAWW,QAInC,kBAACJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMN,MAAO,CAAEO,WAAY,OAAQC,aAAc,SAAjD,eAGA,8BACKX,KAAKD,MAAME,WAAWY,qB,GApC9BC,a,SC2eVC,G,yDA/dX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAiLViB,UAAY,SAACC,GACT,IAKIC,EAAMC,OAAOC,oBAAoB,cAAgB,SAAWH,EAChE,EAAKI,SAAS,CAAEC,SAAS,IACzBC,MAAML,EAPiB,CACnBM,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAM1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKC,MAAMC,iBAAmBF,MA7LvB,EAwMnBG,UAAY,SAACC,GACT,EAAKZ,SAAS,CACVa,YAAaD,KA1MF,EA8MnBE,UAAY,SAACC,GACT,EAAKf,SAAS,CACVgB,eAAgBD,IAGhBA,EACA,EAAKf,SAAS,CACVa,YAAa,CACTtB,KAAM,EAAKb,MAAMkC,KAAKrB,KACtBC,YAAa,EAAKd,MAAMkC,KAAKK,QAC7BpC,IAAK,KAKb,EAAKmB,SAAS,CACVa,YAAa,CACTtB,KAAM,EAAKb,MAAMkC,KAAKhC,WAAWW,KACjC2B,WAAY,EAAKxC,MAAMkC,KAAKhC,WAAWsC,WACvC1B,YAAa,EAAKd,MAAMkC,KAAKhC,WAAWY,YACxCX,GAAI,EAAKH,MAAMkC,KAAKhC,WAAWC,OA/N3C,EAAK4B,MAAQ,CACTU,aAAa,EACbN,YAAa,CACTtB,KAAM,iBACNC,YAAa,GACbX,IAAK,GAETmC,gBAAgB,EAChBN,iBAAkB,IAXP,E,gDAgBnB,SAAaU,EAAMC,GACf,IADgC,IAAZC,EAAW,uDAAJ,GAClBC,EAAM,EAAGA,EAAMH,EAAKC,GAAKG,OAAQD,IAAO,CAC7C,IAAIE,EAAIL,EAAKC,GAAKE,GAElBD,EAAKI,KAAKD,EAAElC,MACRkC,EAAEJ,GAAKG,OAAS,IAChBF,EAAO3C,KAAKgD,aAAaF,EAAGJ,EAAKC,IAIzC,OAAOA,I,qBAGX,SAAQM,EAASC,GAAY,IAAD,OACpBC,EAAU,CAACnD,KAAKD,MAAMkC,KAAKS,KAC3BO,IACAE,EAAUA,EAAQC,OAAOpD,KAAKgD,aAAahD,KAAKD,MAAMkC,KAAM,sBAC5DiB,IACAC,EAAUA,EAAQC,OAAOpD,KAAKgD,aAAahD,KAAKD,MAAMkC,KAAM,wBAEhEoB,uBAAa,CACTC,MAAO,eACPC,QAAS,4CAA8CJ,EACvDK,QAAS,CACL,CACIC,MAAO,QACPC,QAAS,WACL,IAAIC,EAAM,GACgC,MAAtC,EAAK7B,MAAMI,YAAYrB,cACvB8C,EAAM,EAAK7B,MAAMI,YAAYrB,aAEjC,IAAM+C,EAAiB,CACnBpC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBoC,KAAMC,KAAKC,UAAU,CACjB,KAAQ,EAAKjC,MAAMI,YAAYtB,KAC/B,YAAe+C,EACf,WAAcR,EACd,GAAM,EAAKrB,MAAMI,YAAYhC,MAIrC8D,IAASC,SAAS,WAAW,GAE7B1C,MAAMJ,OAAOC,oBAAoB,eAAgBwC,GAC5ClC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACwC,GACG,EAAKnE,MAAMkC,KAAKhC,WAAaiE,EAAOC,MAEpC,EAAK9C,SAAS,CACVmB,aAAa,EACbN,YAAagC,EAAOC,QAGxBH,IAASC,SAAS,WAAW,QAIjD,CACIR,MAAO,SACPC,QAAS,mB,0BAMzB,WACI,OAAO,kBAAClD,EAAA,EAAD,KACH,kBAAC,IAAD,CAAS4D,MAAOpE,KAAKD,MAAMkC,KAAMoC,aAAcrE,KAAKD,MAAMkC,KAAKrB,KAAM0D,KAAMtE,KAAKD,MAAMuE,U,6BAI9F,SAAgBC,GACZ,IAAIC,EAAO,GAQX,OANAD,EAAUE,SAAQ,SAAAC,GACdF,EAAKA,EAAK3B,QAAU,kBAAC8B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,MAC9CH,MAIFF,I,iCAGX,SAAoB9B,GAChBoC,MAAMpC,K,qCAGV,WACI,OAAQ1C,KAAKD,MAAMgF,aACf,IAAK,UACD,OAAO/E,KAAKgF,gBAChB,IAAK,UACD,OAAOhF,KAAKiF,gBAChB,IAAK,SACD,OAAOjF,KAAKkF,eAChB,IAAK,UACD,OAAO,kBAACzE,EAAA,EAAD,KACH,6E,gCAKhB,SAAmB0E,EAAWC,GACI,UAA1BpF,KAAKD,MAAMgF,cACW,MAAlBI,EAAUlD,MAAmC,MAAnBjC,KAAKD,MAAMkC,MAId,MAAlBkD,EAAUlD,MAAmC,MAAnBjC,KAAKD,MAAMkC,MAAkBkD,EAAUlD,KAAK/B,KAAOF,KAAKD,MAAMkC,KAAK/B,KAHlGF,KAAKqF,qB,oBASjB,WACIrF,KAAKqB,SAAS,CAAEmB,aAAa,M,8BAGjC,YAC0C,GAAlCxC,KAAKD,MAAMkC,KAAKhC,WAAWC,GAC3BF,KAAKqB,SAAS,CACVa,YAAa,CACTtB,KAAMZ,KAAKD,MAAMkC,KAAKrB,KACtBC,YAAab,KAAKD,MAAMkC,KAAKK,QAC7BpC,IAAK,KAKbF,KAAKqB,SAAS,CACVa,YAAa,CACTtB,KAAMZ,KAAKD,MAAMkC,KAAKhC,WAAWW,KACjCC,YAAab,KAAKD,MAAMkC,KAAKhC,WAAWY,YACxCX,GAAIF,KAAKD,MAAMkC,KAAKhC,WAAWC,GAC/BqC,WAAYvC,KAAKD,MAAMkC,KAAKhC,WAAWsC,gB,qBAMvD,WACIvC,KAAKqF,mBACLrF,KAAKqB,SAAS,CAAEmB,aAAa,M,wBAGjC,SAAW8C,GACPtB,IAASC,SAAS,iBAAkBqB,K,yBAGxC,SAAYC,GACRvB,IAASC,SAAS,kBAAmBsB,K,yBAGzC,SAAYC,GACRxB,IAASC,SAAS,kBAAmBuB,K,qCAkBzC,SAAwBC,EAAQ1F,GAC5B,OAAO,kBAAC,WAAD,KACH,yBAAKI,MAAO,CAAEO,WAAY,SAAW+E,EAAO7E,MAC5C,6BAAM6E,EAAO5E,gB,0BAoCrB,WAAgB,IAAD,OAEHkB,EAAqB/B,KAAK8B,MAA1BC,iBAEJ2D,EAAU1F,KAAK2F,eAKnB,OAAO,kBAAClF,EAAA,EAAD,KACH,kBAACmF,EAAA,EAAD,CAAOf,KAAK,KAAKgB,KAAM7F,KAAK8B,MAAMU,YAAasD,WAAW,EAAOC,OALjD,kBAAM,EAAK1E,SAAS,CAAEmB,aAAa,MAM/C,kBAACoD,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,0BAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,KACI,kBAAC6F,EAAA,EAAD,CAAalG,MAAO,CAAEmG,MAAO,UACxBtG,KAAK8B,MAAMO,eAER,kBAACsC,EAAA,EAAD,CAAQjB,QAAS,kBAAM,EAAKvB,WAAU,KAAtC,kBAEJ,kBAACwC,EAAA,EAAD,CAAQjB,QAAS,kBAAM,EAAKvB,WAAU,KAAtC,uBAGNnC,KAAK8B,MAAMO,gBACT,kBAAC7B,EAAA,EAAD,CAAKL,MAAO,CAAEoG,WAAY,SACtB,kBAAC,IAAD,CAEIrG,GAAG,aACHsG,MAAO,IACPC,SAAS,aACTC,UAAW,EACXC,SAAU3G,KAAKgC,UACf4E,SAAU5G,KAAKgB,UACf6F,QAAS9E,EACT+E,YAAY,SACZC,uBAAwB/G,KAAKgH,wBAC7B7G,MAAO,CAAE8G,MAAO,WAGpB,yBAAK9G,MAAO,CAAEoG,WAAY,SACtB,kBAAC,EAAD,CAAYtG,WAAYD,KAAK8B,MAAMI,gBAI9ClC,KAAK8B,MAAMO,gBACR,kBAAC7B,EAAA,EAAD,KACI,kBAAC0G,EAAA,EAAD,CAAM/G,MAAO,CAAEoG,WAAY,SACvB,kBAACW,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAClB,yBAAKjH,MAAO,CAAEI,QAAS,aACnB,kBAAC2G,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAS,OAAOjD,KAAK,OAAOkD,aAAcxH,KAAK8B,MAAMI,YAAYhC,MAEnF,kBAACgH,EAAA,EAAKG,MAAN,wBACA,kBAACH,EAAA,EAAKI,QAAN,CAAchD,KAAK,OAAOkD,aAAcxH,KAAK8B,MAAMI,YAAYtB,KAC3D+F,SAAU,SAAAc,GAAC,OAAI,EAAK3F,MAAMI,YAAYtB,KAAO6G,EAAEC,OAAOvD,SAE1D,yBAAKhE,MAAO,CAAEI,QAAS,aACnB,kBAAC2G,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,SAAS,OAAOjD,KAAK,OAAOkD,aAAcxH,KAAK8B,MAAMI,YAAYK,cAEnF,kBAAC2E,EAAA,EAAKG,MAAN,+BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcK,GAAG,WAAWC,KAAK,IAAIJ,aAAcxH,KAAK8B,MAAMI,YAAYrB,YACtE8F,SAAU,SAAAc,GAAC,OAAI,EAAK3F,MAAMI,YAAYrB,YAAc4G,EAAEC,OAAOvD,SAEjE,kBAAC+C,EAAA,EAAKW,KAAN,CAAWT,UAAU,cAArB,iEASxB,kBAACxB,EAAA,EAAMkC,OAAP,KAEI,kBAACnD,EAAA,EAAD,CAAQC,QAAQ,YAAYlB,QAAS,kBAAM,EAAKqE,SAAQ,GAAM,KAA9D,oBACA,kBAACpD,EAAA,EAAD,CAAQC,QAAQ,UAAUlB,QAAS,kBAAM,EAAKqE,SAAQ,GAAO,KAA7D,UAGR,kBAACvH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuH,GAAG,QACJ,yBAAKC,MAAM,QACNC,IAAOC,0BAA0BnI,KAAKD,MAAMgF,YAAa,UAGlE,kBAACtE,EAAA,EAAD,KACI,4BAAKT,KAAKD,MAAMkC,KAAKrB,MACrB,uBAAGqH,MAAM,QACL,2BAAIjI,KAAKD,MAAMkC,KAAKqC,MADxB,cAC4C,0BAAM8C,UAAU,WAAW1D,QAAS,kBAAM,EAAK0E,YAAY,EAAKrI,MAAMkC,KAAKoG,WAAWrI,KAAKD,MAAMkC,KAAKoG,SAC9I,0BAAMlI,MAAO,CAAEI,QAAS,YAAxB,KACA,0BAAM6G,UAAU,WAAW1D,QAAS,kBAAM,EAAK4E,YAAY,EAAKvI,MAAMkC,KAAKoG,QAAU,IAAM,EAAKtI,MAAMkC,KAAKsG,WAAWvI,KAAKD,MAAMkC,KAAKsG,YAIlJ,kBAAC/H,EAAA,EAAD,KACI,yBAAKL,MAAO,CAAEoG,WAAY,SACtB,kBAACiC,EAAA,EAAD,CAAMC,iBAAiB,aAAarB,UAAU,QAC1C,kBAACsB,EAAA,EAAD,CAAKC,SAAS,aAAarF,MAAM,aAAasF,KAAG,IAEP,GAAlC5I,KAAKD,MAAMkC,KAAKhC,WAAWC,IAC3B,6BACI,kBAACyE,EAAA,EAAD,CAAQC,QAAQ,UACZlB,QAAS,kBAAM,EAAKmF,WADxB,kBAEyB,KAI7B7I,KAAKD,MAAMkC,KAAKhC,WAAWC,GAAK,GAChC,6BACI,kBAACyE,EAAA,EAAD,CAAQC,QAAQ,UACZlB,QAAS,kBAAM,EAAKoF,YADxB,mBAE0B,IAC1B,yBAAK3I,MAAO,CAAEI,QAAS,SACnB,kBAAC,EAAD,CAAYN,WAAYD,KAAK8B,MAAMI,iBAKnD,kBAACwG,EAAA,EAAD,CAAKC,SAAS,UAAUrF,MAAM,UAAUsF,KAAG,GACvC,yBAAKX,MAAM,WAAWvC,U,2BAQ9C,WAAiB,IAAD,OACRlB,EAAOxE,KAAK+I,gBAAgB/I,KAAKD,MAAMkC,KAAK+G,KAAKxE,MACjDkB,EAAU1F,KAAK2F,eAEfsD,EAAYjJ,KAAKD,MAAMkC,KAAKiH,OAAOC,KAAI,SAAC7D,GAAD,OACvC,wBAAI5B,QAAS,kBAAM,EAAK0F,WAAW9D,EAAI5C,OACnC,4BAAK4C,EAAI1E,MACT,4BAAK0E,EAAIhB,MACT,4BAAKgB,EAAIhD,aAIjB,OAAO,kBAAC7B,EAAA,EAAD,KACH,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuH,GAAG,QACJ,yBAAKC,MAAM,QACNC,IAAOC,0BAA0BnI,KAAKD,MAAMgF,YAAa,UAGlE,kBAACtE,EAAA,EAAD,KACI,4BAAKT,KAAKD,MAAMkC,KAAK/B,IACrB,yCAAc,0BAAMkH,UAAU,WAAW1D,QAAS,kBAAM,EAAK0E,YAAY,EAAKrI,MAAMkC,KAAKoG,WAAWrI,KAAKD,MAAMkC,KAAKoG,UACpH,yBAAKJ,MAAM,QAAQzD,KAI3B,kBAAChE,EAAA,EAAD,CAAKL,MAAO,CAAEoG,WAAY,SACtB,kBAACiC,EAAA,EAAD,CAAMC,iBAAiB,UAAUvI,GAAG,2BAA2BkH,UAAU,QACrE,kBAACsB,EAAA,EAAD,CAAKC,SAAS,UAAUrF,MAAM,WAC1B,yBAAK2E,MAAM,WAAWvC,IAE1B,kBAACgD,EAAA,EAAD,CAAKC,SAAS,UAAUrF,MAAM,UAAUsF,KAAG,GACvC,kBAACS,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,oCACA,oCACA,4CAGR,+BACKP,U,2BAS7B,WAAiB,IAAD,OACRzE,EAAOxE,KAAK+I,gBAAgB/I,KAAKD,MAAMkC,KAAKuC,MAC5CiF,EAAczJ,KAAKD,MAAMkC,KAAKyH,SAASP,KAAI,SAAC7D,GAAD,OAC3C,4BACI,wBAAI2C,MAAM,WAAWvE,QAAS,kBAAM,EAAK4E,YAAYhD,KAAOA,EAAIqE,MAAM,KAAK,QAInF,OAAO,kBAAClJ,EAAA,EAAD,KACH,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuH,GAAG,QACJ,yBAAKC,MAAM,QACNC,IAAOC,0BAA0BnI,KAAKD,MAAMgF,YAAa,UAGlE,kBAACtE,EAAA,EAAD,KACI,4BAAKT,KAAKD,MAAMkC,KAAKrB,KAAK,0BAAMT,MAAO,CAAEyJ,YAAa,MAAOC,cAAe,QACxE,uBAAGC,KAAM5B,IAAO6B,kBAAkB/J,KAAKD,MAAMkC,KAAK+H,YAAatC,OAAO,UAAS,kBAAC,IAAD,CAAoB7C,KAAM,QAG7G,qCAAU,0BAAM1E,MAAO,CAAEyJ,YAAa,QAA5B,MACF5J,KAAKD,MAAMkC,KAAKgI,OADd,YAEV,yBAAKhC,MAAM,QAAQzD,KAG3B,kBAAChE,EAAA,EAAD,KACI,yBAAKL,MAAO,CAAEoG,WAAY,SACtB,kBAACiC,EAAA,EAAD,CAAMC,iBAAiB,WAAWrB,UAAU,OAAOlH,GAAG,gBAClD,kBAACwI,EAAA,EAAD,CAAKC,SAAS,WAAWrF,MAAM,WAAWsF,KAAG,GACzC,kBAACS,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,sCAGR,+BACKC,W,oBAUjC,WACI,IAAIxH,EACAiI,EAAclK,KAAKmK,0BAYvB,OAVIlI,EADmB,MAAnBjC,KAAKD,MAAMkC,KACJ,kBAACzB,EAAA,EAAD,CAAK4G,UAAU,qBAEjB8C,GAGE,kBAAC1J,EAAA,EAAD,MAMP,yBAAKyH,MAAM,gBACNhG,O,GA1dSnB,cCwYXsJ,E,kDArXX,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IAmBVsK,mBAAqB,SAACxI,GAClB,IAAIyI,EAAQ,EAAKC,mBAEbC,EAAS,GASb,OARAC,OAAOC,KAAK7I,GAAU4C,SAAQ,SAAUkG,GACpC,IAAIC,EAAc/I,EAAS8I,GACvBL,EAAMO,QAAQD,EAAY7F,YAAY+F,aAAe,IACrDN,EAAOA,EAAO3H,QAAU+H,MAKzBJ,GAhCQ,EAmCnBD,iBAAmB,WACf,IAAID,EAAQ,GAOZ,OANAG,OAAOM,QAAQ,EAAKjJ,MAAMkJ,SAASC,OAAO9B,KAAI,YAAmB,IAAD,mBAAhBzG,EAAgB,KAC/C,GAD+C,OAExD4H,EAAMA,EAAMzH,QAAUH,EAAIoI,eAI3BR,GA3CQ,EA8CnBY,eAAiB,SAAC5G,GACd,IAAI6G,EAAc,EAAKrJ,MAAMkJ,QAC7BG,EAAY7G,IAAS6G,EAAY7G,GAEjC,EAAKjD,SAAS,CACV2J,QAASG,KAnDE,EAuDnBC,SAAW,SAACnJ,GACR,EAAKZ,SAAS,CAAEC,SAAS,IACrBW,EAAKY,OAAS,GACd,EAAKwI,cAAcpJ,EAAK,GAAGS,MA1DhB,EA8DnB2I,cAAgB,SAACC,GACb,IAKIC,EAAW,UACXC,EAAWF,EAAQ3B,MAAM,KAAK9G,OAAS,EAC5B,GAAX2I,EACAD,EAAW,UACK,GAAXC,IACLD,EAAW,UAEfhK,MAAMJ,OAAOC,oBAAoB,aAAe,QAAUkK,EAZnC,CACnB9J,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAW1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH4J,QAAQC,IAAI,gBACZD,QAAQC,IAAI7J,GAEZ,EAAKR,SAAS,CACVC,SAAS,EACTqK,aAAc9J,EACd+J,iBAAkBL,QApFf,EAyFnBM,OAAS,SAAC5K,GACN,IAKIC,EAAMC,OAAOC,oBAAoB,UAAY,SAAWH,EAC5D,EAAKI,SAAS,CAAEC,SAAS,IACzBC,MAAML,EAPiB,CACnBM,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAM1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,IAAI2I,EAAS,EAAKH,mBAAmBxI,GAErC,EAAKR,SAAS,CACVyK,cAAetB,EACflJ,SAAS,QArGrB,EAAKQ,MAAQ,CACTiK,aAASC,EACTpB,YAAa,KACbI,QAAS,CACLiB,QAAQ,EACR1D,SAAS,EACTF,SAAS,GAEb6D,YAAa,GACb5K,SAAS,EACT6K,YAAY,EACZR,aAAc,KACdC,iBAAkB,KAClBE,cAAe,IAhBJ,E,qDA6GnB,WAAqB,IAAD,OAEhB3K,OAAOiL,EAAEC,UAAUC,OAAM,WAErB/K,MAAMJ,OAAOC,oBAAoB,aAC5BM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAEH,EAAKR,SAAS,CAAE0K,QAAS5K,OAAO4K,QAASG,YAAarK,EAAQ,UAC9D,EAAKR,SAAS,CAAEkL,UAAU,IAC1B,EAAKlL,SAAS,CAAEC,SAAS,IAEzB,EAAKkL,cAELxI,IAASyI,GAAG,mBAAmB,SAAClH,GAC5B,EAAK6F,SAAS,CAAC,CACX1I,IAAK6C,EACLR,YAAa,aAKjB,EAAK2H,YAAYnH,MAIrBvB,IAASyI,GAAG,mBAAmB,SAACjH,GAC5B,EAAK4F,SAAS,CAAC,CACX1I,IAAK8C,EACLT,YAAa,aAKjB,EAAK2H,YAAYlH,MAIrBxB,IAASyI,GAAG,kBAAkB,SAACnH,GAC3B,EAAK8F,SAAS,CAAC,CACX1I,IAAK4C,EACLP,YAAa,YAKjB,EAAK2H,YAAYpH,MAIrBtB,IAASyI,GAAG,WAAW,SAACE,GAAD,OACnB,EAAKtL,SAAS,CAAE,QAAWsL,e,yBAM/C,WACI,IAAIC,EAAQzL,OAAO0L,IAAIC,SAAShD,KAAKH,MAAM,OAEvCiD,EAAM/J,OAAS,GACf7C,KAAKqL,cAAcuB,EAAM,M,yBAIjC,SAAYG,GACR,IAAIC,EAAW7L,OAAO0L,IAAIC,SAAShD,KAAKH,MAAM,KAAK,GACnDxI,OAAO0L,IAAIC,SAAShD,KAAOkD,EAAW,MAAQD,I,oBAGlD,WAAU,IAAD,OACL/M,KAAKqB,SAAS,CAAEC,SAAS,IACzBC,MAAMJ,OAAOC,oBAAoB,SAC5BM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKR,SAAS,CAAEC,SAAS,S,oCAIrC,SAAuBmE,EAAQ1F,GAC3B,OAAO,kBAAC,WAAD,KAEH,0BAAMI,MAAO,CAAEQ,aAAc,QACxBuH,IAAOC,0BAA0B1C,EAAOV,YAAa,SAEnC,UAAtBU,EAAOV,aACJ,8BACI,0BAAM5E,MAAO,IAAb,YACA,0BAAMA,MAAO,IAAKsF,EAAO/C,IAAIiH,MAAM,KAAK,IAExC,0BAAMxJ,MAAO,CAAEI,QAAS,YAAxB,KAEA,0BAAMJ,MAAO,IAAb,YACA,0BAAMA,MAAO,CAAEI,QAAS,YAAckF,EAAO/C,IAAIiH,MAAM,KAAK,IAE5D,0BAAMxJ,MAAO,CAAEI,QAAS,YAAxB,KAEA,yCAAoB,0BAAMJ,MAAO,CAAEO,WAAY,OAAQH,QAAS,YAAckF,EAAO7E,OAGtE,WAAtB6E,EAAOV,aACJ,8BACI,0BAAM5E,MAAO,IAAb,YACA,0BAAMA,MAAO,IAAKsF,EAAO/C,IAAIiH,MAAM,KAAK,IAExC,0BAAMxJ,MAAO,CAAEI,QAAS,YAAxB,KAEA,0BAAMJ,MAAO,IAAb,YACA,0BAAMA,MAAO,CAAEI,QAAS,UAAWG,WAAY,SAAW+E,EAAO7E,OAGlD,WAAtB6E,EAAOV,aACJ,8BACI,2CAAsB,0BAAM5E,MAAO,CAAEO,WAAY,OAAQH,QAAS,YAAckF,EAAO7E,U,0BAOvG,WACIZ,KAAKqB,SAAS,CAAE8K,YAAanM,KAAK8B,MAAMqK,e,oBAG5C,WAAU,IAAD,OACLnM,KAAKiN,UAAYC,IAAMC,YAkBvB,MAAwFnN,KAAK8B,MAArFkJ,EAAR,EAAQA,QAAkBmB,GAA1B,EAAiB7K,QAAjB,EAA0B6K,YAAYL,EAAtC,EAAsCA,cAAeH,EAArD,EAAqDA,aAAcC,EAAnE,EAAmEA,iBAKnE,OAFA5L,KAAK4K,YAAc,kBAAC,EAAD,CAAa3I,KAAM0J,EAAc5G,YAAa6G,IAI7D,kBAACxF,EAAA,EAAD,CAAWjG,MAAO,CAAEoG,WAAY,SAC5B,yBAAK0B,MAAM,+CACP,yBAAKA,MAAM,mBACP,uBAAGA,MAAM,eAAe9H,MAAO,CAAEO,WAAW,OAAQ0M,SAAS,SAA7D,UACA,4BAAQnF,MAAM,iBAAiB3D,KAAK,SAAS+I,iBAAe,WAAWC,iBAAe,iBAAiBC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC3K,0BAAMxF,MAAM,yBAEhB,yBAAKA,MAAM,2BAA2B/H,GAAG,iBACrC,wBAAI+H,MAAM,oCAQV,wBAAIA,MAAM,cACN,wBAAI9H,MAAO,CAACI,QAAQ,SAChB,kBAAC,IAAD,CAAQmD,QAAS,kBAAM,EAAKgK,UAAUvN,MAAO,CAAE8G,MAAO,OAAQ0G,OAAQ,OAAQC,OAAQ,cAE1F,wBAAI3F,MAAM,YACN,uBAAGA,MAAM,YAAYjI,KAAK8B,MAAMoK,kBAgBpD,kBAAC1L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAK2G,UAAU,cAAcjH,MAAO,CAAE8G,MAAO,SACzC,kBAAC,IAAD,CACI4G,SA/CP,kBAAM,GAgDC3N,GAAG,eACHsG,MAAO,IACPC,SAAU,SAAAhB,GACN,OAAOA,EAAO/C,IAAIoL,WAAW,IAAK,QAGtCC,IAAK/N,KAAKiN,UACVvG,UAAW,EACXC,SAAU3G,KAAKoL,SACfxE,SAAU5G,KAAK6L,OACfhF,QAASiF,EACThF,YAAY,SACZC,uBAAwB/G,KAAK+G,uBAC7B5G,MAAO,CAAE8G,MAAO,WAEpB,yBAAKG,UAAU,mBACX,kBAAC,IAAD,CAAU1D,QAAS,kBAAM,EAAKsK,gBAAgB7N,MAAO,CACjD8N,gBAAiB,UACjBC,MAAO,UACPN,OAAQ,UACRD,OAAQ,OACRpN,QAAS,MACT0G,MAAO,cAO1BkF,EACG,kBAAC3L,EAAA,EAAD,CAAK4G,UAAU,SAASjH,MAAO,CAAEgO,UAAW,UAIvC1D,OAAOM,QAAQC,GAAS7B,KAAI,YAAmB,IAAD,mBAAhBzG,EAAgB,KAAXyB,EAAW,KAC3C,OACI,kBAAC1D,EAAA,EAAD,CAAKuH,GAAI,GACL,yBAAKZ,UAAU,eAAe1E,IAAKA,GAC/B,2BACI4B,KAAK,WACLpE,GAAE,iBAAYwC,GACd9B,KAAM8B,EACNyB,MAAOzB,EACP0L,QAASjK,EACTwC,SAAU,kBAAM,EAAKuE,eAAexI,IACpCvC,MAAO,CAAEkO,YAAa,SAE1B,2BAAOC,QAAO,iBAAY5L,IAAQA,EAAlC,WAMlB,KAEN,kBAAClC,EAAA,EAAD,KACI,yBAAKL,MAAO,CAAEI,QAAS,SAClBP,KAAK8B,MAAMR,QACR,kBAACiN,EAAA,EAAD,CAASzI,UAAU,SAAS0I,KAAK,UAC7B,0BAAMpH,UAAU,mBAAhB,eAEF,OAGd,kBAAC5G,EAAA,EAAD,KACKR,KAAK4K,kB,GA/WR9J,aCtBE2N,QACW,cAA7BtN,OAAO2L,SAAS4B,UAEe,UAA7BvN,OAAO2L,SAAS4B,UAEhBvN,OAAO2L,SAAS4B,SAASC,MACvB,2DCVNC,IAASC,OAOP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzC,SAAS0C,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAc3C,MACrB5K,MAAK,SAAAwN,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5D,QAAQ4D,MAAMA,EAAM9L,a,gCEzI5B,IAAMS,EAAW,CACbyI,GADa,SACV6C,EAAOC,GACRlD,SAASmD,iBAAiBF,GAAO,SAAC7H,GAAD,OAAO8H,EAAS9H,EAAEgI,YAErDxL,SAJa,SAIJqL,EAAOI,GACdrD,SAASsD,cAAc,IAAIC,YAAYN,EAAO,CAAEG,OAAQC,MAE1DG,OAPa,SAONP,EAAOC,GACZlD,SAASyD,oBAAoBR,EAAOC,KAIzBvL,O,gCCZjB,4BA8BA,IAAMkE,EAAS,CACX6H,kBAxBJ,SAA2BC,EAASzK,GAChC,MAAO,aAAeyK,EAAU,aAAezK,EAAK,aAwBpDwE,kBA7BJ,SAA2BiG,GACvB,MAAO,aAAeA,EAAU,UA6BhCC,qBAtBJ,SAA8BzK,EAAMD,GAChC,MAAO,YAAcvF,KAAK+P,kBAAkBvK,EAAMD,GAAM,qBAAuBC,EAAO,IAAMD,EAAK,QAsBjG4C,0BAnBJ,SAAmC7D,GAAsB,IAAhBO,EAAe,uDAAR,OAC5C,OAAOP,GACH,IAAK,UACD,OAAO,kBAAC,IAAD,CAAkBO,KAAMA,IACnC,IAAK,UACD,OAAO,kBAAC,IAAD,CAAYA,KAAMA,IAC7B,IAAK,SACD,OAAO,kBAAC,IAAD,CAAWA,KAAMA,IAC5B,IAAK,aACD,OAAO,kBAAC,IAAD,CAAQA,KAAMA,IACzB,QACI,OAAO,kBAAC,IAAD,CAAkBA,KAAMA,OAW5BqD,O,gwCChCTgI,Q,4bASF,iBAAYnQ,OAAQ,IAAD,+NACf,uBAAMA,OADS,MAkBnBoQ,SAAW,SAACC,EAAKC,EAAMC,GAAkB,IAAZC,EAAW,uDAAN,EAC1B5O,EAAM,GACV,GAAkB,MAAd0O,EAAKC,IAAiBD,EAAKC,GAAMzN,OAAS,EAAG,CAC7C0N,GAAU,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKC,GAAMzN,OAAQ2N,IACnC,MAAKL,SAASC,EAAKC,EAAKC,GAAME,GAAIF,EAAMC,QAI5CH,EAAIA,EAAIvN,QAAU,CACd,MAAS0N,EAAK,EACd,KAAQF,EAAKzP,MAIrB,OAAOe,GAjCQ,MAoCnB8O,OAAS,SAACC,GAAIC,WACV,IAAIC,YAAcD,UAAU/P,KAAK+I,MAAM,KAEnCkH,cAAgB,EAChBC,cAAgB,EAEhBC,cAAgB,OAChBC,SAAW,CACX9Q,GAAI6Q,cACJ3J,UAAW,mBACX9C,KAAM,iBACNoL,KAAM,CAAErH,QAASuI,YAAY,GAAIrI,QAASqI,YAAY,IACtDK,SAAU,CAAET,EAAGK,cAAeK,EAAGJ,eAEjC3Q,MAAO,CAAEwN,OAAQuC,QAAQiB,oBAAqBlK,MAAOiJ,QAAQkB,oBAC7DC,eAAgB,QAChBC,eAAgB,OAChBC,WAAW,GAKXC,SAAW,CAACR,UACZS,OAAS,CAACT,UACVU,OAAS,GAGTC,SAAW,GACwB,MAAnChB,UAAS,oBAAqE,IAAnCA,UAAS,qBACb,MAAnCA,UAAS,mBACT,MAAKR,SAASwB,SAAUhB,UAAW,sBAEnCgB,SAAWC,KAAKjB,UAAS,qBAGjC,IAAIkB,OAAS,GACwB,MAAjClB,UAAS,kBAAiE,IAAjCA,UAAS,mBACb,MAAjCA,UAAS,iBACT,MAAKR,SAAS0B,OAAQlB,UAAW,oBAEjCkB,OAASD,KAAKjB,UAAS,mBAG/B,IAAK,IAAIH,EAAI,EAAGA,EAAImB,SAAS9O,OAAQ2N,IAAK,CACtC,IAAIsB,IAAMH,SAASnB,GACH,MAAZsB,IAAIlR,OACJkR,IAAMH,SAASnB,GAAG5P,MAEtB,IAAImR,OAASD,IAAInI,MAAM,KACnBtB,QAAU0J,OAAO,GACjBxJ,QAAU,GACVjD,IAAM,GACNyM,OAAOlP,OAAS,IAChB0F,QAAUwJ,OAAO,IACjBA,OAAOlP,OAAS,IAChByC,IAAMyM,OAAO,IAEjB,IAAIC,UAAY,QAAUxB,EAAE1F,WACxBuF,KAAO,CACPnQ,GAAI8R,UACJ5K,UAAW,cACX9C,KAAM,iBACNoL,KAAM,CAAErH,QAASA,QAASE,QAASA,QAAS0D,OAAQ3G,KAEpDnF,MAAO,CAAEwN,OAAQuC,QAAQiB,oBAAqBlK,MAAOiJ,QAAQkB,oBAC7DE,eAAgB,OAChBD,eAAgB,QAChBJ,SAAU,CAAET,EAAGK,cAAeK,EAAGJ,eACjCS,WAAW,GAGfC,SAASA,SAAS3O,QAAUwN,KAC5BoB,OAAOA,OAAO5O,QAAUwN,KAExB,IAAI4B,OAAS,aAAezB,EAAE1F,WAC1BoH,KAAO,CAAEhS,GAAI+R,OAAQE,OAAQpB,cAAerJ,OAAQsK,UAAWI,cAAe,SAC9ET,SAASnB,GAAG6B,MAAQ,IACpBH,KAAKzO,MAAQ,IAAMkO,SAASnB,GAAG6B,MAAQ,IACvCH,KAAKI,UAAW,GAGpBd,SAASA,SAAS3O,QAAUqP,KAC5BR,OAAOA,OAAO7O,QAAUqP,KAG5B,IAAK,IAAI1B,EAAI,EAAGA,EAAIqB,OAAOhP,OAAQ2N,IAAK,CACpC,IAAIsB,IAAMD,OAAOrB,GACD,MAAZsB,IAAIlR,OACJkR,IAAMD,OAAOrB,GAAG5P,MAEpB,IAAImR,OAASD,IAAInI,MAAM,KACnBtB,QAAU0J,OAAO,GACjBxJ,QAAU,GACVjD,IAAM,GACNyM,OAAOlP,OAAS,IAChB0F,QAAUwJ,OAAO,IACjBA,OAAOlP,OAAS,IAChByC,IAAMyM,OAAO,IAEjB,IAAIC,UAAY,MAAQxB,EAAE1F,WACtBuF,KAAM,CACNnQ,GAAI8R,UACJ5K,UAAW,cACX9C,KAAM,iBACNoL,KAAM,CAAErH,QAASA,QAASE,QAASA,QAAS0D,OAAQ3G,KAEpDnF,MAAO,CAAEwN,OAAQuC,QAAQiB,oBAAqBlK,MAAOiJ,QAAQkB,oBAC7DC,eAAgB,QAChBC,eAAgB,OAChBL,SAAU,CAAET,EAAGK,cAAeK,EAAGJ,eACjCS,WAAW,GAGfC,SAASA,SAAS3O,QAAUwN,KAC5BoB,OAAOA,OAAO5O,QAAUwN,KAExB,IAAI4B,OAAS,WAAazB,EAAE1F,WACxBoH,KAAO,CAAEhS,GAAI+R,OAAQE,OAAQH,UAAWtK,OAAQqJ,cAAeqB,cAAe,SAC9EP,OAAOrB,GAAG6B,MAAQ,IAClBH,KAAKI,UAAW,EAChBJ,KAAKzO,MAAQ,IAAMoO,OAAOrB,GAAG6B,MAAQ,KAGzCb,SAASA,SAAS3O,QAAUqP,KAC5BR,OAAOA,OAAO7O,QAAUqP,KAG5B,MAAK7Q,SAAS,CACVkR,MAAOb,OACPF,SAAUA,SACVgB,MAAOf,SAGXgB,yDAAkBjB,UACb9P,MAAK,SAACgR,GAAD,OAAS,MAAKrR,SAAS,CAACmQ,SAAUkB,OACvCtD,OAAM,SAACuD,GAAD,OAASlH,QAAQ4D,MAAMsD,OAxKlC,MAAK7Q,MAAQ,CACT0P,SAAU,GACVoB,QAAS,GACTJ,MAAO,GACPD,MAAO,GACPM,aAAc,MAGlB,MAAKC,UAAY,CACbC,eAAgBA,mDAGpB,MAAKC,kBAAoB,KAfV,M,qOAgMnB,SAAOC,GACHxH,QAAQC,IAAI,sBACZD,QAAQC,IAAIuH,GAQZC,YAAW,kBAAMD,EAAGE,YAAW,O,8BAGnC,SAAiB3B,GACb/F,QAAQC,IAAI,sCACZD,QAAQC,IAAI8F,K,uBAGhB,SAAUyB,GACNxH,QAAQC,IAAI,yBACZD,QAAQC,IAAIuH,K,oBAGhB,WACQjT,KAAKD,MAAMqE,MAAMxD,MAAQZ,KAAK8B,MAAM8Q,UACpC5S,KAAK8B,MAAM8Q,QAAU5S,KAAKD,MAAMqE,MAAMxD,KACtCZ,KAAKyQ,OAAO,WAAYzQ,KAAKD,MAAMqE,QAStBgP,4DAAc,SAACtR,GAC5B2J,QAAQC,IAAI,iCACZD,QAAQC,IAAI5J,MAEIuR,4DAAgB,SAACC,GACjC7H,QAAQC,IAAI,mCACZD,QAAQC,IAAI4H,MAGhB,OACI,kEAAKlM,UAAU,uBAAuBjH,MAAO,CAAE8N,gBAAiB,OAAQN,OAAQuC,QAAQqD,yBAA0BtM,MAAO,SACpHjH,KAAK8B,MAAM0P,UACZ,2DAAC,mDAAD,KACI,2DAAC,mDAAD,CACIgC,OAAQxT,KAAKwT,OACbC,UAAWzT,KAAKyT,UAChBjC,SAAUxR,KAAK8B,MAAM0P,SACrBkC,iBAAkB1T,KAAK0T,iBACvBZ,UAAW9S,KAAK8S,UAChB3S,MAAO,CAAEwN,OAAQ,OAAQ1G,MAAO,QAChCkM,SAAO,GAEP,2DAAC,mDAAD,CAAUQ,gBAAgB,iB,SAlQ5B7S,8CAAhBoP,QAGKqD,yBAA2B,IAHhCrD,QAIK0D,wBAA0B,KAJ/B1D,QAMKiB,oBAAsB,GAN3BjB,QAOKkB,mBAAqB,IAmQjBlB,+B,gCC/Qf,0CAMe2D,oBAAK,YAA8B,IAA3BnE,EAA0B,EAA1BA,KAAMoE,EAAoB,EAApBA,cACvBzL,EAAU,GACVE,EAAU,GACV0D,EAAS,GAgCb,OA9BA,SAAoB8H,GAClB,IAAIC,EAAiBD,EAAM1L,QAAQsB,MAAM,KACzC,OAAOqK,EAAenR,QACpB,KAAK,EACHwF,EAAU0L,EAAM1L,QAChBE,EAAUwL,EAAMxL,QAChB,MACF,KAAK,EACHF,EAAU2L,EAAe,GACzBzL,EAAUyL,EAAe,GACzB,MACF,KAAK,EACH3L,EAAU2L,EAAe,GACzBzL,EAAUyL,EAAe,GACzB/H,EAAS+H,EAAe,GACxB,MACF,QACE3L,EAAU0L,EAAM1L,QAChBE,EAAUwL,EAAMxL,SAUtB0L,CAAWvE,GAGT,oCACE,kBAAC,IAAD,CACEtI,UAAU,gBACV9C,KAAK,SACL2M,SAAS,OACT6C,cAAeA,IAGjB,6BACE,6BACE,4BAAKzL,IAEP,6BACE,uBAAGyB,KAAK,qBAAqBpG,QArBrC,SAAuB+D,GACrBA,EAAEyM,iBACFlQ,IAASC,SAAS,kBAAmBoE,EAAU,IAAME,KAmBOA,IAExD,6BACE,2BAAI0D,KAIR,kBAAC,IAAD,CACE3H,KAAK,SACL2M,SAAS,QACT6C,cAAeA,S,iIC7DVrB,EAAiB,uCAAG,WAAOjB,GAAP,qBAAA2C,EAAA,6DACzB3B,EAAQ,GACRD,EAAQ,GAER6B,EAAM,IAAIC,IAAI,CAClBC,qBAAsB,CACpB,gBAAiB,UACjB,uBAAwB,WACxB,gBAAiB,QAEjB,kBAAmB,UACnB,4CAA6C,GAC7C,cAAe,uCACf,uBAAwB,MAI5B9C,EAAS/M,SAAQ,SAAC8P,GACC,IAAD,QAAZC,YAAOD,GACT/B,EAAMzP,KAAK,CACT7C,GAAIqU,EAAGrU,GACP+G,MAAK,oBAAEsN,EAAGE,YAAL,aAAE,EAASxN,aAAX,QAAoBiJ,IAAQkB,mBACjCzD,OAAM,oBAAE4G,EAAGE,YAAL,aAAE,EAAS9G,cAAX,QAAqBuC,IAAQiB,sBAGrCoB,EAAMxP,KAAK,CACT7C,GAAIqU,EAAGrU,GACPwH,OAAQ6M,EAAG7M,OACXyK,OAAQoC,EAAGpC,YA5Bc,SAiCRiC,EAAIM,OAAO,CAChCxU,GAAI,OACJyU,SAAUnC,EACVD,MAAOA,IApCsB,cAiCzBqC,EAjCyB,yBAuCxBpD,EAASrI,KAAI,SAACoL,GACnB,GAAIC,YAAOD,GAAK,CAAC,IAAD,EACRlE,EAAI,OAAGuE,QAAH,IAAGA,GAAH,UAAGA,EAAUD,gBAAb,aAAG,EAAoBE,MAAK,SAACC,GAAD,OAAOA,EAAE5U,KAAOqU,EAAGrU,MACzDqU,EAAGlD,eAAiB,QACpBkD,EAAGjD,eAAiB,QACZ,OAAJjB,QAAI,IAAJA,OAAA,EAAAA,EAAMG,KAAN,OAAWH,QAAX,IAAWA,OAAX,EAAWA,EAAMa,KAAjB,OAAsBb,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMpJ,SAA5B,OAAqCoJ,QAArC,IAAqCA,OAArC,EAAqCA,EAAM1C,UAC7C4G,EAAGtD,SAAW,CACZT,EAAGH,EAAKG,EAAIH,EAAKpJ,MAAQ,EAAI8N,KAAKC,SAAW,IAC7C9D,EAAGb,EAAKa,EAAIb,EAAK1C,OAAS,IAKhC,OAAO4G,MApDsB,2CAAH,wD","file":"static/js/main.abc7623c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Definition extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (<div>\n            {this.props.definition.id > -1 &&\n                <div style={{ maxWidth: \"300px\", border: \"solid 1px #999\", borderRadius: \"2px\", padding: \"10px\" }}>\n                    <Row>\n                        <Col>\n                            <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                                ID\n                            </span>\n                            <span>\n                                {this.props.definition.id}\n                            </span>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                                Name\n                            </span>\n                            <span>\n                                {this.props.definition.name}\n                            </span>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                                Description\n                            </span>\n                            <span>\n                                {this.props.definition.description}\n                            </span>\n                        </Col>\n                    </Row>\n                </div>\n            }\n        </div>\n        )\n    }\n}\n\nexport default Definition;","import React, { Component, Fragment } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast, ButtonGroup } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Definition from \"./definition\"\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Definition\",\n                description: \"\",\n                id: -1\n            },\n            newDefSelected: true,\n            defSearchResults: []\n        };\n\n    }\n\n    flattenArray(elem, key, orig = []) {\n        for (var idx = 0; idx < elem[key].length; idx++) {\n            let r = elem[key][idx];\n\n            orig.push(r.name);\n            if (r[key].length > 0) {\n                orig = this.flattenArray(r, key, orig);\n            }\n        }\n\n        return orig;\n    }\n\n    saveCol(applyUp, applyDown) {\n        let applyTo = [this.props.item.key];\n        if (applyUp)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_upstream'))\n        if (applyDown)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_downstream'))\n\n        confirmAlert({\n            title: 'Confirm Save',\n            message: 'Are you sure to apply this definition to ' + applyTo,\n            buttons: [\n                {\n                    label: 'Apply',\n                    onClick: () => {\n                        let val = '';\n                        if (this.state.selectedDef.description != null)\n                            val = this.state.selectedDef.description;\n\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                \"name\": this.state.selectedDef.name,\n                                \"description\": val,\n                                \"applied_to\": applyTo,\n                                \"id\": this.state.selectedDef.id\n                            })\n                        }\n\n                        eventBus.dispatch(\"loading\", true);\n\n                        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n                            .then(res => res.json())\n                            .then(\n                                (result) => {\n                                    this.props.item.definition = result.value;\n\n                                    this.setState({\n                                        newDefModal: false,\n                                        selectedDef: result.value\n                                    });\n\n                                    eventBus.dispatch(\"loading\", false);\n                                });\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => { }\n                }\n            ]\n        });\n    };\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <Button variant=\"primary\" size=\"sm\">\n                {element}\n            </Button>\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.object_type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.object_type == 'column') {\n            if (prevProps.item == null && this.props.item != null) {\n                this.resetSelectedDef();\n            }\n            else {\n                if ((prevProps.item != null && this.props.item != null) && (prevProps.item.id !== this.props.item.id))\n                    this.resetSelectedDef();\n            }\n        }\n    }\n\n    newDef() {\n        this.setState({ newDefModal: true });\n    }\n\n    resetSelectedDef() {\n        if (this.props.item.definition.id == -1) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id,\n                    applied_to: this.props.item.definition.applied_to\n                }\n            })\n        }\n    }\n\n    editDef() {\n        this.resetSelectedDef();\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    defSearch = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('def-search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                this.state.defSearchResults = response\n            });\n    }\n\n    renderDefSearchMenuItem(option, props) {\n        return <Fragment>\n            <div style={{ fontWeight: 'bold' }}>{option.name}</div>\n            <div>{option.description}</div>\n        </Fragment>;\n    }\n\n    selectDef = (item) => {\n        this.setState({\n            selectedDef: item\n        })\n    }\n\n    toggleNew = (isNew) => {\n        this.setState({\n            newDefSelected: isNew\n        })\n\n        if (isNew) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    applied_to: this.props.item.definition.applied_to,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id\n                }\n            })\n        }\n    }\n\n    renderColumn() {\n        const filterBy = () => true;\n        const { defSearchResults } = this.state;\n\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        // this.resetSelectedDef()\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Apply Definition</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <ButtonGroup style={{ float: \"right\" }}>\n                                {this.state.newDefSelected &\n                                    // variant={this.state.newDefSelected ? \"primary\" : \"secondary\"}\n                                    <Button onClick={() => this.toggleNew(true)} >New Definition</Button>\n                                }\n                                <Button onClick={() => this.toggleNew(false)}>Apply Definition</Button>\n                            </ButtonGroup>\n                        </Row>\n                        {!this.state.newDefSelected &&\n                            <Row style={{ paddingTop: \"10px\" }}>\n                                <AsyncTypeahead\n                                    // filterBy={filterBy}\n                                    id=\"def-search\"\n                                    delay={300}\n                                    labelKey=\"search_def\"\n                                    minLength={3}\n                                    onChange={this.selectDef}\n                                    onSearch={this.defSearch}\n                                    options={defSearchResults}\n                                    placeholder='Search'\n                                    renderMenuItemChildren={this.renderDefSearchMenuItem}\n                                    style={{ width: \"97.5%\" }}\n                                />\n\n                                <div style={{ paddingTop: \"10px\" }}>\n                                    <Definition definition={this.state.selectedDef}></Definition>\n                                </div>\n                            </Row>\n                        }\n                        {this.state.newDefSelected &&\n                            <Row>\n                                <Form style={{ paddingTop: '10px' }}>\n                                    <Form.Group className=\"mb-3\">\n                                        <div style={{ padding: \"10px 0px\" }}>\n                                            <Form.Label>Definition ID</Form.Label>\n                                            <Form.Control disabled=\"true\" type=\"text\" defaultValue={this.state.selectedDef.id}></Form.Control>\n                                        </div>\n                                        <Form.Label>Definition Name</Form.Label>\n                                        <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                            onChange={e => this.state.selectedDef.name = e.target.value}\n                                        />\n                                        <div style={{ padding: \"10px 0px\" }}>\n                                            <Form.Label>Applied To</Form.Label>\n                                            <Form.Control disabled=\"true\" type=\"text\" defaultValue={this.state.selectedDef.applied_to}></Form.Control>\n                                        </div>\n                                        <Form.Label>Definition Description</Form.Label>\n                                        <Form.Control as=\"textarea\" rows=\"3\" defaultValue={this.state.selectedDef.description}\n                                            onChange={e => this.state.selectedDef.description = e.target.value}\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                            Will appear in the Dataiku Dataset's column description.\n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form>\n                            </Row>\n                        }\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" onClick={() => this.saveCol(true, true)}>Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol(false, false)}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}</h1>\n                    <p class=\"name\">\n                        <b>{this.props.item.type}</b> column in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n                        <span style={{ padding: \"0px 3px\" }}>|</span>\n                        <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '|' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n                    </p>\n                </Col>\n            </Row>\n            <Row>\n                <div style={{ paddingTop: '10px' }}>\n                    <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                        <Tab eventKey=\"definition\" title=\"Definition\" def>\n                            {\n                                this.props.item.definition.id == -1 &&\n                                <div>\n                                    <Button variant=\"primary\"\n                                        onClick={() => this.newDef()}\n                                    >Add Definition</Button>{' '}\n                                </div>\n                            }\n                            {\n                                this.props.item.definition.id > 0 &&\n                                <div>\n                                    <Button variant=\"primary\"\n                                        onClick={() => this.editDef()}\n                                    >Edit Definition</Button>{' '}\n                                    <div style={{ padding: '10px' }}>\n                                        <Definition definition={this.state.selectedDef}></Definition>\n                                    </div>\n                                </div>\n                            }\n                        </Tab>\n                        <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                            <div class=\"lineage\">{lineage}</div>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </Row>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.id}</h1>\n                    <p>Dataset in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n                    <div class=\"tags\">{tags}</div>\n                </Col>\n            </Row>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Definition</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td class=\"cellLink\" onClick={() => this.openDataset(col)}>{col.split('|')[1]}</td>\n            </tr>\n        );\n\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}<span style={{ paddingLeft: \"6px\", paddingBottom: \"2px\" }}>\n                        <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={22} /></a>\n                    </span>\n                    </h1>\n                    <p>Project<span style={{ paddingLeft: '4px' }}>\n                        in {this.props.item.folder} folder</span></p>\n                    <div class=\"tags\">{tags}</div>\n                </Col>\n            </Row>\n            <Row>\n                <div style={{ paddingTop: '10px' }}>\n                    <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\" id='project-tabs'>\n                        <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {dataSetRows}\n                                </tbody>\n                            </Table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </Row>\n        </Col >;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                {/* <p>No Item to display...</p> */}\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    FaFilter,\n    FaRedo\n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,\n            },\n            currentUser: '',\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {\n            var dataikuItem = response[results];\n            if (types.indexOf(dataikuItem.object_type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }\n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).sort().map(([key, value]) => {\n            if (value == true) {\n                types[types.length] = key.toString();\n            }\n        });\n\n        return types;\n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({\n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        if (item.length > 0) {\n            this.loadItemByKey(item[0].key)\n        }\n    }\n\n    loadItemByKey = (itemKey) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let obj_type = 'project';\n        let splitCt = (itemKey.split(\"|\").length - 1);\n        if (splitCt == 1)\n            obj_type = 'dataset';\n        else if (splitCt == 2)\n            obj_type = 'column'\n\n        fetch(window.getWebAppBackendUrl('load-item') + '?key=' + itemKey, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                console.log('response == ');\n                console.log(response);\n\n                this.setState({\n                    loading: false,\n                    selectedItem: response,\n                    selectedItemType: obj_type\n                });\n            });\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n\n        window.$(document).ready(() => {\n\n            fetch(window.getWebAppBackendUrl('get-user'))\n                .then(res => res.json())\n                .then((response) => {\n\n                    this.setState({ dataiku: window.dataiku, currentUser: response['you_are'] });\n                    this.setState({ rendered: true });\n                    this.setState({ loading: false });\n\n                    this.navDeepLink();\n\n                    eventBus.on(\"datasetSelected\", (ds) => {\n                        this.loadItem([{\n                            key: ds,\n                            object_type: 'dataset'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(ds)\n                    }\n                    );\n\n                    eventBus.on(\"projectSelected\", (proj) => {\n                        this.loadItem([{\n                            key: proj,\n                            object_type: 'project'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(proj)\n                    }\n                    );\n\n                    eventBus.on(\"columnSelected\", (col) => {\n                        this.loadItem([{\n                            key: col,\n                            object_type: 'column'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(col)\n                    }\n                    );\n\n                    eventBus.on(\"loading\", (isLoading) =>\n                        this.setState({ \"loading\": isLoading })\n                    );\n                });\n        });\n    }\n\n    navDeepLink() {\n        let parts = window.top.location.href.split('#o=')\n\n        if (parts.length > 1) {\n            this.loadItemByKey(parts[1])\n        }\n    }\n\n    navToObject(obj) {\n        let base_url = window.top.location.href.split('#')[0]\n        window.top.location.href = base_url + \"#o=\" + obj\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n\n            <span style={{ paddingRight: '5px' }}>\n                {Common.getIconForDataikuItemType(option.object_type, '13px')}\n            </span>\n            {option.object_type == 'column' &&\n                <span>\n                    <span style={{}}>Project:</span>\n                    <span style={{}}>{option.key.split('|')[0]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span style={{}}>Dataset:</span>\n                    <span style={{ padding: '0px 4px' }}>{option.key.split('|')[1]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span>Column:</span><span style={{ fontWeight: 'bold', padding: '0px 4px' }}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'dataset' &&\n                <span>\n                    <span style={{}}>Project:</span>\n                    <span style={{}}>{option.key.split('|')[0]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span style={{}}>Dataset:</span>\n                    <span style={{ padding: '0px 4px', fontWeight: 'bold' }}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'project' &&\n                <span>\n                    <span>Project: </span><span style={{ fontWeight: 'bold', padding: '0px 4px' }}>{option.name}</span>\n                </span>\n            }\n\n        </Fragment >;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        this.searchRef = React.createRef();\n\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} object_type={selectedItemType} />;\n\n        return (\n\n            <Container style={{ paddingTop: '10px' }}>\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div class=\"container-fluid\">\n                        <a class=\"navbar-brand\" style={{ fontWeight:\"bold\", fontSize:\"27px\" }}>Thread</a>\n                        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\n                            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                {/* <li class=\"nav-item\">\n                                    <a class=\"nav-link active\" href=\"#\">Home</a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" href=\"#\">Link</a>\n                                </li> */}\n                            </ul>\n                            <ul class=\"navbar-nav\">\n                                <li style={{padding:'12px'}}>\n                                    <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\">{this.state.currentUser}</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n                {/* <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> */}\n                {/* <Row>\n                    <Col>\n                        <div class=\"title-row\"><h1>Thread</h1></div></Col>\n                    <Col style={{ textAlign: 'right', paddingTop: '16px', 'paddingRight': '16px' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                        <div>{this.state.currentUser}</div>\n                    </Col>\n                </Row> */}\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                labelKey={option => {\n                                    return option.key.replaceAll('|', ' | ')\n                                }\n                                }\n                                ref={this.searchRef}\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{\n                                    backgroundColor: \"#66a3ff\",\n                                    color: \"#FFFFFF\",\n                                    cursor: 'pointer',\n                                    height: '34px',\n                                    padding: \"8px\",\n                                    width: '34px'\n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                {openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        {/* <Col xs={1}>\n                            <h5>Filter By: </h5>\n                        </Col> */}\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight: \"5px\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    : null}\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction createDatasetLinkTag(proj, ds) {\n    return '<a href=\"' + this.createDatasetLink(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDatasetLinkTag,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component, useCallback, useState } from 'react';\nimport ReactFlow, { Controls, ReactFlowProvider, useStoreState, useStoreActions } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\nimport { createGraphLayout } from '../common/layout.js';\n\nclass Lineage extends Component {\n\n    // CONSTANT VALUES\n    static DEFAULT_CONTAINER_HEIGHT = 500;\n    static DEFAULT_CONTAINER_WIDTH = 1030;\n\n    static DEFAULT_NODE_HEIGHT = 75;\n    static DEFAULT_NODE_WIDTH = 250;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n            nodes: [],\n            edges: [],\n            flowInstance: null,\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n\n        this.reactFlowInstance = null;\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        let basePositionX = 0;\n        let basePositionY = 0;\n\n        var baseElementId = 'base';\n        var baseNode = {\n            id: baseElementId,\n            className: 'thread-node-base',\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: basePositionX, y: basePositionY },\n            // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n            style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        };\n\n        // console.log('base-node :: base_splits[1].length == ' + base_splits[1].length);\n\n        var elements = [baseNode];\n        var _nodes = [baseNode];\n        var _edges = [];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n            var node = {\n                id: elementId,\n                className: 'thread-node',\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n                style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: basePositionX, y: basePositionY },                     \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'up_' + x.toString();\n            var node ={\n                id: elementId,\n                className: 'thread-node',\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n                style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: basePositionX, y: basePositionY },         \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }        \n\n        this.setState({\n            edges: _edges,\n            elements: elements,\n            nodes: _nodes\n        });\n\n        createGraphLayout(elements)\n            .then((els) => this.setState({elements: els}))\n            .catch((err) => console.error(err));\n\n        // if(this.state.flowInstance != null) {\n        //     console.log(\"this.state.flowInstance == \");\n        //     console.log(this.state.flowInstance);\n        //     // this.state.flowInstance.fitView();\n        // }\n        // setTimeout(() => {\n        //     var myBtn = document.getElementsByClassName(\"click-button\");\n        //     myBtn.trigger('click');\n\n        //     // var alertNow = function() {\n        //     //     alert(\"hello world\");\n        //     // };\n        //     // for (var i = 0; i < myBtn.length; i++) {\n        //     //     myBtn[i].addEventListener(\"click\", alertNow, false);\n        //     // }\n        // }, 1000);\n        // react-flow__controls-fitview\n    }\n\n    onLoad(rv) {\n        console.log('onLoad() :: rv == ');\n        console.log(rv);\n\n        // this.reactFlowInstance = rv;\n        \n        // this.setState({\n        //     flowInstance: rv\n        // });\n\n        setTimeout(() => rv.fitView(), 1000);\n    }\n\n    onElementsRemove(elements) {\n        console.log('onElementsRemove() :: elements == ');\n        console.log(elements);\n    }\n\n    onFitView(rv) {\n        console.log('onFitView() :: rv == ');\n        console.log(rv);\n    }\n\n    render() {\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n\n        // TODO onNodesChange isn't trigger when changing the screen.\n        // none of the event listens seem to trigger when changing view.\n        // need to trigger the fitview when changing over.\n        // const elements = useStoreState((state) => state.elements);\n        // const setElements = useStoreActions((actions) => actions.setElements);\n\n        const elements = useStoreState((state) => {\n            console.log(\"useStoreState() :: state ==  \");\n            console.log(state);\n        });\n        const setElements = useStoreActions((actions) => {\n            console.log(\"useStoreState() :: actions ==  \");\n            console.log(actions);\n        });\n        \n        return (\n            <div className='REACT-FLOW-CONTAINER' style={{ backgroundColor: '#EEE', height: Lineage.DEFAULT_CONTAINER_HEIGHT, width: \"100%\" }}>\n                {this.state.elements && \n                <ReactFlowProvider>\n                    <ReactFlow \n                        onLoad={this.onLoad} \n                        onFitView={this.onFitView}\n                        elements={this.state.elements}\n                        onElementsRemove={this.onElementsRemove}\n                        nodeTypes={this.nodeTypes} \n                        style={{ height: \"100%\", width: \"100%\" }}\n                        fitView\n                    >\n                        <Controls showInteractive=\"false\" />\n                    </ReactFlow>\n                </ReactFlowProvider>}\n            </div>\n        );        \n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  var project = \"\";\n  var dataset = \"\";\n  var column = \"\";\n\n  function formatData(_data)  {  \n    var project_splits = _data.project.split('|');\n    switch(project_splits.length) {\n      case 1:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n      case 2:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        break;\n      case 3:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        column = project_splits[2];\n        break;\n      default:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n    }\n  }\n\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", project + '|' + dataset);\n  }\n\n  formatData(data);\n\n  return (\n    <>\n      <Handle\n        className='thread-handle'\n        type=\"target\"\n        position=\"left\"\n        isConnectable={isConnectable}\n      />\n\n      <div>\n        <div>\n          <h6>{project}</h6>\n        </div>\n        <div>\n          <a href='javascript:void(0)' onClick={selectDataset}>{dataset}</a>\n        </div>\n        <div>\n          <p>{column}</p>\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n    </>\n  );\n});","import Elk from \"elkjs\";\nimport { isNode } from \"react-flow-renderer\";\nimport Lineage from \"../components/lineage\";\n\nexport const createGraphLayout = async (elements) => {\n  const nodes = [];\n  const edges = [];\n\n  const elk = new Elk({\n    defaultLayoutOptions: {\n      \"elk.algorithm\": \"layered\",\n      \"elk.contentAlignment\": \"V_CENTER\",\n      \"elk.direction\": \"RIGHT\",\n      // \"elk.edgeLabels.inline\": true,\n      \"elk.edgeRouting\": \"SPLINES\",      \n      \"elk.layered.spacing.nodeNodeBetweenLayers\": 50,\n      \"elk.padding\": \"[top=50,left=150,bottom=25,right=25]\",\n      \"elk.spacing.nodeNode\": 25,      \n    }\n  });\n\n  elements.forEach((el) => {\n    if (isNode(el)) {\n      nodes.push({\n        id: el.id,\n        width: el.__rf?.width ?? Lineage.DEFAULT_NODE_WIDTH,\n        height: el.__rf?.height ?? Lineage.DEFAULT_NODE_HEIGHT\n      });\n    } else {\n      edges.push({\n        id: el.id,\n        target: el.target,\n        source: el.source\n      });\n    }\n  });\n\n  const newGraph = await elk.layout({\n    id: \"root\",\n    children: nodes,\n    edges: edges\n  });\n\n  return elements.map((el) => {\n    if (isNode(el)) {\n      const node = newGraph?.children?.find((n) => n.id === el.id);\n      el.sourcePosition = \"right\";\n      el.targetPosition = \"left\";\n      if (node?.x && node?.y && node?.width && node?.height) {\n        el.position = {\n          x: node.x - node.width / 2 + Math.random() / 1000,\n          y: node.y - node.height / 2\n        };\n      }\n    }\n\n    return el;\n  });\n};\n"],"sourceRoot":""}