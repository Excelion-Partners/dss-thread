{"version":3,"sources":["components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js"],"names":["DataikuItem","props","state","newDefModal","Row","deets","this","item","full_ds_name","name","type","arrayTags","tags","forEach","element","length","key","alert","renderDataset","renderProject","renderColumn","Col","setState","col","eventBus","dispatch","ds","proj","lineage","buildLineage","Modal","size","show","animation","Header","closeButton","Title","Body","Container","Form","style","paddingTop","Group","className","Label","Footer","class","onClick","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","Tab","eventKey","title","def","Button","variant","newDef","comment","buildTagsString","meta","listItems","schema","map","openColumn","paddingLeft","href","Common","createDatasetLink","id","target","Table","striped","bordered","hover","dataSetRows","datasets","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","Component","App","loadItem","loading","console","log","fetch","window","getWebAppBackendUrl","method","headers","then","res","json","response","selectedItem","selectedItemType","search","query","p_list","Object","keys","results","searchResults","dataiku","undefined","dataikuItem","isLoading","$","document","ready","rendered","on","option","fontWeight","padding","split","paddingBottom","textAlign","rescan","width","height","filterBy","labelKey","minLength","onChange","onSearch","options","placeholder","renderMenuItemChildren","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","e","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","projkey","createDsLinkFull","createDsLink2","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","elements","position","y","backgroundColor","borderColor","borderWidth","sourcePosition","targetPosition","draggable","down_res","up_res","eval","lbl","splits","column","edge","source","arrowHeadType","count","label","animated","new_state","last_ds","nodeTypes","customFlowNode","rv","fitView","onLoad","showInteractive","memo","isConnectable","background","border","borderRadius","preventDefault"],"mappings":"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","file":"static/js/main.411b5213.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n// import Dataset from \"./dataset\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\n\nclass DataikuItem extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false\n        };\n    }\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n            {/* <Dataset deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Dataset> */}\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<span><b>Tags: </b></span>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    renderColumn() {\n        let lineage = this.buildLineage();\n\n        return <Col>\n            {/* onHide={this.closeColumn}  */}\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>test</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Form style={{ paddingTop: '15px' }}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Description</Form.Label>\n                                    {/* <Form.Control type=\"text\" defaultValue={this.state.selectedCol.comment}\n                                        onChange={e => this.state.selectedCol.comment = e.target.value}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Will be saved to the DSS Column name\n                                    </Form.Text> */}\n                                </Form.Group>\n                            </Form>\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* <Button variant=\"secondary\" onClick={() => this.saveColLineage()}>Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol()}>Save</Button> */}\n                </Modal.Footer>\n            </Modal>\n\n            <p class=\"name\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n            </p>\n            <p class=\"name\"><b>Dataset: </b>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '.' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <p class=\"name\"><b>Column Name: </b>{this.props.item.name}\n            </p>\n            <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        <Button variant=\"primary\"\n                            onClick={() => this.newDef()}\n                        >Add</Button>{' '}\n                        {this.props.item.comment}\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={Common.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\" style={{ paddingTop: '20px' }}>\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { FaRedo } from 'react-icons/fa';\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    Container,\n    Col,\n    Row,\n    Spinner,\n    Button\n} from 'react-bootstrap';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            isLoading: false,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n            loading: true\n        }\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                    this.setState({ loading: false });\n                });\n        }\n        // else {\n        //     this.setState({\n        //         selectedItem: null      \n        //     });\n        // }\n    }\n\n    search = (query) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('search') + '?term=' + query, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = [];\n                Object.keys(response).forEach(function (results) {\n                    p_list[p_list.length] = response[results];\n                });\n\n                this.setState({\n                    searchResults: p_list\n                });\n                this.setState({ loading: false });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'column'\n                }])\n            );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { isLoading, searchResults, selectedItem, selectedItemType } = this.state;\n        // const ref = React.createRef();\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '22px', height: '22px' }} />\n                    </Col>\n                </Row>\n                <Row>\n                    <AsyncTypeahead\n                        filterBy={filterBy}\n                        id=\"async-search\"\n                        isLoading={isLoading}\n                        labelKey=\"key\"\n                        minLength={3}\n                        onChange={this.loadItem}\n                        onSearch={this.search}\n                        options={searchResults}\n                        placeholder='Search'\n                        renderMenuItemChildren={this.renderMenuItemChildren}\n                    />\n                </Row>\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n\n                {this.dataikuItem}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\n// function createDsLink(ds) {\n//     return this.createDsLink2(ds.projectKey, ds.name)\n// }\n\n// function createDsLink2(proj, ds) {\n//     return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n// }\n\nfunction createDsLinkFull(proj, ds) {\n    return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkFull,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport ReactFlow, { Controls } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\n\n// import EditColumnModal from \"./editColumnModal\";\n\nclass Lineage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n        };\n\n        // this.toggleModal = this.toggleModal.bind(this);\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        var elements = [{\n            id: '-1',\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', width: '200px', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold' },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        }];\n\n        // find all the end-nodes\n        var down_res = [];\n        var up_res = [];\n\n        if(this.props.type == 'column') {\n            if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n                if (base_elem['lineage_downstream'] != null)\n                    this.traverse(down_res, base_elem, 'lineage_downstream');\n                else\n                    down_res = eval(base_elem['lineage_downstream']);\n            }\n            \n            if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n                if (base_elem['lineage_upstream'] != null)\n                    this.traverse(up_res, base_elem, 'lineage_upstream');\n                else\n                    up_res = eval(base_elem['lineage_upstream']);\n            }\n        } else {\n            if (base_elem['lineage-downstream'] != null && base_elem['lineage-downstream'] != '') {\n                if (base_elem['lineage-downstream'] != null)\n                    this.traverse(down_res, base_elem, 'lineage-downstream');\n                else\n                    down_res = eval(base_elem['lineage-downstream']);\n            }\n            \n            if (base_elem['lineage-upstream'] != null && base_elem['lineage-upstream'] != '') {\n                if (base_elem['lineage-upstream'] != null)\n                    this.traverse(up_res, base_elem, 'lineage-upstream');\n                else\n                    up_res = eval(base_elem['lineage-upstream']);\n            }\n        }\n\n        console.log('down_res == ');\n        console.log(down_res);\n        console.log('up_res == ');\n        console.log(up_res);\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            elements[elements.length] = {\n                id: 'down_' + x,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) },\n                draggable: false\n            }\n\n            var edge = { id: '-1-down_' + x, source: '-1', target: 'down_' + x, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            elements[elements.length] = {\n                id: 'up_' + x,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            }\n\n            var edge = { id: '-1-up_' + x, source: 'up_' + x, target: '-1', arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n        }\n        var new_state = {}\n        new_state[st] = elements;\n\n        this.setState(new_state)\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {        \n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: 500 }}>\n                {this.state.elements && <ReactFlow onLoad={this.onLoad} elements={this.state.elements} nodeTypes={this.nodeTypes}>\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );\n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', textAlign: 'center', padding: '10px' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});"],"sourceRoot":""}