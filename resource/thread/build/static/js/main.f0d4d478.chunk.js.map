{"version":3,"sources":["components/definition.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js","common/layout.js"],"names":["Definition","props","style","maxWidth","border","borderRadius","padding","Row","Col","fontWeight","paddingRight","this","definition","id","name","description","Component","DataikuItem","defSearch","term","url","window","getWebAppBackendUrl","setState","loading","fetch","method","headers","then","res","json","response","state","defSearchResults","selectDef","item","tempSelDef","newDefSelected","toggleNew","isNew","selectedDef","comment","applied_to","key","lineage","newDefModal","elem","orig","idx","length","r","push","flattenArray","applyUp","applyDown","applyTo","concat","val","requestOptions","body","JSON","stringify","eventBus","dispatch","result","value","deets","full_ds_name","type","arrayTags","tags","forEach","element","Button","variant","size","alert","object_type","renderDataset","renderProject","renderColumn","prevProps","prevState","resetSelectedDef","col","ds","proj","option","console","log","lineageData","buildLineage","Modal","show","animation","onHide","Header","closeButton","Title","Body","Container","labelKey","filterBy","caseSensitive","minLength","onChange","onSearch","options","placeholder","renderMenuItemChildren","renderDefSearchMenuItem","Form","paddingTop","Group","className","Label","Control","disabled","defaultValue","e","target","as","rows","Text","Footer","textAlign","onClick","ms-auto","saveCol","xs","class","Common","getIconForDataikuItemType","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","destroyInactiveTabPane","Tab","eventKey","title","def","newDef","editDef","onSelect","refreshLineage","buildTagsString","meta","listItems","schema","map","openColumn","Table","striped","bordered","hover","dataSetRows","datasets","split","paddingLeft","paddingBottom","href","createProjectLink","projectKey","folder","itemDetails","renderItemDetailsByType","App","filterDataikuItems","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","toString","entries","filters","sort","handleOnChange","tempFilters","loadItem","loadItemByKey","navToObject","itemKey","obj_type","splitCt","selectedItem","selectedItemType","search","searchResults","dataiku","undefined","column","currentUser","openFilter","$","document","ready","rendered","navDeepLink","on","isLoading","parts","top","location","obj","base_url","searchRef","React","createRef","fontSize","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","rescan","width","height","cursor","delay","replaceAll","ref","toggleFilter","backgroundColor","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","createDatasetLink","projkey","createDatasetLinkTag","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","basePositionX","basePositionY","baseElementId","baseNode","position","y","DEFAULT_NODE_HEIGHT","DEFAULT_NODE_WIDTH","sourcePosition","targetPosition","draggable","elements","_nodes","_edges","down_res","eval","up_res","lbl","splits","elementId","edgeId","edge","source","arrowHeadType","count","label","animated","edges","nodes","createGraphLayout","els","err","last_ds","flowInstance","nodeTypes","customFlowNode","reactFlowInstance","rv","setTimeout","fitView","DEFAULT_CONTAINER_HEIGHT","onLoad","showInteractive","DEFAULT_CONTAINER_WIDTH","memo","isConnectable","_data","project_splits","formatData","preventDefault","a","elk","Elk","defaultLayoutOptions","el","isNode","__rf","layout","children","newGraph","find","n","Math","random"],"mappings":"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","file":"static/js/main.f0d4d478.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Definition extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (<div>\n            <div style={{ maxWidth: \"300px\", border: \"solid 1px #999\", borderRadius: \"2px\", padding: \"10px\" }}>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            ID\n                        </span>\n                        <span>\n                            {this.props.definition.id}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Name\n                        </span>\n                        <span>\n                            {this.props.definition.name}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Description\n                        </span>\n                        <span>\n                            {this.props.definition.description}\n                        </span>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Definition;","import React, { Component, Fragment } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast, ButtonGroup } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Definition from \"./definition\"\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lineage: null,\n            newDefModal: false,\n            selectedDef: {\n                id: -1\n            },\n            tempSelDef: {\n            },\n            newDefSelected: true,\n            defSearchResults: []\n        };\n\n    }\n\n    flattenArray(elem, key, orig = []) {\n        for (var idx = 0; idx < elem[key].length; idx++) {\n            let r = elem[key][idx];\n\n            orig.push(r.name);\n            if (r[key].length > 0) {\n                orig = this.flattenArray(r, key, orig);\n            }\n        }\n\n        return orig;\n    }\n\n    saveCol(applyUp, applyDown) {\n        let applyTo = [this.props.item.key];\n        if (applyUp)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_upstream'))\n        if (applyDown)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_downstream'))\n\n        let val = '';\n        if (this.state.tempSelDef.description != null)\n            val = this.state.tempSelDef.description;\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"name\": this.state.tempSelDef.name,\n                \"description\": val,\n                \"applied_to\": applyTo,\n                \"id\": this.state.tempSelDef.id\n            })\n        }\n\n        eventBus.dispatch(\"loading\", true);\n\n        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.props.item.definition = result.value;\n\n                    this.setState({\n                        newDefModal: false,\n                        selectedDef: result.value\n                    });\n\n                    eventBus.dispatch(\"loading\", false);\n                });\n    };\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <Button variant=\"primary\" size=\"sm\">\n                {element}\n            </Button>\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.object_type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.object_type == 'column') {\n            if (prevProps.item == null && this.props.item != null) {\n                this.resetSelectedDef();\n            }\n            else {\n                if ((prevProps.item != null && this.props.item != null) && (prevProps.item.id != this.props.item.id))\n                    this.resetSelectedDef();\n            }\n        }\n    }\n\n    newDef() {\n        this.setState({\n            newDefModal: true,\n            tempSelDef: {\n                description: this.props.comment,\n                name: this.props.item.name,\n                id: -1\n            }\n        });\n    }\n\n    resetSelectedDef() {\n        this.setState({\n            tempSelDef: {\n                id: -1\n            }\n        })\n\n        if (this.props.item.definition.id == -1) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id,\n                    applied_to: this.props.item.definition.applied_to\n                }\n            })\n        }\n    }\n\n    editDef() {\n        this.resetSelectedDef();\n\n        this.setState({\n            tempSelDef: {\n                name: this.props.item.definition.name,\n                description: this.props.item.definition.description,\n                id: this.props.item.definition.id,\n                applied_to: this.props.item.definition.applied_to\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    defSearch = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('def-search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                this.state.defSearchResults = response\n            });\n    }\n\n    renderDefSearchMenuItem(option, props) {\n        return <Fragment>\n            <div style={{ fontWeight: 'bold' }}>{option.name}</div>\n            <div>{option.description}</div>\n        </Fragment>;\n    }\n\n    selectDef = (item) => {\n        this.setState({\n            tempSelDef: item[0],\n            newDefSelected: true\n        })\n    }\n\n    toggleNew = (isNew) => {\n        this.setState({\n            newDefSelected: isNew\n        })\n\n        if (isNew) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    applied_to: [this.props.item.key],\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    applied_to: this.props.item.definition.applied_to,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id\n                }\n            })\n        }\n    }\n\n    refreshLineage() { \n        console.log('refreshLineage() :: ');\n        let lineageData = this.state.lineage;\n        this.setState({\n            lineage: lineageData\n        });\n    }\n\n    renderColumn() {\n        const filterBy = () => true;\n        const { defSearchResults, lineage } = this.state;\n\n        lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        // this.resetSelectedDef()\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Apply Definition</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Col>\n                                {!this.state.newDefSelected &&\n                                    <div>\n                                        <AsyncTypeahead\n                                            // filterBy={filterBy}\n                                            id=\"def-search\"\n                                            labelKey=\"name\"\n                                            filterBy={['name', 'description']}\n                                            caseSensitive=\"false\"\n                                            minLength={3}\n                                            onChange={this.selectDef}\n                                            onSearch={this.defSearch}\n                                            options={defSearchResults}\n                                            placeholder='Search for existing Definition'\n                                            renderMenuItemChildren={this.renderDefSearchMenuItem}\n                                        />\n                                    </div>\n                                }\n                                {this.state.newDefSelected &&\n                                    <div>\n                                        <Form style={{ paddingTop: '10px' }}>\n                                            <Form.Group className=\"mb-3\">\n                                                {this.state.selectedDef.id > -1 &&\n                                                    <div style={{ padding: \"10px 0px\" }}>\n                                                        <Form.Label>Definition ID</Form.Label>\n                                                        <Form.Control disabled=\"true\" type=\"text\" defaultValue={this.state.tempSelDef.id}></Form.Control>\n                                                    </div>\n                                                }\n                                                {this.state.selectedDef.id == -1 &&\n                                                    <h3>New Defintion</h3>\n                                                }\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control type=\"text\" defaultValue={this.state.tempSelDef.name}\n                                                    onChange={e => this.state.tempSelDef.name = e.target.value}\n                                                />\n                                                <div style={{ padding: \"10px 0px\" }}>\n                                                    <Form.Label>Applied To</Form.Label>\n                                                    <Form.Control disabled=\"true\" type=\"text\" defaultValue={this.state.tempSelDef.applied_to}></Form.Control>\n                                                </div>\n                                                <Form.Label>Description</Form.Label>\n                                                <Form.Control as=\"textarea\" rows=\"3\" defaultValue={this.state.tempSelDef.description}\n                                                    onChange={e => this.state.tempSelDef.description = e.target.value}\n                                                />\n                                                <Form.Text className=\"text-muted\">\n                                                    Will appear in the Dataiku Dataset's column description.\n                                                </Form.Text>\n                                            </Form.Group>\n                                        </Form>\n                                    </div>\n                                }\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Col style={{ textAlign: \"left\" }}>\n                        {/* <ButtonGroup style={{ float: \"right\" }}> */}\n                        <Button variant=\"dark\" onClick={() => this.toggleNew(true)}>New</Button>\n                        <Button variant=\"dark\" onClick={() => this.toggleNew(false)}>Search</Button>\n                        {/* </ButtonGroup> */}\n                        {/* // variant={this.state.newDefSelected ? \"primary\" : \"secondary\"} */}\n                    </Col>\n                    <Col ms-auto>\n                        <Button disabled=\"true\" variant=\"secondary\" onClick={() => this.saveCol(true, true)}>Apply to Lineage</Button>\n                        <Button disabled={!this.state.newDefSelected} variant=\"primary\" onClick={() => this.saveCol(false, false)}>Apply</Button>\n                    </Col>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}</h1>\n                    <p class=\"name\">\n                        <b>{this.props.item.type}</b> column in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n                        <span style={{ padding: \"0px 3px\" }}>|</span>\n                        <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '|' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n                    </p>\n                </Col>\n            </Row>\n            <Row>\n                <div style={{ paddingTop: '10px' }}>\n                    <Tabs defaultActiveKey=\"definition\" className=\"mb-3\" destroyInactiveTabPane>\n                        <Tab eventKey=\"definition\" title=\"Definition\" def>\n                            {\n                                this.props.item.definition.id == -1 &&\n                                <div>\n                                    <Button variant=\"primary\"\n                                        onClick={() => this.newDef()}\n                                    >Add Definition</Button>{' '}\n                                </div>\n                            }\n                            {\n                                this.props.item.definition.id > 0 &&\n                                <div>\n                                    <Button variant=\"primary\"\n                                        onClick={() => this.editDef()}\n                                    >Edit Definition</Button>{' '}\n                                    <div style={{ padding: '10px' }}>\n                                        <Definition definition={this.state.selectedDef}></Definition>\n                                    </div>\n                                </div>\n                            }\n                        </Tab>\n                        <Tab eventKey=\"lineage\" title=\"Lineage\" def\n                            onSelect={this.refreshLineage}>\n                            <div class=\"lineage\">{lineage}</div>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </Row>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.id}</h1>\n                    <p>Dataset in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n                    <div class=\"tags\">{tags}</div>\n                </Col>\n            </Row>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Definition</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td class=\"cellLink\" onClick={() => this.openDataset(col)}>{col.split('|')[1]}</td>\n            </tr>\n        );\n\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}<span style={{ paddingLeft: \"6px\", paddingBottom: \"2px\" }}>\n                        <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={22} /></a>\n                    </span>\n                    </h1>\n                    <p>Project<span style={{ paddingLeft: '4px' }}>\n                        in {this.props.item.folder} folder</span></p>\n                    <div class=\"tags\">{tags}</div>\n                </Col>\n            </Row>\n            <Row>\n                <div style={{ paddingTop: '10px' }}>\n                    <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\" id='project-tabs'>\n                        <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {dataSetRows}\n                                </tbody>\n                            </Table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </Row>\n        </Col >;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                {/* <p>No Item to display...</p> */}\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    FaFilter,\n    FaRedo\n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,\n            },\n            currentUser: '',\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {\n            var dataikuItem = response[results];\n            if (types.indexOf(dataikuItem.object_type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }\n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).sort().map(([key, value]) => {\n            if (value == true) {\n                types[types.length] = key.toString();\n            }\n        });\n\n        return types;\n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({\n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        if (item.length > 0) {\n            this.loadItemByKey(item[0].key)\n            this.navToObject(item[0].key)\n        }\n    }\n\n    loadItemByKey = (itemKey) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let obj_type = 'project';\n        let splitCt = (itemKey.split(\"|\").length - 1);\n        if (splitCt == 1)\n            obj_type = 'dataset';\n        else if (splitCt == 2)\n            obj_type = 'column'\n\n        fetch(window.getWebAppBackendUrl('load-item') + '?key=' + itemKey, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                console.log('response == ');\n                console.log(response);\n\n                this.setState({\n                    loading: false,\n                    selectedItem: response,\n                    selectedItemType: obj_type\n                });\n            });\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n\n        window.$(document).ready(() => {\n\n            fetch(window.getWebAppBackendUrl('get-user'))\n                .then(res => res.json())\n                .then((response) => {\n\n                    this.setState({ dataiku: window.dataiku, currentUser: response['you_are'] });\n                    this.setState({ rendered: true });\n                    this.setState({ loading: false });\n\n                    this.navDeepLink();\n\n                    eventBus.on(\"datasetSelected\", (ds) => {\n                        this.loadItem([{\n                            key: ds,\n                            object_type: 'dataset'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(ds)\n                    }\n                    );\n\n                    eventBus.on(\"projectSelected\", (proj) => {\n                        this.loadItem([{\n                            key: proj,\n                            object_type: 'project'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(proj)\n                    }\n                    );\n\n                    eventBus.on(\"columnSelected\", (col) => {\n                        this.loadItem([{\n                            key: col,\n                            object_type: 'column'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(col)\n                    }\n                    );\n\n                    eventBus.on(\"loading\", (isLoading) =>\n                        this.setState({ \"loading\": isLoading })\n                    );\n                });\n        });\n    }\n\n    navDeepLink() {\n        let parts = window.top.location.href.split('#o=')\n\n        if (parts.length > 1) {\n            this.setState({ \"loading\": true });\n            this.loadItemByKey(parts[1])\n        }\n    }\n\n    navToObject(obj) {\n        let base_url = window.top.location.href.split('#')[0]\n        window.top.location.href = base_url + \"#o=\" + obj\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n\n            <span style={{ paddingRight: '5px' }}>\n                {Common.getIconForDataikuItemType(option.object_type, '13px')}\n            </span>\n            {option.object_type == 'column' &&\n                <span>\n                    <span style={{}}>Project:</span>\n                    <span style={{}}>{option.key.split('|')[0]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span style={{}}>Dataset:</span>\n                    <span style={{ padding: '0px 4px' }}>{option.key.split('|')[1]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span>Column:</span><span style={{ fontWeight: 'bold', padding: '0px 4px' }}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'dataset' &&\n                <span>\n                    <span style={{}}>Project:</span>\n                    <span style={{}}>{option.key.split('|')[0]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span style={{}}>Dataset:</span>\n                    <span style={{ padding: '0px 4px', fontWeight: 'bold' }}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'project' &&\n                <span>\n                    <span>Project: </span><span style={{ fontWeight: 'bold', padding: '0px 4px' }}>{option.name}</span>\n                </span>\n            }\n\n        </Fragment >;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        this.searchRef = React.createRef();\n\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} object_type={selectedItemType} />;\n\n        return (\n\n            <Container style={{ paddingTop: '10px' }}>\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div class=\"container-fluid\">\n                        <a class=\"navbar-brand\" style={{ fontWeight: \"bold\", fontSize: \"27px\" }}>Thread</a>\n                        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\n                            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                {/* <li class=\"nav-item\">\n                                    <a class=\"nav-link active\" href=\"#\">Home</a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" href=\"#\">Link</a>\n                                </li> */}\n                            </ul>\n                            <ul class=\"navbar-nav\">\n                                <li style={{ padding: '12px' }}>\n                                    <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\">{this.state.currentUser}</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n                {/* <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> */}\n                {/* <Row>\n                    <Col>\n                        <div class=\"title-row\"><h1>Thread</h1></div></Col>\n                    <Col style={{ textAlign: 'right', paddingTop: '16px', 'paddingRight': '16px' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                        <div>{this.state.currentUser}</div>\n                    </Col>\n                </Row> */}\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                labelKey={option => {\n                                    return option.key.replaceAll('|', ' | ')\n                                }\n                                }\n                                ref={this.searchRef}\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{\n                                    backgroundColor: \"#66a3ff\",\n                                    color: \"#FFFFFF\",\n                                    cursor: 'pointer',\n                                    height: '34px',\n                                    padding: \"8px\",\n                                    width: '34px'\n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                {openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        {/* <Col xs={1}>\n                            <h5>Filter By: </h5>\n                        </Col> */}\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight: \"5px\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    : null}\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction createDatasetLinkTag(proj, ds) {\n    return '<a href=\"' + this.createDatasetLink(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDatasetLinkTag,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component, useCallback, useState } from 'react';\nimport ReactFlow, { Controls, ReactFlowProvider, useStoreState, useStoreActions } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\nimport { createGraphLayout } from '../common/layout.js';\n\nclass Lineage extends Component {\n\n    // CONSTANT VALUES\n    static DEFAULT_CONTAINER_HEIGHT = 500;\n    static DEFAULT_CONTAINER_WIDTH = 1030;\n\n    static DEFAULT_NODE_HEIGHT = 75;\n    static DEFAULT_NODE_WIDTH = 250;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n            nodes: [],\n            edges: [],\n            flowInstance: null,\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n\n        this.reactFlowInstance = null;\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        let basePositionX = 0;\n        let basePositionY = 0;\n\n        var baseElementId = 'base';\n        var baseNode = {\n            id: baseElementId,\n            className: 'thread-node-base',\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: basePositionX, y: basePositionY },\n            // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n            style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        };\n\n        // console.log('base-node :: base_splits[1].length == ' + base_splits[1].length);\n\n        var elements = [baseNode];\n        var _nodes = [baseNode];\n        var _edges = [];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n            var node = {\n                id: elementId,\n                className: 'thread-node',\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n                style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: basePositionX, y: basePositionY },                     \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n\n            console.log('down_res == ');\n            console.log(down_res);\n\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'up_' + x.toString();\n            var node ={\n                id: elementId,\n                className: 'thread-node',\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n                style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: basePositionX, y: basePositionY },         \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n\n            console.log('up_res == ');\n            console.log(up_res);\n\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }        \n\n        this.setState({\n            edges: _edges,\n            elements: elements,\n            nodes: _nodes\n        });\n\n        createGraphLayout(elements)\n            .then((els) => this.setState({elements: els}))\n            .catch((err) => console.error(err));\n    }\n\n    onLoad(rv) {\n        console.log('onLoad() :: rv == ');\n        console.log(rv);\n\n        setTimeout(() => rv.fitView(), 1000);\n    }\n\n    onElementsRemove(elements) {\n        console.log('onElementsRemove() :: elements == ');\n        console.log(elements);\n    }\n\n    onFitView(rv) {\n        console.log('onFitView() :: rv == ');\n        console.log(rv);\n    }\n\n    render() {\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n\n        // TODO onNodesChange isn't trigger when changing the screen.\n        // none of the event listens seem to trigger when changing view.\n        // need to trigger the fitview when changing over.\n \n        console.log('render() :: state == ');\n        console.log(this.state);\n        \n        return (\n            <div className='REACT-FLOW-CONTAINER' style={{ backgroundColor: '#EEE', height: Lineage.DEFAULT_CONTAINER_HEIGHT, width: \"100%\" }}>\n                {this.state.elements && \n                <ReactFlowProvider>\n                    <ReactFlow \n                        onLoad={this.onLoad} \n                        // onFitView={this.onFitView}\n                        elements={this.state.elements}\n                        // onElementsRemove={this.onElementsRemove}\n                        nodeTypes={this.nodeTypes} \n                        style={{ height: \"100%\", width: \"100%\" }}\n                        // fitView\n                    >\n                        <Controls showInteractive=\"false\" />\n                    </ReactFlow>\n                </ReactFlowProvider>}\n            </div>\n        );        \n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  var project = \"\";\n  var dataset = \"\";\n  var column = \"\";\n\n  function formatData(_data)  {  \n    var project_splits = _data.project.split('|');\n    switch(project_splits.length) {\n      case 1:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n      case 2:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        break;\n      case 3:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        column = project_splits[2];\n        break;\n      default:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n    }\n  }\n\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", project + '|' + dataset);\n  }\n\n  formatData(data);\n\n  return (\n    <>\n      <Handle\n        className='thread-handle'\n        type=\"target\"\n        position=\"left\"\n        isConnectable={isConnectable}\n      />\n\n      <div>\n        <div>\n          <h6>{project}</h6>\n        </div>\n        <div>\n          <a href='javascript:void(0)' onClick={selectDataset}>{dataset}</a>\n        </div>\n        <div>\n          <p>{column}</p>\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n    </>\n  );\n});","import Elk from \"elkjs\";\nimport { isNode } from \"react-flow-renderer\";\nimport Lineage from \"../components/lineage\";\n\nexport const createGraphLayout = async (elements) => {\n  const nodes = [];\n  const edges = [];\n\n  const elk = new Elk({\n    defaultLayoutOptions: {\n      \"elk.algorithm\": \"layered\",\n      \"elk.contentAlignment\": \"V_CENTER\",\n      \"elk.direction\": \"RIGHT\",\n      // \"elk.edgeLabels.inline\": true,\n      \"elk.edgeRouting\": \"SPLINES\",      \n      \"elk.layered.spacing.nodeNodeBetweenLayers\": 50,\n      \"elk.padding\": \"[top=50,left=150,bottom=25,right=25]\",\n      \"elk.spacing.nodeNode\": 25,      \n    }\n  });\n\n  elements.forEach((el) => {\n    if (isNode(el)) {\n      nodes.push({\n        id: el.id,\n        width: el.__rf?.width ?? Lineage.DEFAULT_NODE_WIDTH,\n        height: el.__rf?.height ?? Lineage.DEFAULT_NODE_HEIGHT\n      });\n    } else {\n      edges.push({\n        id: el.id,\n        target: el.target,\n        source: el.source\n      });\n    }\n  });\n\n  const newGraph = await elk.layout({\n    id: \"root\",\n    children: nodes,\n    edges: edges\n  });\n\n  return elements.map((el) => {\n    if (isNode(el)) {\n      const node = newGraph?.children?.find((n) => n.id === el.id);\n      el.sourcePosition = \"right\";\n      el.targetPosition = \"left\";\n      if (node?.x && node?.y && node?.width && node?.height) {\n        el.position = {\n          x: node.x - node.width / 2 + Math.random() / 1000,\n          y: node.y - node.height / 2\n        };\n      }\n    }\n\n    return el;\n  });\n};\n"],"sourceRoot":""}