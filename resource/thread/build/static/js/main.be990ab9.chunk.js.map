{"version":3,"sources":["eventBus.js","components/lineage.js","components/customFlowNode.js","components/definition.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","common/common.js"],"names":["eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","Lineage","props","traverse","lst","node","prop","ct","res","length","x","name","update","st","base_elem","base_splits","split","basePositionX","containerWidth","nodeWidth","basePositionY","containerHeight","nodeHeight","console","log","baseElementId","baseNode","id","type","project","dataset","position","y","style","backgroundColor","borderColor","borderWidth","fontWeight","height","width","sourcePosition","targetPosition","draggable","elements","_nodes","_edges","down_res","eval","up_res","lbl","splits","col","elementId","toString","column","edgeId","edge","source","target","arrowHeadType","count","label","animated","setState","edges","nodes","state","last_ds","nodeTypes","customFlowNode","rv","fitView","this","deets","onLoad","showInteractive","Component","memo","isConnectable","background","border","borderRadius","padding","textAlign","href","onClick","preventDefault","Definition","maxWidth","Row","Col","paddingRight","definition","description","DataikuItem","defSearch","term","url","window","getWebAppBackendUrl","loading","fetch","method","headers","then","json","response","selectDef","item","alert","newDefModal","selectedDef","elem","key","orig","idx","r","push","flattenArray","applyUp","applyDown","applyTo","concat","confirmAlert","title","message","buttons","val","requestOptions","body","JSON","stringify","result","value","full_ds_name","arrayTags","tags","forEach","element","renderDataset","renderProject","renderColumn","ds","proj","lineage","buildLineage","comment","Modal","size","show","animation","onHide","Header","closeButton","Title","Body","Container","delay","labelKey","minLength","onChange","onSearch","placeholder","Form","paddingTop","Group","className","Label","Control","defaultValue","Text","Footer","Button","variant","saveCol","class","openProject","openDataset","Tabs","defaultActiveKey","Tab","eventKey","def","newDef","editDef","buildTagsString","meta","listItems","schema","map","openColumn","paddingLeft","Common","createDatasetLink","Table","striped","bordered","hover","dataSetRows","datasets","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","App","filterDataikuItems","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","entries","filters","handleOnChange","tempFilters","loadItem","selectedItem","selectedItemType","search","searchResults","dataiku","undefined","openFilter","$","ready","rendered","isLoading","option","paddingBottom","rescan","cursor","filterBy","options","renderMenuItemChildren","toggleFilter","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","projkey","createDsLinkFull","createDsLink2"],"mappings":"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","file":"static/js/main.be990ab9.chunk.js","sourcesContent":["const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component, useCallback, useState, useEffect } from 'react';\n// import ReactFlow, { Controls } from 'react-flow-renderer';\nimport ReactFlow, { addEdge, Controls, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\nimport dagre from 'dagre';\nimport { createGraphLayout } from '../common/layout.js';\n\n// const dagreGraph = new dagre.graphlib.Graph();\n// dagreGraph.setDefaultEdgeLabel(() => ({}));\n\nclass Lineage extends Component {\n\n    // CONSTANT VALUES\n    static containerHeight = 500;\n    static containerWidth = 1030;\n\n    static nodeWidth = 200;\n    static nodeHeight = 60;\n \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n            nodes: [],\n            edges: []\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    // STRUCTURE FOR NODES AND EDGES FOR AUTO LAYOUT\n    // example = () => {\n    //     const nodes = [{\n    //         id: '1',\n    //         type: 'input',\n    //         data: { label: 'input' },\n    //         position,\n    //       }];\n\n    //     const edges = [{ \n    //         id: 'e12', \n    //         source: '1', \n    //         target: '2', \n    //         type: edgeType, \n    //         animated: true \n    //     }];\n    // }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        let basePositionX = (Lineage.containerWidth / 2) - (Lineage.nodeWidth / 2);\n        let basePositionY = (Lineage.containerHeight / 2) - (Lineage.nodeHeight / 2);\n\n        // let basePositionX = 0;\n        // let basePositionY = 0;\n\n        console.log(\"basePositionX == \");\n        console.log(basePositionX);\n        console.log(\"basePositionY == \");\n        console.log(basePositionY);\n\n        var baseElementId = 'base';\n        var baseNode = {\n            id: baseElementId,\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: basePositionX, y: basePositionY },\n            // position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold', height: Lineage.nodeHeight, width: Lineage.nodeWidth },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        };\n\n        var elements = [baseNode];\n        var _nodes = [baseNode];\n        var _edges = [];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n\n            // var downYPosition = ((x + 1) - Math.ceil(down_res.length * 0.5));\n            // console.log(\"downYPosition == \");\n            // console.log(downYPosition);\n\n            // basePositionY + (nodeHeight * ((x + 1) - Math.ceil(down_res.length * 0.5))) // I believe this is the way to good, but untested.\n\n            var node = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', height: Lineage.nodeHeight, width: Lineage.nodeWidth },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                // position: { x: basePositionX, y: basePositionY },\n                // position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) }, // OG\n                position: { x: basePositionX + (Lineage.nodeWidth + 50), y: (200 / (down_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX + (Lineage.nodeWidth + 50), y: (300 / (down_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX + (Lineage.nodeWidth + 50), y: (250 / (x + 1) - (down_res.length / 2)) },\n                \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            // var upYPosition = (250 / (x + 1) - (down_res.length / 2));\n            // console.log(\"upYPosition == \");\n            // console.log(upYPosition);\n\n            var elementId = 'up_' + x.toString();\n            var node ={\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', height: Lineage.nodeHeight, width: Lineage.nodeWidth },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                // position: { x: basePositionX, y: basePositionY },\n                // position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                position: { x: basePositionX - (Lineage.nodeWidth + 50), y: (300 / (up_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX - (Lineage.nodeWidth + 50), y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }        \n\n        console.log('elements == ');\n        console.log(elements);\n\n        console.log('_nodes == ');\n        console.log(_nodes);\n\n        console.log('_edges == ');\n        console.log(_edges);\n\n        // dagreGraph.setGraph({ rankdir: 'LR' });\n\n        // _nodes.forEach((node) => {\n        //     dagreGraph.setNode(node.id, { width: Lineage.nodeWidth, height: Lineage.nodeHeight });\n        // });\n\n        // _edges.forEach((edge) => {\n        //     dagreGraph.setEdge(edge.source, edge.target);\n        // });\n\n        // dagre.layout(dagreGraph);\n\n        // const [elements, setElements] = useState();\n        // const [setElements] = useState();\n\n        // createGraphLayout(elements)\n        //     .then((els) => setElements(els))\n        //     .catch((err) => console.error(err));\n\n            // useEffect(() => {\n            //     createGraphLayout(elements)\n            //         .then((els) => setElements(els))\n            //         .catch((err) => console.error(err));\n            // }, []);\n\n        this.setState({\n            edges: _edges,\n            elements: elements,\n            nodes: _nodes\n        });\n\n        // var new_state = {}\n        // new_state[st] = elements;\n        // this.setState(new_state);\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {      \n        console.log('Render() :: this.state == ');\n        console.log(this.state);\n\n        // SEPARATED NODES AND EDGES\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }        \n\n        // const [nodes, setNodes, onNodesChange] = useNodesState(this.state.nodes);\n        // const [edges, setEdges, onEdgesChange] = useEdgesState(this.state.edges);\n\n        // const onConnect = useCallback(\n        //     (params) => setEdges((eds) => addEdge({ ...params, type: 'smoothstep', animated: true }, eds)),\n        //     []\n        // );\n\n        // setNodes([nodes]);\n        // setEdges([edges]);\n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: Lineage.containerHeight, width: Lineage.containerWidth }}>\n                {this.state.elements && \n                <ReactFlow \n                    onLoad={this.onLoad} \n                    // nodes={this.state.nodes}\n                    // edges={this.state.edges}\n                    elements={this.state.elements}\n                    nodeTypes={this.nodeTypes} \n                    // onConnect={onConnect}\n                    // onEdgesChange={onEdgesChange}\n                    // onNodesChange={onNodesChange}\n                    // connectionLineType=\"smoothstep\"\n                    style={{ height: \"100%\", width: \"100%\" }}\n                >\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );\n\n        // SECOND RENDER\n        // if (this.props.deets.name != this.state.last_ds) {\n        //     this.state.last_ds = this.props.deets.name;\n        //     this.update('elements', this.props.deets);\n        // }\n        \n        // return (\n        //     <div style={{ backgroundColor: '#EEE', height: Lineage.containerHeight, width: Lineage.containerWidth }}>\n        //         {this.state.elements && \n        //         <ReactFlow onLoad={this.onLoad} elements={this.state.elements} nodeTypes={this.nodeTypes} style={{ height: \"100%\", width: \"100%\" }}>\n        //             <Controls showInteractive=\"false\" />\n        //         </ReactFlow>}\n        //     </div>\n        // );\n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  // console.log('data == ');\n  // console.log(data);\n  // console.log('isConnectable == ');\n  // console.log(isConnectable);\n\n  // <Handle\n  //   type=\"target\"\n  //   position=\"left\"\n  //   isValidConnection={(connection) => connection.source === 'some-id'}\n  //   onConnect={(params) => console.log('handle onConnect', params)}\n  //   style={{ background: '#fff' }}\n  // />\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', height: '100%', padding: '10px', textAlign: 'center', width: '100%' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n        style={{ background: '#555' }}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Definition extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{ maxWidth: \"300px\", border: \"solid 1px #999\", borderRadius: \"2px\", padding: \"10px\" }}>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            ID\n                        </span>\n                        <span>\n                            {this.props.definition.id}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Name\n                        </span>\n                        <span>\n                            {this.props.definition.name}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Description\n                        </span>\n                        <span>\n                            {this.props.definition.description}\n                        </span>\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default Definition;","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Definition from \"./definition\"\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Definition\",\n                description: \"\"\n            }\n        };\n    }\n\n    flattenArray(elem, key, orig = []) {\n\n        for (var idx = 0; idx < elem[key].length; idx++) {\n            let r = elem[key][idx];\n\n            orig.push(r.name);\n            if (r[key].length > 0) {\n                orig = this.flattenArray(r, key, orig);\n            }\n        }\n\n        return orig;\n    }\n\n    saveCol(applyUp, applyDown) {\n        let applyTo = [this.props.item.key];\n        if (applyUp)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_upstream'))\n        if (applyDown)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_downstream'))\n\n        confirmAlert({\n            title: 'Confirm Save',\n            message: 'Are you sure to apply this definition to ' + applyTo,\n            buttons: [\n                {\n                    label: 'Apply',\n                    onClick: () => {\n                        let val = '';\n                        if (this.state.selectedDef.description != null)\n                            val = this.state.selectedDef.description;\n\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                \"name\": this.state.selectedDef.name,\n                                \"description\": val,\n                                \"applied_to\": applyTo,\n                                \"id\": this.state.selectedDef.id\n                            })\n                        }\n\n                        eventBus.dispatch(\"loading\", true);\n\n                        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n                            .then(res => res.json())\n                            .then(\n                                (result) => {\n                                    this.props.item.definition = result.value;\n\n                                    this.setState({\n                                        newDefModal: false,\n                                        selectedDef: result.value\n                                    });\n\n                                    eventBus.dispatch(\"loading\", false);\n                                });\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => { }\n                }\n            ]\n        });\n    };\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<b>Tags: </b>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        // this.setState({\n        //     selectedDef: {\n        //         name: this.props.item.name,\n        //         description: this.props.item.comment\n        //     }\n        // })\n        this.setState({ newDefModal: true });\n    }\n\n    editDef() {\n        this.setState({\n            selectedDef: {\n                name: this.props.item.definition.name,\n                description: this.props.item.definition.description,\n                id: this.props.item.definition.id\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    defSearch = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('def-search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                \n            });\n\n    }\n\n    selectDef = (item) => {\n        alert('select')\n    }\n\n    renderColumn() {\n        const filterBy = () => true;\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        if (this.props.item.definition.id > -1) {\n            this.state.selectedDef.name = this.props.item.definition.name;\n            this.state.selectedDef.id = this.props.item.definition.id;\n            this.state.selectedDef.description = this.props.item.definition.description;\n        }\n        else {\n            this.state.selectedDef.name = this.props.item.name;\n            this.state.selectedDef.description = this.props.item.comment;\n            this.state.selectedDef.id = -1;\n        }\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Definition: {this.state.selectedDef.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <AsyncTypeahead\n                                // filterBy={filterBy}\n                                id=\"def-search\"\n                                delay={300}\n                                labelKey=\"key\"\n                                minLength={3}\n                                onChange={this.selectDef}\n                                onSearch={this.defSearch}\n                                // options={searchResults}\n                                placeholder='Search'\n                                // renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                        </Row>\n                        <Row>\n                            <Form style={{ paddingTop: '5px' }}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Definition Name</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                        onChange={e => this.state.selectedDef.name = e.target.value}\n                                    />\n                                    <div style={{ height: \"10px\" }}></div>\n                                    <Form.Label>Definition Description</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.description}\n                                        onChange={e => this.state.selectedDef.description = e.target.value}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Will appear in the Dataiku Dataset's column description.\n                                    </Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" onClick={() => this.saveCol(true, true)}>Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol(false, false)}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <p class=\"name\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n            </p>\n            <p class=\"name\"><b>Dataset: </b>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '.' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <p class=\"name\"><b>Column Name: </b>{this.props.item.name}\n            </p>\n            <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        {\n                            this.props.item.definition.id == -1 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Add Definition</Button>{' '}\n                            </div>\n                        }\n                        {\n                            this.props.item.definition.id > 0 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.editDef()}\n                                >Edit Definition</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    <Definition definition={this.state.selectedDef}></Definition>\n                                </div>\n                            </div>\n                        }\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={Common.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    FaFilter,\n    FaRedo\n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,\n            },\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {\n            var dataikuItem = response[results];\n            if (types.indexOf(dataikuItem.type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }\n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).map(([key, value]) => {\n            if (value == true) {\n                types[types.length] = key.toString();\n            }\n        });\n\n        return types;\n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({\n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        loading: false,\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                });\n        }\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'column'\n                }])\n            );\n\n            eventBus.on(\"loading\", (isLoading) =>\n                this.setState({ \"loading\": isLoading })\n            );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                labelKey=\"key\"\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{\n                                    backgroundColor: \"#66a3ff\",\n                                    color: \"#FFFFFF\",\n                                    cursor: 'pointer',\n                                    height: '34px',\n                                    padding: \"8px\",\n                                    width: '34px'\n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                {openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        <Col xs={1}>\n                            <h4>Filter By: </h4>\n                        </Col>\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight: \"1.0em\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    : null}\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\n// function createDsLink(ds) {\n//     return this.createDsLink2(ds.projectKey, ds.name)\n// }\n\n// function createDsLink2(proj, ds) {\n//     return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n// }\n\nfunction createDsLinkFull(proj, ds) {\n    return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkFull,\n    getIconForDataikuItemType\n};\n\nexport default Common;"],"sourceRoot":""}