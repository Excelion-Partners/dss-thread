{"version":3,"sources":["components/customFlowNode.js","common/common.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","components/dataset.js"],"names":["memo","data","isConnectable","type","position","style","background","border","borderRadius","textAlign","padding","fontWeight","project","href","onClick","e","preventDefault","eventBus","dispatch","dataset","column","Common","getIconForDataikuItemType","size","DataikuItem","props","state","Row","deets","this","item","full_ds_name","name","arrayTags","tags","forEach","element","length","key","alert","renderDataset","renderProject","renderColumn","Col","ds","proj","class","buildTagsString","meta","lineage","buildLineage","paddingLeft","createDatasetLink","id","target","textDecoration","color","openProject","projkey","dataSetRows","datasets","map","col","openDataset","createProjectLink","projectKey","paddingTop","Tabs","defaultActiveKey","className","Tab","eventKey","title","def","Table","striped","bordered","hover","itemDetails","renderItemDetailsByType","xs","Component","App","loadItem","setState","loading","console","log","fetch","window","getWebAppBackendUrl","method","headers","then","res","json","response","selectedItem","selectedItemType","search","query","p_list","Object","keys","results","searchResults","dataiku","undefined","dataikuItem","isLoading","$","document","ready","rendered","on","option","marginLeft","marginRight","Container","filterBy","labelKey","minLength","onChange","onSearch","options","placeholder","renderMenuItemChildren","Spinner","animation","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","Dataset","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","split","elements","y","backgroundColor","width","borderColor","borderWidth","sourcePosition","targetPosition","draggable","down_res","eval","up_res","lbl","splits","edge","source","arrowHeadType","count","label","animated","new_state","closeColumn","modalClosed","modalDialog","selectedCol","comment","col_elements","last_ds","showA","nodeTypes","customFlowNode","body","JSON","stringify","createColName","result","lineage_downstream","downs","lineage_upstream","ups","lin","join","cols","i","schema","createDsLink2","rv","fitView","listItems","openColumn","show","onHide","Header","closeButton","Title","Body","height","onLoad","showInteractive","Group","Label","Control","defaultValue","value","Text","Footer","variant","saveColLineage","saveCol","delay","autohide","src","alt"],"mappings":"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","file":"static/js/main.1c524747.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\n\nexport default memo(({ data, isConnectable }) => {\n\n  function createDsLink2(proj, ds) {\n    return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n  }\n\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', textAlign: 'center', padding: '10px' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\nfunction getIconForDataikuItemType(type, size = \"14px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Dataset from \"./dataset\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\n\nclass DataikuItem extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    buildLineage() {\n        // UPSTREAM TO THE LEFT\n        // DOWNSTREAM TO THE RIGHT\n\n        return <Row>\n            <Dataset deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Dataset>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<span><b>Tags: </b></span>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    // buildSchemaTable() { \n    //     const data = React.useMemo(\n    //         () => this.props.item.schema,\n    //         []\n    //       )\n\n    //       const columns = React.useMemo(\n    //         () => [\n    //             {  \n    //                 Header: 'Name',  \n    //                 accessor: 'name'  \n    //             },{  \n    //                 Header: 'Type',  \n    //                 accessor: 'type'  \n    //             }\n    //         ],\n    //         []\n    //       )\n\n    //       const {\n    //         getTableProps,\n    //         getTableBodyProps,\n    //         headerGroups,\n    //         rows,\n    //         prepareRow,\n    //       } = useTable({ columns, data })\n\n    //       return (\n    //         <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n    //           <thead>\n    //             {headerGroups.map(headerGroup => (\n    //               <tr {...headerGroup.getHeaderGroupProps()}>\n    //                 {headerGroup.headers.map(column => (\n    //                   <th\n    //                     {...column.getHeaderProps()}\n    //                     style={{\n    //                       borderBottom: 'solid 3px red',\n    //                       background: 'aliceblue',\n    //                       color: 'black',\n    //                       fontWeight: 'bold',\n    //                     }}\n    //                   >\n    //                     {column.render('Header')}\n    //                   </th>\n    //                 ))}\n    //               </tr>\n    //             ))}\n    //           </thead>\n    //           <tbody {...getTableBodyProps()}>\n    //             {rows.map(row => {\n    //               prepareRow(row)\n    //               return (\n    //                 <tr {...row.getRowProps()}>\n    //                   {row.cells.map(cell => {\n    //                     return (\n    //                       <td\n    //                         {...cell.getCellProps()}\n    //                         style={{\n    //                           padding: '10px',\n    //                           border: 'solid 1px gray',\n    //                           background: 'papayawhip',\n    //                         }}\n    //                       >\n    //                         {cell.render('Cell')}\n    //                       </td>\n    //                     )\n    //                   })}\n    //                 </tr>\n    //               )\n    //             })}\n    //           </tbody>\n    //         </table>\n    //       )\n    // }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    renderColumn() {\n        return <Col> <p class=\"name\"><b>Name: </b>{this.props.item.name}\n            {/* <span style={{ paddingLeft: '4px' }}>\n                <a href={this.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span> */}\n        </p>\n        <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n        <p class=\"name\"><b>Project: </b>{this.props.item.project}</p>\n        <p class=\"name\"><b>Dataset: </b>{this.props.item.dataset}</p>\n            {/* <p class=\"project\"><b>Project: </b>\n                <span style={{ textDecoration: 'underline', color: 'blue' }} onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}\n            </p> */}\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n\n        // let schemaTable = this.buildSchemaTable();\n        let lineage = this.buildLineage();\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={this.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span style={{ textDecoration: 'underline', color: 'blue' }} onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            {/* <div class=\"schema-content\">  \n                <p class=\"schema\"><b>Project: </b></p>\n                {schemaTable}\n            </div>     */}\n\n            <div class=\"tags\">{tags}</div>\n            <div class=\"lineage\">{lineage}</div>\n\n        </Col>;\n    }\n\n    createProjectLink(projkey) {\n        return '/projects/' + projkey + '/flow/';\n    }\n\n    createDatasetLink(projkey, ds) {\n        return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n    }\n\n    renderProject() {\n        // const columns = [{  \n        //     Header: 'Name',  \n        //     accessor: 'name'  \n        // },{  \n        //     Header: 'Type',  \n        //     accessor: 'type'  \n        // }] \n        // onClick={() => this.openColumn(col)}\n\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={this.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            {/* <p class=\"project\"><b>Project: </b>{this.props.item.project}</p> */}\n\n            {/* <div class=\"schema-content\">  \n                <p class=\"schema\"><b>Project: </b></p>\n                <ReactTable  \n                    data={this.props.schema}  \n                    columns={columns}  \n                    defaultPageSize = {2}  \n                    pageSizeOptions = {[2,4, 6]}  \n                />  \n            </div>     */}\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\" style={{ paddingTop: '20px' }}>\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    Container,\n    Row,\n    Spinner\n} from 'react-bootstrap';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            isLoading: false,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n            loading: true\n        }\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                    this.setState({ loading: false });\n                });\n        }\n        // else {\n        //     this.setState({\n        //         selectedItem: null      \n        //     });\n        // }\n    }\n\n    search = (query) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('search') + '?term=' + query, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = [];\n                Object.keys(response).forEach(function (results) {\n                    p_list[p_list.length] = response[results];\n                });\n\n                this.setState({\n                    searchResults: p_list\n                });\n                this.setState({ loading: false });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n            this.loadItem([{\n                key: proj,\n                type: 'column'\n            }])\n        );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ marginLeft: '.5rem', marginRight: '.5rem' }}>Type: {option.type}; </span>\n            <span>Name: {option.name}; </span>\n        </Fragment>;\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { isLoading, searchResults, selectedItem, selectedItemType } = this.state;\n        // const ref = React.createRef();\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row>\n                    <AsyncTypeahead\n                        filterBy={filterBy}\n                        id=\"async-search\"\n                        isLoading={isLoading}\n                        labelKey=\"name\"\n                        minLength={3}\n                        onChange={this.loadItem}\n                        onSearch={this.search}\n                        options={searchResults}\n                        placeholder='Search'\n                        renderMenuItemChildren={this.renderMenuItemChildren}\n                    />\n                </Row>\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n\n                {this.dataikuItem}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport ReactFlow, { Controls } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\n\n// import EditColumnModal from \"./editColumnModal\";\n\nclass Dataset extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalDialog: false,\n            selectedCol: { name: '', comment: '' },\n            elements: [],\n            col_elements: [],\n            last_ds: '',\n            showA: false\n        };\n\n        // this.toggleModal = this.toggleModal.bind(this);\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        var elements = [{\n            id: '-1',\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', width: '200px', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold' },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        }];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage-downstream'] != null && base_elem['lineage-downstream'] != '') {\n            if (base_elem['lineage-downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage-downstream');\n            else\n                down_res = eval(base_elem['lineage-downstream']);\n        }\n\n        var up_res = [];\n        if (base_elem['lineage-upstream'] != null && base_elem['lineage-upstream'] != '') {\n            if (base_elem['lineage-upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage-upstream');\n            else\n                up_res = eval(base_elem['lineage-upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            elements[elements.length] = {\n                id: 'down_' + x,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) },\n                draggable: false\n            }\n\n            var edge = { id: '-1-down_' + x, source: '-1', target: 'down_' + x, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            elements[elements.length] = {\n                id: 'up_' + x,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            }\n\n            var edge = { id: '-1-up_' + x, source: 'up_' + x, target: '-1', arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n        }\n        var new_state = {}\n        new_state[st] = elements;\n\n        this.setState(new_state)\n    }\n\n    openColumn(col) {\n        // loading the column lineage\n        fetch(window.getWebAppBackendUrl('column-lineage'), {\n            method: 'POST', body: JSON.stringify({\n                'column': this.createColName(col.name)\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    col.lineage_downstream = result.downs;\n                    col.lineage_upstream = result.ups;\n\n                    this.update('col_elements', col);\n                    this.setState({ modalDialog: true, selectedCol: col });\n                    //eventBus.dispatch(\"dataRefresh\", {});\n                });\n    };\n\n    closeColumn = () => {\n        this.modalClosed();\n        // this.setState({ showA: true })\n    }\n\n    createColName(col) {\n        return this.props.full_ds_name + '.' + col;\n    }\n\n    formatLineage(lin) {\n        // for (var x = 0; x < lin.length; x++) {\n        //     lin[x] = this.createDsLinkFull(lin[x].split('.')[0], lin[x].split('.')[1])\n        // }\n\n        if (lin != null)\n            return lin.join(\", \");\n\n        return ''\n    }\n\n    modalClosed() {\n        this.update('elements', this.props.deets);\n        this.setState({ modalDialog: false });\n    }\n\n    saveColLineage() {\n        var cols = [this.createColName(this.state.selectedCol.name)]\n        for (var i = 0; i < this.state.selectedCol.lineage_upstream.length; i++) {\n            cols[cols.length] = this.state.selectedCol.lineage_upstream[i]\n        }\n        for (var i = 0; i < this.state.selectedCol.lineage_downstream.length; i++) {\n            cols[cols.length] = this.state.selectedCol.lineage_downstream[i]\n        }\n        this.modalClosed();\n\n        fetch(window.getWebAppBackendUrl('update-col-desc'), {\n            method: 'POST', body: JSON.stringify({\n                'cols': cols,\n                'desc': this.state.selectedCol.comment\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    eventBus.dispatch(\"dataRefresh\", {});\n                });\n    }\n\n    saveCol() {\n        // alert(this.state.selectedCol.comment)\n\n        for (var x = 0; x < this.props.deets.schema.length; x++) {\n            if (this.props.deets.schema[x].name == this.state.selectedCol.name) {\n                this.props.deets.schema[x].comment = this.state.selectedCol.comment;\n                break;\n            }\n        }\n\n        // for (var x = 0; x < this.props.deets.schema.columns.length; x++) {\n        //     if (this.props.deets.schema.columns[x].name == this.state.selectedCol.name) {\n        //         this.props.deets.schema.columns[x].comment = this.state.selectedCol.comment;\n        //         break;\n        //     }\n        // }\n\n        this.modalClosed();\n\n        fetch(window.getWebAppBackendUrl('update-col-desc'), {\n            method: 'POST', body: JSON.stringify({\n                'cols': [this.createColName(this.state.selectedCol.name)],\n                'desc': this.state.selectedCol.comment,\n                'upstream': false,\n                'downstream': false\n            })\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    eventBus.dispatch(\"dataRefresh\", {});\n                });\n    }\n\n    createDsLink(ds) {\n        return this.createDsLink2(ds.projectKey, ds.name)\n    }\n\n    createDsLink2(proj, ds) {\n        return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n    }\n\n    createDsLinkFull(proj, ds) {\n        return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {\n\n        // setTimeout(() => {\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n        // }, 500);\n\n        var listItems = this.props.deets.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        // var listItems = this.props.deets.schema.columns.map((col) =>\n        //     <tr onClick={() => this.openColumn(col)}>\n        //         <td>{col.name}</td>\n        //         <td>{col.type}</td>\n        //         <td>{col.comment}</td>\n        //     </tr>\n        // );\n\n        return (\n            <>\n\n                <Modal size=\"lg\" show={this.state.modalDialog} onHide={this.closeColumn} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.selectedCol.name}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Container>\n                            {/* <Row>\n                                <b>Downstream:</b><div>{this.formatLineage(this.state.selectedCol.lineage_downstream)}</div>\n                            </Row>\n                            <Row>\n                                <b>Upstream:</b><div>{this.formatLineage(this.state.selectedCol.lineage_upstream)}</div>\n                            </Row> */}\n                            <Row>\n                                <div style={{ height: 300 }}>\n                                    <ReactFlow onLoad={this.onLoad} elements={this.state.col_elements} nodeTypes={this.nodeTypes}>\n                                        <Controls showInteractive=\"false\" />\n                                    </ReactFlow>\n                                </div>\n                            </Row>\n                            <Row>\n                                <Form style={{ paddingTop: '15px' }}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Description</Form.Label>\n                                        <Form.Control type=\"text\" defaultValue={this.state.selectedCol.comment}\n                                            onChange={e => this.state.selectedCol.comment = e.target.value}\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                            Will be saved to the DSS Column name\n                                        </Form.Text>\n                                    </Form.Group>\n                                </Form>\n                            </Row>\n                        </Container>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => this.saveColLineage()}>Save all Lineage</Button>\n                        <Button variant=\"primary\" onClick={() => this.saveCol()}>Save</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Container style={{ paddingTop: '20px' }}>\n                    {/* <Row><h2><a href={this.createDsLink(this.props.deets)} target=\"_blank\">{this.props.deets.name} ({this.props.deets.projectKey})</a></h2></Row> */}                    \n                    {/* <Row><h4><b>Type:</b> {this.props.deets.type}</h4></Row> */}\n                    {/* <Row><h4><b>Last Modified:</b> {this.props.deets.versionTag.lastModifiedBy.login} @ {this.props.deets.versionTag.lastModifiedOn}</h4></Row> */}\n                    {/* <Row><h4><b>Short Desc:</b> {this.props.deets.shortDesc}</h4></Row> */}\n                    <Row>\n                        <Toast show={this.state.showA} delay={3000} autohide animation={false}>\n                            <Toast.Header>\n                                <img\n                                    src=\"holder.js/20x20?text=%20\"\n                                    className=\"rounded me-2\"\n                                    alt=\"\"\n                                />\n                                <strong className=\"me-auto\">Bootstrap</strong>\n                                <small>11 mins ago</small>\n                            </Toast.Header>\n                            <Toast.Body>Woohoo, you're reading this text in a Toast!</Toast.Body>\n                        </Toast>\n                    </Row>\n                    <Row style={{ paddingTop: '20px' }}>\n                        <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                            <Tab eventKey=\"lineage\" title=\"Lineage\">\n                                <Row>\n                                    <div style={{ backgroundColor: '#EEE', height: 500 }}>\n                                        {this.state.elements && <ReactFlow onLoad={this.onLoad} elements={this.state.elements} nodeTypes={this.nodeTypes}>\n                                            <Controls showInteractive=\"false\" />\n                                        </ReactFlow>}\n                                    </div>\n                                </Row>\n                            </Tab>\n                            <Tab eventKey=\"columns\" title=\"Columns\" def>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Type</th>\n                                            <th>Description</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {listItems}\n                                    </tbody>\n                                </Table>\n                            </Tab>\n                        </Tabs>\n                    </Row>\n                </Container>\n\n            </>\n        );\n    }\n}\n\nexport default Dataset;"],"sourceRoot":""}