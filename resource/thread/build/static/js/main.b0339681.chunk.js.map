{"version":3,"sources":["components/meaning.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js"],"names":["Meaning","props","Container","Row","Col","style","fontWeight","paddingRight","this","meaning","name","description","Component","DataikuItem","state","newDefModal","selectedDef","val","requestOptions","method","headers","body","JSON","stringify","item","key","id","fetch","window","getWebAppBackendUrl","then","res","json","result","setState","value","deets","full_ds_name","type","arrayTags","tags","forEach","element","length","alert","renderDataset","renderProject","renderColumn","comment","definition","col","eventBus","dispatch","ds","proj","lineage","buildLineage","Modal","size","show","animation","onHide","Header","closeButton","Title","Body","Form","paddingTop","Group","className","Label","Control","defaultValue","onChange","e","target","Footer","Button","variant","onClick","saveCol","class","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","Tab","eventKey","title","def","newDef","padding","editDef","buildTagsString","meta","listItems","schema","map","openColumn","paddingLeft","href","Common","createDatasetLink","Table","striped","bordered","hover","dataSetRows","datasets","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","App","filterDataikuItems","response","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","toString","entries","filters","handleOnChange","tempFilters","loadItem","loading","console","log","selectedItem","selectedItemType","search","term","url","searchResults","dataiku","undefined","column","openFilter","$","document","ready","rendered","on","option","split","paddingBottom","textAlign","rescan","width","height","cursor","filterBy","delay","labelKey","minLength","onSearch","options","placeholder","renderMenuItemChildren","toggleFilter","backgroundColor","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","projkey","createDsLinkFull","createDsLink2","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","baseElementId","elements","position","y","borderColor","borderWidth","sourcePosition","targetPosition","draggable","down_res","eval","up_res","lbl","splits","elementId","downYPosition","edgeId","edge","source","arrowHeadType","count","label","animated","upYPosition","new_state","last_ds","nodeTypes","customFlowNode","rv","fitView","onLoad","showInteractive","memo","isConnectable","background","border","borderRadius","preventDefault"],"mappings":"kYA0CeA,E,kDAnCX,WAAYC,GAAQ,uCACVA,G,0CAKV,WACI,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMC,MAAO,CAAEC,WAAY,OAAQC,aAAc,SAAjD,QAGA,8BACKC,KAAKP,MAAMQ,QAAQC,QAIhC,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAMC,MAAO,CAAEC,WAAY,OAAQC,aAAc,SAAjD,eAGA,8BACKC,KAAKP,MAAMQ,QAAQE,oB,GA3B1BC,aC0TPC,E,kDAlTX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IAEDa,MAAQ,CACTC,aAAa,EACbC,YAAa,CACTN,KAAM,cACNC,YAAa,KAPN,E,2CAYnB,WAAW,IAAD,OAEFM,EAAM,GACgC,MAAtCT,KAAKM,MAAME,YAAYL,cACvBM,EAAMT,KAAKM,MAAME,YAAYL,aAEjC,IAAMO,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,KAAQf,KAAKM,MAAME,YAAYN,KAC/B,YAAeO,EACf,WAAc,CAACT,KAAKP,MAAMuB,KAAKC,KAC/B,GAAMjB,KAAKM,MAAME,YAAYU,MAIrCC,MAAMC,OAAOC,oBAAoB,eAAgBX,GAC5CY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKC,SAAS,CACVnB,aAAa,EACbC,YAAaiB,EAAOE,a,0BAKxC,WACI,OAAO,kBAAChC,EAAA,EAAD,KACH,kBAAC,IAAD,CAASiC,MAAO5B,KAAKP,MAAMuB,KAAMa,aAAc7B,KAAKP,MAAMuB,KAAKd,KAAM4B,KAAM9B,KAAKP,MAAMqC,U,6BAI9F,SAAgBC,GACZ,IAAIC,EAAO,CAAC,8BAAM,uCAMlB,OAJAD,EAAUE,SAAQ,SAAAC,GACdF,EAAKA,EAAKG,QAAU,8BAAOD,MAGxBF,I,iCAGX,SAAoBf,GAChBmB,MAAMnB,K,qCAGV,WACI,OAAQjB,KAAKP,MAAMqC,MACf,IAAK,UACD,OAAO9B,KAAKqC,gBAChB,IAAK,UACD,OAAOrC,KAAKsC,gBAChB,IAAK,SACD,OAAOtC,KAAKuC,eAChB,IAAK,UACD,OAAO,kBAAC3C,EAAA,EAAD,KACH,6E,oBAKhB,WACII,KAAK0B,SAAS,CACVlB,YAAa,CACTN,KAAM,iBACNyB,MAAO3B,KAAKP,MAAMuB,KAAKwB,WAG/BxC,KAAK0B,SAAS,CAAEnB,aAAa,M,qBAGjC,WACIP,KAAK0B,SAAS,CACVlB,YAAa,CACTN,KAAMF,KAAKP,MAAMuB,KAAKyB,WAAWvC,KACjCyB,MAAO3B,KAAKP,MAAMuB,KAAKyB,WAAWtC,YAClCe,GAAIlB,KAAKP,MAAMuB,KAAKyB,WAAWvB,MAGvClB,KAAK0B,SAAS,CAAEnB,aAAa,M,wBAGjC,SAAWmC,GACPC,IAASC,SAAS,iBAAkBF,K,yBAGxC,SAAYG,GACRF,IAASC,SAAS,kBAAmBC,K,yBAGzC,SAAYC,GACRH,IAASC,SAAS,kBAAmBE,K,0BAGzC,WAAgB,IAAD,OACPC,EAAU/C,KAAKgD,eAcnB,OAXIhD,KAAKP,MAAMuB,KAAKyB,WAAWvB,IAAM,GACjClB,KAAKM,MAAME,YAAYN,KAAOF,KAAKP,MAAMuB,KAAKyB,WAAWvC,KACzDF,KAAKM,MAAME,YAAYU,GAAKlB,KAAKP,MAAMuB,KAAKyB,WAAWvB,GACvDlB,KAAKM,MAAME,YAAYL,YAAcH,KAAKP,MAAMuB,KAAKyB,WAAWtC,cAGhEH,KAAKM,MAAME,YAAYN,KAAO,cAC9BF,KAAKM,MAAME,YAAYL,YAAc,GACrCH,KAAKM,MAAME,YAAYU,IAAM,GAG1B,kBAACtB,EAAA,EAAD,KACH,kBAACqD,EAAA,EAAD,CAAOC,KAAK,KAAKC,KAAMnD,KAAKM,MAAMC,YAAa6C,WAAW,EAAOC,OAdjD,kBAAM,EAAK3B,SAAS,CAAEnB,aAAa,MAe/C,kBAAC0C,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,EAAA,EAAMO,MAAP,KAAcxD,KAAKM,MAAME,YAAYN,OAEzC,kBAAC+C,EAAA,EAAMQ,KAAP,KACI,kBAAC/D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC+D,EAAA,EAAD,CAAM7D,MAAO,CAAE8D,WAAY,SACvB,kBAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAClB,kBAACH,EAAA,EAAKI,MAAN,yBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcjC,KAAK,OAAOkC,aAAchE,KAAKM,MAAME,YAAYN,KAC3D+D,SAAU,SAAAC,GAAC,OAAI,EAAK5D,MAAME,YAAYN,KAAOgE,EAAEC,OAAOxC,SAE1D,kBAAC+B,EAAA,EAAKI,MAAN,0BACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcjC,KAAK,OAAOkC,aAAchE,KAAKM,MAAME,YAAYmB,MAC3DsC,SAAU,SAAAC,GAAC,OAAI,EAAK5D,MAAME,YAAYL,YAAc+D,EAAEC,OAAOxC,cAOrF,kBAACsB,EAAA,EAAMmB,OAAP,KAEI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,aAAhB,oBACA,kBAACD,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAM,EAAKC,YAA9C,UAIR,uBAAGC,MAAM,QAAO,wCACZ,0BAAMZ,UAAU,WAAWU,QAAS,kBAAM,EAAKG,YAAY,EAAKjF,MAAMuB,KAAK2D,WAAW3E,KAAKP,MAAMuB,KAAK2D,UAE1G,uBAAGF,MAAM,QAAO,wCACZ,0BAAMZ,UAAU,WAAWU,QAAS,kBAAM,EAAKK,YAAY,EAAKnF,MAAMuB,KAAK2D,QAAU,IAAM,EAAKlF,MAAMuB,KAAK6D,WAAW7E,KAAKP,MAAMuB,KAAK6D,UAE1I,uBAAGJ,MAAM,QAAO,4CAAqBzE,KAAKP,MAAMuB,KAAKd,MAErD,uBAAGuE,MAAM,QAAO,qCAAczE,KAAKP,MAAMuB,KAAKc,MAE9C,yBAAKjC,MAAO,CAAE8D,WAAY,SACtB,kBAACmB,EAAA,EAAD,CAAMC,iBAAiB,aAAalB,UAAU,QAC1C,kBAACmB,EAAA,EAAD,CAAKC,SAAS,aAAaC,MAAM,aAAaC,KAAG,IAEP,GAAlCnF,KAAKP,MAAMuB,KAAKyB,WAAWvB,IAC3B,6BACI,kBAACmD,EAAA,EAAD,CAAQC,QAAQ,UACZC,QAAS,kBAAM,EAAKa,WADxB,OAEc,IACd,yBAAKvF,MAAO,CAAEwF,QAAS,SACnB,kBAAC,EAAD,CAASpF,QAASD,KAAKM,MAAME,gBAKrCR,KAAKP,MAAMuB,KAAKyB,WAAWvB,GAAK,GAChC,6BACI,kBAACmD,EAAA,EAAD,CAAQC,QAAQ,UACZC,QAAS,kBAAM,EAAKe,YADxB,QAEe,IACf,yBAAKzF,MAAO,CAAEwF,QAAS,SACnB,kBAAC,EAAD,CAASpF,QAASD,KAAKM,MAAME,iBAK7C,kBAACwE,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,UAAUC,KAAG,GACvC,yBAAKV,MAAM,WAAW1B,S,2BAO1C,WAAiB,IAAD,OACRf,EAAOhC,KAAKuF,gBAAgBvF,KAAKP,MAAMuB,KAAKwE,KAAKxD,MACjDe,EAAU/C,KAAKgD,eAEfyC,EAAYzF,KAAKP,MAAMuB,KAAK0E,OAAOC,KAAI,SAACjD,GAAD,OACvC,wBAAI6B,QAAS,kBAAM,EAAKqB,WAAWlD,EAAIzB,OACnC,4BAAKyB,EAAIxC,MACT,4BAAKwC,EAAIZ,MACT,4BAAKY,EAAIF,aAIjB,OAAO,kBAAC5C,EAAA,EAAD,KACH,uBAAG6E,MAAM,QAAO,qCAAczE,KAAKP,MAAMuB,KAAKd,KAC1C,0BAAML,MAAO,CAAEgG,YAAa,QACxB,uBAAGC,KAAMC,IAAOC,kBAAkBhG,KAAKP,MAAMuB,KAAK2D,QAAS3E,KAAKP,MAAMuB,KAAKE,IAAKiD,OAAO,UAAS,kBAAC,IAAD,CAAoBjB,KAAM,QAGlI,uBAAGuB,MAAM,WAAU,wCACf,0BAAMZ,UAAU,WAAWU,QAAS,kBAAM,EAAKG,YAAY,EAAKjF,MAAMuB,KAAK2D,WAAW3E,KAAKP,MAAMuB,KAAK2D,UAC1G,uBAAGF,MAAM,QAAO,qCAAczE,KAAKP,MAAMqC,MAEzC,yBAAK2C,MAAM,QAAQzC,GAEnB,kBAACrC,EAAA,EAAD,CAAKE,MAAO,CAAE8D,WAAY,SACtB,kBAACmB,EAAA,EAAD,CAAMC,iBAAiB,UAAU7D,GAAG,2BAA2B2C,UAAU,QACrE,kBAACmB,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAC1B,yBAAKT,MAAM,WAAW1B,IAE1B,kBAACiC,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,UAAUC,KAAG,GACvC,kBAACc,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,oCACA,oCACA,6CAGR,+BACKX,U,2BAS7B,WAAiB,IAAD,OACRzD,EAAOhC,KAAKuF,gBAAgBvF,KAAKP,MAAMuB,KAAKgB,MAC5CqE,EAAcrG,KAAKP,MAAMuB,KAAKsF,SAASX,KAAI,SAACjD,GAAD,OAC3C,4BACI,wBAAI6B,QAAS,kBAAM,EAAKK,YAAYlC,KAAOA,OAInD,OAAO,kBAAC9C,EAAA,EAAD,KACH,uBAAG6E,MAAM,QAAO,qCAAa,8BAAOzE,KAAKP,MAAMuB,KAAKd,MAAY,0BAAML,MAAO,CAAEgG,YAAa,QACxF,uBAAGC,KAAMC,IAAOQ,kBAAkBvG,KAAKP,MAAMuB,KAAKwF,YAAarC,OAAO,UAAS,kBAAC,IAAD,CAAoBjB,KAAM,QAE7G,uBAAGuB,MAAM,QAAO,qCAAczE,KAAKP,MAAMqC,MAEzC,yBAAK2C,MAAM,QAAQzC,GACnB,yBAAKnC,MAAO,CAAE8D,WAAY,SACtB,kBAACmB,EAAA,EAAD,CAAMC,iBAAiB,WAAWlB,UAAU,QACxC,kBAACmB,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,WAAWC,KAAG,GACzC,kBAACc,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,sCAGR,+BACKC,U,oBAS7B,WACI,IAAIrF,EACAyF,EAAczG,KAAK0G,0BAcvB,OAZI1F,EADmB,MAAnBhB,KAAKP,MAAMuB,KACJ,kBAACrB,EAAA,EAAD,CAAKkE,UAAU,qBAClB,kBAACjE,EAAA,EAAD,CAAK+G,GAAI,GACJZ,IAAOa,0BAA0B5G,KAAKP,MAAMqC,KAAM,SAEtD2E,GAGE,kBAAC9G,EAAA,EAAD,KACH,qDAKJ,yBAAK8E,MAAM,gBACNzD,O,GA7SSZ,aCmSXyG,E,kDA5QX,WAAYpH,GAAQ,IAAD,8BACf,cAAMA,IAkBVqH,mBAAqB,SAACC,GAClB,IAAIC,EAAQ,EAAKC,mBAEbC,EAAS,GASb,OARAC,OAAOC,KAAKL,GAAU9E,SAAQ,SAAUoF,GACpC,IAAIC,EAAcP,EAASM,GACxBL,EAAMO,QAAQD,EAAYxF,KAAK0F,aAAe,IAC7CN,EAAOA,EAAO/E,QAAUmF,MAKzBJ,GA/BQ,EAkCnBD,iBAAmB,WACf,IAAID,EAAQ,GAOZ,OANAG,OAAOM,QAAQ,EAAKnH,MAAMoH,SAAS/B,KAAI,YAAmB,IAAD,mBAAhB1E,EAAgB,KACzC,GADyC,OAEjD+F,EAAMA,EAAM7E,QAAUlB,EAAIuG,eAI3BR,GA1CQ,EA6CnBW,eAAiB,SAAC7F,GACd,IAAI8F,EAAc,EAAKtH,MAAMoH,QAC7BE,EAAY9F,IAAS8F,EAAY9F,GAEjC,EAAKJ,SAAS,CACVgG,QAASE,KAlDE,EAsDnBC,SAAW,SAAC7G,GAKR,GAJA,EAAKU,SAAS,CAAEoG,SAAS,IACzBC,QAAQC,IAAI,wBACZD,QAAQC,IAAIhH,GAERA,EAAKmB,OAAS,EAAG,CAMjBhB,MAAMC,OAAOC,oBAAoB,aAAe,QAAUL,EAAK,GAAGC,IAL3C,CACnBN,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAI1BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACyF,GACHgB,QAAQC,IAAI,gBACZD,QAAQC,IAAIjB,GAEZ,EAAKrF,SAAS,CACVoG,SAAS,EACTG,aAAclB,EACdmB,iBAAkBlH,EAAK,GAAGc,YA1E3B,EAgFnBqG,OAAS,SAACC,GACN,IAKIC,EAAMjH,OAAOC,oBAAoB,UAAY,SAAW+G,EAC5D,EAAK1G,SAAS,CAAEoG,SAAS,IACzB3G,MAAMkH,EAPiB,CACnB1H,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAM1BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACyF,GACH,IAAIG,EAAS,EAAKJ,mBAAmBC,GAErC,EAAKrF,SAAS,CACV4G,cAAepB,EACfY,SAAS,QA5FrB,EAAKxH,MAAQ,CACTiI,aAASC,EACTlB,YAAa,KACbI,QAAS,CACLe,QAAQ,EACR5D,SAAS,EACTF,SAAS,GAEbmD,SAAS,EACTY,YAAY,EACZT,aAAc,KACdC,iBAAkB,KAClBI,cAAe,IAfJ,E,qDAoGnB,WAAqB,IAAD,OAChBlH,OAAOuH,EAAEC,UAAUC,OAAM,WACrB,EAAKnH,SAAS,CAAE6G,QAASnH,OAAOmH,UAChC,EAAK7G,SAAS,CAAEoH,UAAU,IAC1B,EAAKpH,SAAS,CAAEoG,SAAS,IAMzBnF,IAASoG,GAAG,mBAAmB,SAAClG,GAAD,OAC3B,EAAKgF,SAAS,CAAC,CACX5G,IAAK4B,EACLf,KAAM,gBAIda,IAASoG,GAAG,mBAAmB,SAACjG,GAAD,OAC3B,EAAK+E,SAAS,CAAC,CACX5G,IAAK6B,EACLhB,KAAM,gBAIda,IAASoG,GAAG,kBAAkB,SAACjG,GAAD,OAC1B,EAAK+E,SAAS,CAAC,CACX5G,IAAK6B,EACLhB,KAAM,oB,oBAStB,WAAU,IAAD,OACL9B,KAAK0B,SAAS,CAAEoG,SAAS,IACzB3G,MAAMC,OAAOC,oBAAoB,SAC5BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACyF,GACH,EAAKrF,SAAS,CAAEoG,SAAS,S,oCAIrC,SAAuBkB,EAAQvJ,GAC3B,OAAO,kBAAC,WAAD,KACFsG,IAAOa,0BAA0BoC,EAAOlH,MACzC,0BAAMjC,MAAO,CAAEC,WAAY,OAAQ+F,YAAa,QAAhD,SAAgEmD,EAAO9I,MACvE,0BAAML,MAAO,CAAEwF,QAAS,QAAxB,KACA,uCAAa2D,EAAOlH,MACJ,WAAfkH,EAAOlH,MAAoC,UAAfkH,EAAOlH,MAChC,8BACI,0BAAMjC,MAAO,CAAEwF,QAAS,QAAxB,KACA,0CAAgB2D,EAAO/H,IAAIgI,MAAM,KAAK,Q,0BAMtD,WACIjJ,KAAK0B,SAAS,CAAEgH,YAAa1I,KAAKM,MAAMoI,e,oBAG5C,WAAU,IAAD,OAiBL,EAAwF1I,KAAKM,MAArFoH,EAAR,EAAQA,QAAkBgB,GAA1B,EAAiBZ,QAAjB,EAA0BY,YAAYJ,EAAtC,EAAsCA,cAAeL,EAArD,EAAqDA,aAAcC,EAAnE,EAAmEA,iBAKnE,OAFAlI,KAAKsH,YAAc,kBAAC,EAAD,CAAatG,KAAMiH,EAAcnG,KAAMoG,IAGtD,kBAACxI,EAAA,EAAD,CAAWG,MAAO,CAAE8D,WAAY,SAC5B,kBAAChE,EAAA,EAAD,CAAKE,MAAO,CAAEqJ,cAAe,SACzB,kBAACtJ,EAAA,EAAD,KAAK,uCACL,kBAACA,EAAA,EAAD,CAAKC,MAAO,CAAEsJ,UAAW,UACrB,kBAAC,IAAD,CAAQ5E,QAAS,kBAAM,EAAK6E,UAAUvJ,MAAO,CAAEwJ,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,eAI9F,kBAAC5J,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKiE,UAAU,cAAchE,MAAO,CAAEwJ,MAAO,SACzC,kBAAC,IAAD,CACIG,SAjBP,kBAAM,GAkBCtI,GAAG,eACHuI,MAAO,IACPC,SAAS,MACTC,UAAW,EACX1F,SAAUjE,KAAK6H,SACf+B,SAAU5J,KAAKmI,OACf0B,QAASvB,EACTwB,YAAY,SACZC,uBAAwB/J,KAAK+J,uBAC7BlK,MAAO,CAAEwJ,MAAO,WAEpB,yBAAKxF,UAAU,mBACX,kBAAC,IAAD,CAAUU,QAAS,kBAAM,EAAKyF,gBAAgBnK,MAAO,CACjDoK,gBAAiB,UACjBC,MAAQ,UACRX,OAAQ,UACRD,OAAQ,OACRjE,QAAS,MACTgE,MAAO,cAOzBX,EACE,kBAAC/I,EAAA,EAAD,CAAKkE,UAAU,SAAShE,MAAO,CAAEsK,UAAW,UACxC,kBAACvK,EAAA,EAAD,CAAK+G,GAAI,GACL,4CAEHQ,OAAOM,QAAQC,GAAS/B,KAAI,YAAmB,IAAD,mBAAhB1E,EAAgB,KAAXU,EAAW,KAC3C,OACI,kBAAC/B,EAAA,EAAD,CAAK+G,GAAI,GACL,yBAAK9C,UAAU,eAAe5C,IAAKA,GAC/B,2BACIa,KAAK,WACLZ,GAAE,iBAAYD,GACdf,KAAMe,EACNU,MAAOV,EACPmJ,QAASzI,EACTsC,SAAU,kBAAM,EAAK0D,eAAe1G,IACpCpB,MAAO,CAAEwK,YAAc,WAE3B,2BAAOC,QAAO,iBAAYrJ,IAAQA,EAAlC,WAMtB,KAEF,kBAACtB,EAAA,EAAD,KACI,yBAAKE,MAAO,CAAEwF,QAAS,SAClBrF,KAAKM,MAAMwH,QACR,kBAACyC,EAAA,EAAD,CAASnH,UAAU,SAASoH,KAAK,UAC7B,0BAAM3G,UAAU,mBAAhB,eAEF,OAGd,kBAAClE,EAAA,EAAD,KACKK,KAAKsH,kB,GAtQRlH,aCtBEqK,QACW,cAA7BrJ,OAAOsJ,SAASC,UAEe,UAA7BvJ,OAAOsJ,SAASC,UAEhBvJ,OAAOsJ,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAOP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASoC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcrC,MACrBvH,MAAK,SAAA6J,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvD,QAAQuD,MAAMA,EAAMC,a,gCEzI5B,IAAM5I,EAAW,CACboG,GADa,SACVyC,EAAOC,GACR7C,SAAS8C,iBAAiBF,GAAO,SAACtH,GAAD,OAAOuH,EAASvH,EAAEyH,YAErD/I,SAJa,SAIJ4I,EAAOI,GACdhD,SAASiD,cAAc,IAAIC,YAAYN,EAAO,CAAEG,OAAQC,MAE1DG,OAPa,SAONP,EAAOC,GACZ7C,SAASoD,oBAAoBR,EAAOC,KAIzB9I,O,gCCZjB,4BAuCA,IAAMoD,EAAS,CACXC,kBArBJ,SAA2BiG,EAASpJ,GAChC,MAAO,aAAeoJ,EAAU,aAAepJ,EAAK,aAqBpD0D,kBA1BJ,SAA2B0F,GACvB,MAAO,aAAeA,EAAU,UA0BhCC,iBA/BJ,SAA0BpJ,EAAMD,GAC5B,MAAO,YAAc7C,KAAKmM,cAAcrJ,EAAMD,GAAM,qBAAuBC,EAAO,IAAMD,EAAK,QA+B7F+D,0BApBJ,SAAmC9E,GAAsB,IAAhBoB,EAAe,uDAAR,OAE5C,OAAOpB,GACH,IAAK,UACD,OAAO,kBAAC,IAAD,CAAkBoB,KAAMA,IACnC,IAAK,UACD,OAAO,kBAAC,IAAD,CAAYA,KAAMA,IAC7B,IAAK,SACD,OAAO,kBAAC,IAAD,CAAWA,KAAMA,IAC5B,IAAK,aACD,OAAO,kBAAC,IAAD,CAAQA,KAAMA,IACzB,QACI,OAAO,kBAAC,IAAD,CAAkBA,KAAMA,OAW5B6C,O,qxCC1CTqG,Q,0eAEF,iBAAY3M,OAAQ,IAAD,sPACf,uBAAMA,OADS,MAanB4M,SAAW,SAACC,EAAKC,EAAMC,GAAkB,IAAZC,EAAW,uDAAN,EAC1BlL,EAAM,GACV,GAAkB,MAAdgL,EAAKC,IAAiBD,EAAKC,GAAMrK,OAAS,EAAG,CAC7CsK,GAAU,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKC,GAAMrK,OAAQuK,IACnC,MAAKL,SAASC,EAAKC,EAAKC,GAAME,GAAIF,EAAMC,QAI5CH,EAAIA,EAAInK,QAAU,CACd,MAASsK,EAAK,EACd,KAAQF,EAAKrM,MAIrB,OAAOqB,GA5BQ,MA+BnBoL,OAAS,SAACC,GAAIC,WACV,IAAIC,YAAcD,UAAU3M,KAAK+I,MAAM,KAEnC8D,cAAgB,OAChBC,SAAW,CAAC,CACZ9L,GAAI6L,cACJjL,KAAM,iBACN8J,KAAM,CAAEjH,QAASmI,YAAY,GAAIjI,QAASiI,YAAY,IACtDG,SAAU,CAAEP,EAAG,IAAKQ,EAAG,KACvBrN,MAAO,CAAEoK,gBAAiB,OAAQZ,MAAO,QAAS8D,YAAa,MAAOC,YAAa,MAAOtN,WAAY,QACtGuN,eAAgB,QAChBC,eAAgB,OAChBC,WAAW,IAIXC,SAAW,GACwB,MAAnCX,UAAS,oBAAqE,IAAnCA,UAAS,qBACb,MAAnCA,UAAS,mBACT,MAAKR,SAASmB,SAAUX,UAAW,sBAEnCW,SAAWC,KAAKZ,UAAS,qBAGjC,IAAIa,OAAS,GACwB,MAAjCb,UAAS,kBAAiE,IAAjCA,UAAS,mBACb,MAAjCA,UAAS,iBACT,MAAKR,SAASqB,OAAQb,UAAW,oBAEjCa,OAASD,KAAKZ,UAAS,mBAG/B,IAAK,IAAIH,EAAI,EAAGA,EAAIc,SAASrL,OAAQuK,IAAK,CACtC,IAAIiB,IAAMH,SAASd,GACH,MAAZiB,IAAIzN,OACJyN,IAAMH,SAASd,GAAGxM,MAEtB,IAAI0N,OAASD,IAAI1E,MAAM,KACnBtE,QAAUiJ,OAAO,GACjB/I,QAAU,GACVnC,IAAM,GACNkL,OAAOzL,OAAS,IAChB0C,QAAU+I,OAAO,IACjBA,OAAOzL,OAAS,IAChBO,IAAMkL,OAAO,IAEjB,IAAIC,UAAY,QAAUnB,EAAElF,WAExBsG,cAAiB,KAAOJ,OAAOvL,OAAS,IAAMuK,EAAI,GACtD3E,QAAQC,IAAI,qBACZD,QAAQC,IAAI8F,eAEZd,SAASA,SAAS7K,QAAU,CACxBjB,GAAI2M,UACJ/L,KAAM,iBACN8J,KAAM,CAAEjH,QAASA,QAASE,QAASA,QAAS4D,OAAQ/F,KACpD7C,MAAO,CAAEoK,gBAAiB,OAAQZ,MAAO,SACzCiE,eAAgB,OAChBD,eAAgB,QAEhBJ,SAAU,CAAEP,EAAG,IAAKQ,EAAI,KAAOQ,OAAOvL,OAAS,IAAMuK,EAAI,IAEzDa,WAAW,GAGf,IAAIQ,OAAS,aAAerB,EAAElF,WAC1BwG,KAAO,CAAE9M,GAAI6M,OAAQE,OAAQlB,cAAe5I,OAAQ0J,UAAWK,cAAe,SAC9EV,SAASd,GAAGyB,MAAQ,IACpBH,KAAKI,MAAQ,IAAMZ,SAASd,GAAGyB,MAAQ,IACvCH,KAAKK,UAAW,GAGpBrB,SAASA,SAAS7K,QAAU6L,KAGhC,IAAK,IAAItB,EAAI,EAAGA,EAAIgB,OAAOvL,OAAQuK,IAAK,CACpC,IAAIiB,IAAMD,OAAOhB,GACD,MAAZiB,IAAIzN,OACJyN,IAAMD,OAAOhB,GAAGxM,MAEpB,IAAI0N,OAASD,IAAI1E,MAAM,KACnBtE,QAAUiJ,OAAO,GACjB/I,QAAU,GACVnC,IAAM,GACNkL,OAAOzL,OAAS,IAChB0C,QAAU+I,OAAO,IACjBA,OAAOzL,OAAS,IAChBO,IAAMkL,OAAO,IAEjB,IAAIU,YAAe,KAAOZ,OAAOvL,OAAS,IAAMuK,EAAI,GACpD3E,QAAQC,IAAI,mBACZD,QAAQC,IAAIsG,aAEZ,IAAIT,UAAY,MAAQnB,EAAElF,WAC1BwF,SAASA,SAAS7K,QAAU,CACxBjB,GAAI2M,UACJ/L,KAAM,iBACN8J,KAAM,CAAEjH,QAASA,QAASE,QAASA,QAAS4D,OAAQ/F,KACpD7C,MAAO,CAAEoK,gBAAiB,OAAQZ,MAAO,SACzCgE,eAAgB,QAChBC,eAAgB,OAChBL,SAAU,CAAEP,EAAG,EAAGQ,EAAI,KAAOQ,OAAOvL,OAAS,IAAMuK,EAAI,IACvDa,WAAW,GAGf,IAAIQ,OAAS,WAAarB,EAAElF,WACxBwG,KAAO,CAAE9M,GAAI6M,OAAQE,OAAQJ,UAAW1J,OAAQ4I,cAAemB,cAAe,SAC9ER,OAAOhB,GAAGyB,MAAQ,IAClBH,KAAKK,UAAW,EAChBL,KAAKI,MAAQ,IAAMV,OAAOhB,GAAGyB,MAAQ,KAGzCnB,SAASA,SAAS7K,QAAU6L,KAEhC,IAAIO,UAAY,GAChBA,UAAU3B,IAAMI,SAEhB,MAAKtL,SAAS6M,YAjJd,MAAKjO,MAAQ,CACT0M,SAAU,GACVwB,QAAS,IAGb,MAAKC,UAAY,CACbC,eAAgBA,mDATL,M,4PAuJnB,SAAOC,GACHA,EAAGC,Y,oBAGP,WAMI,OALI5O,KAAKP,MAAMmC,MAAM1B,MAAQF,KAAKM,MAAMkO,UACpCxO,KAAKM,MAAMkO,QAAUxO,KAAKP,MAAMmC,MAAM1B,KACtCF,KAAK2M,OAAO,WAAY3M,KAAKP,MAAMmC,QAInC,kEAAK/B,MAAO,CAAEoK,gBAAiB,OAAQX,OAAQ,MAAOD,MAAO,SACxDrJ,KAAKM,MAAM0M,UACZ,2DAAC,mDAAD,CAAW6B,OAAQ7O,KAAK6O,OAAQ7B,SAAUhN,KAAKM,MAAM0M,SAAUyB,UAAWzO,KAAKyO,UAAW5O,MAAO,CAAEyJ,OAAQ,OAAQD,MAAO,SACtH,2DAAC,mDAAD,CAAUyF,gBAAgB,gB,SAvKxB1O,8CA8KPgM,+B,gCClLf,0CAMe2C,oBAAK,YAA8B,IAA3BnD,EAA0B,EAA1BA,KAAMoD,EAAoB,EAApBA,cAW3B,OALAjH,QAAQC,IAAI,YACZD,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAI,qBACZD,QAAQC,IAAIgH,GAGV,oCACE,kBAAC,IAAD,CACElN,KAAK,SACLmL,SAAS,OACTpN,MAAO,CAAEoP,WAAY,QACrBD,cAAeA,IAEjB,yBAAKnP,MAAO,CAAEqP,OAAQ,iBAAkBC,aAAc,MAAOhG,UAAW,SAAU9D,QAAS,SACzF,yBAAKxF,MAAO,CAAEC,WAAY,SAAW8L,EAAKjH,SAC1C,6BAEE,uBAAGmB,KAAK,qBAAqBvB,QAtBrC,SAAuBL,GACrBA,EAAEkL,iBACFzM,IAASC,SAAS,kBAAmBgJ,EAAKjH,QAAU,IAAMiH,EAAK/G,WAoBH+G,EAAK/G,UAE7D,6BACG+G,EAAKnD,SAIV,kBAAC,IAAD,CACE3G,KAAK,SACLmL,SAAS,QACT+B,cAAeA,S","file":"static/js/main.b0339681.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Meaning extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Name\n                        </span>\n                        <span>\n                            {this.props.meaning.name}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Description\n                        </span>\n                        <span>\n                            {this.props.meaning.description}\n                        </span>\n                    </Col>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\nexport default Meaning;","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Meaning from \"./meaning\"\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Meaning\",\n                description: \"\"\n            }\n        };\n    }\n\n    saveCol() {\n\n        let val = '';\n        if (this.state.selectedDef.description != null)\n            val = this.state.selectedDef.description;\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"name\": this.state.selectedDef.name,\n                \"description\": val,\n                \"applied_to\": [this.props.item.key],\n                \"id\": this.state.selectedDef.id\n            })\n        }\n\n        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        newDefModal: false,\n                        selectedDef: result.value\n                    });\n                });\n    }\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<span><b>Tags: </b></span>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        this.setState({\n            selectedDef: {\n                name: 'New Definition',\n                value: this.props.item.comment\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    editDef() {\n        this.setState({\n            selectedDef: {\n                name: this.props.item.definition.name,\n                value: this.props.item.definition.description,\n                id: this.props.item.definition.id\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    renderColumn() {\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        if (this.props.item.definition.id > -1) {\n            this.state.selectedDef.name = this.props.item.definition.name;\n            this.state.selectedDef.id = this.props.item.definition.id;\n            this.state.selectedDef.description = this.props.item.definition.description;\n        }\n        else {\n            this.state.selectedDef.name = \"New Meaning\";\n            this.state.selectedDef.description = \"\";\n            this.state.selectedDef.id = -1;\n        }\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.state.selectedDef.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Form style={{ paddingTop: '15px' }}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Description Name</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                        onChange={e => this.state.selectedDef.name = e.target.value}\n                                    />\n                                    <Form.Label>Description Value</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.value}\n                                        onChange={e => this.state.selectedDef.description = e.target.value}\n                                    />\n                                </Form.Group>\n                            </Form>\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" >Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol()}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <p class=\"name\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n            </p>\n            <p class=\"name\"><b>Dataset: </b>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '.' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <p class=\"name\"><b>Column Name: </b>{this.props.item.name}\n            </p>\n            <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        {\n                            this.props.item.definition.id == -1 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Add</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    <Meaning meaning={this.state.selectedDef}></Meaning>\n                                </div>\n                            </div>\n                        }\n                        {\n                            this.props.item.definition.id > 0 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.editDef()}\n                                >Edit</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    <Meaning meaning={this.state.selectedDef}></Meaning>\n                                </div>\n                            </div>\n                        }\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={Common.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { \n    FaFilter, \n    FaRedo \n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,                \n            },\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],            \n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {    \n            var dataikuItem = response[results];\n            if(types.indexOf(dataikuItem.type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }            \n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).map(([key, value]) => {            \n            if(value == true) {\n                types[types.length] = key.toString();\n            }            \n        });\n\n        return types; \n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({ \n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        loading: false,\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                });\n        }\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'column'\n                }])\n            );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                labelKey=\"key\"\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{ \n                                    backgroundColor: \"#66a3ff\", \n                                    color:  \"#FFFFFF\",\n                                    cursor: 'pointer', \n                                    height: '34px', \n                                    padding: \"8px\", \n                                    width: '34px' \n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                { openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        <Col xs={1}>\n                            <h4>Filter By: </h4>\n                        </Col>\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight:  \"1.0em\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>                                \n                            );\n                        })}\n                    </Row>\n                : null }\n                \n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\n// function createDsLink(ds) {\n//     return this.createDsLink2(ds.projectKey, ds.name)\n// }\n\n// function createDsLink2(proj, ds) {\n//     return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n// }\n\nfunction createDsLinkFull(proj, ds) {\n    return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkFull,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component } from \"react\";\nimport ReactFlow, { Controls } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\n\nclass Lineage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        var baseElementId = 'base';\n        var elements = [{\n            id: baseElementId,\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', width: '200px', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold' },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        }];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n\n            var downYPosition = (300 / (up_res.length + 1) * (x + 1));\n            console.log(\"downYPosition == \");\n            console.log(downYPosition);\n\n            elements[elements.length] = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n\n                position: { x: 500, y: (200 / (up_res.length + 1) * (x + 1)) },\n                // position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) },\n                draggable: false\n            }\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var upYPosition = (300 / (up_res.length + 1) * (x + 1));\n            console.log(\"upYPosition == \");\n            console.log(upYPosition);\n\n            var elementId = 'up_' + x.toString();\n            elements[elements.length] = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            }\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n        }\n        var new_state = {}\n        new_state[st] = elements;\n\n        this.setState(new_state)\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {        \n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: \"500\", width: \"1030\" }}>\n                {this.state.elements && \n                <ReactFlow onLoad={this.onLoad} elements={this.state.elements} nodeTypes={this.nodeTypes} style={{ height: \"100%\", width: \"100%\" }}>\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );\n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  console.log('data == ');\n  console.log(data);\n  console.log('isConnectable == ');\n  console.log(isConnectable);\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', textAlign: 'center', padding: '10px' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});"],"sourceRoot":""}