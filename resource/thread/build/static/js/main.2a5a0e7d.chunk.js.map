{"version":3,"sources":["components/dataikuItem.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js","components/customFlowNode.js"],"names":["DataikuItem","props","state","newDefModal","selectedDef","name","value","val","this","requestOptions","method","headers","body","JSON","stringify","item","key","fetch","window","getWebAppBackendUrl","then","res","json","result","setState","Row","deets","full_ds_name","type","arrayTags","tags","forEach","element","length","alert","renderDataset","renderProject","renderColumn","Col","comment","col","eventBus","dispatch","ds","proj","lineage","buildLineage","Modal","size","show","animation","onHide","Header","closeButton","Title","Body","Container","Form","style","paddingTop","Group","className","Label","Control","defaultValue","onChange","e","target","Footer","Button","variant","onClick","saveCol","class","openProject","project","openDataset","dataset","Tabs","defaultActiveKey","Tab","eventKey","title","def","definition","id","newDef","padding","buildTagsString","meta","listItems","schema","map","openColumn","paddingLeft","href","Common","createDatasetLink","Table","striped","bordered","hover","dataSetRows","datasets","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","Component","App","filterDataikuItems","response","console","log","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","entries","filters","handleOnChange","tempFilters","loadItem","loading","selectedItem","selectedItemType","search","term","url","searchResults","dataiku","undefined","columns","projects","openFilter","$","document","ready","rendered","on","option","fontWeight","split","paddingBottom","textAlign","rescan","width","height","cursor","filterBy","delay","labelKey","minLength","onSearch","options","placeholder","renderMenuItemChildren","toggleFilter","backgroundColor","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","detail","data","dispatchEvent","CustomEvent","remove","removeEventListener","projkey","createDsLinkFull","createDsLink2","Lineage","traverse","lst","node","prop","ct","x","update","st","base_elem","base_splits","baseElementId","elements","position","y","borderColor","borderWidth","sourcePosition","targetPosition","draggable","down_res","up_res","eval","lbl","splits","elementId","toString","downYPosition","column","edgeId","edge","source","arrowHeadType","count","label","animated","upYPosition","new_state","last_ds","nodeTypes","customFlowNode","rv","fitView","onLoad","showInteractive","memo","isConnectable","background","border","borderRadius","preventDefault"],"mappings":"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","file":"static/js/main.2a5a0e7d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Definition\",\n                value: \"\"\n            }\n        };\n    }\n\n    saveCol() {\n\n        let val = '';\n        if (this.state.selectedDef.value != null)\n            val = this.state.selectedDef.value;\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"name\": this.state.selectedDef.name,\n                \"description\": val,\n                \"applied_to\": [this.props.item.key],\n                \"id\": -1\n            })\n        }\n\n        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({ newDefModal: false });\n                });\n    }\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<span><b>Tags: </b></span>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        this.setState({\n            selectedDef: {\n                name: 'New Definition',\n                value: this.props.item.comment\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    renderColumn() {\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.state.selectedDef.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Form style={{ paddingTop: '15px' }}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Description Name</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                        onChange={e => this.state.selectedDef.name = e.target.value}\n                                    />\n                                    <Form.Label>Description Value</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.value}\n                                        onChange={e => this.state.selectedDef.value = e.target.value}\n                                    />\n                                </Form.Group>\n                            </Form>\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" >Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol()}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <p class=\"name\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n            </p>\n            <p class=\"name\"><b>Dataset: </b>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '.' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <p class=\"name\"><b>Column Name: </b>{this.props.item.name}\n            </p>\n            <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        {\n                            this.props.item.definition.id == -1 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Add</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    {this.props.item.comment}\n                                </div>\n                            </div>\n                        }\n                        {\n                            this.props.item.definition.id > 0 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Edit</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    {this.props.item.comment}\n                                </div>\n                            </div>\n                        }\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={Common.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { \n    FaFilter, \n    FaRedo \n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                columns: true,\n                datasets: true,\n                projects: true,                \n            },\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],            \n        }\n    }\n\n    filterDataikuItems = (response) => {\n        console.log('response == ');\n        console.log(response);\n    \n\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {    \n            // console.log('results == ' + results);\n            // console.log(results);\n\n            var dataikuItem = response[results];\n            // console.log('dataikuItem == ');\n            // console.log(dataikuItem);\n\n            if(types.indexOf(dataikuItem.type) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }            \n        });\n        \n        // var res = a.filter(function (el) {\n        //     return types.indexOf(el.id) >= 0; \n        //   });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).map(([key, value]) => {            \n            if(value == true) {\n                types[types.length] = key;\n            }            \n        });\n\n        return types;\n\n        // if(types.length > 0) {\n        //     let strTypes = \"&types=\";\n        //     strTypes += types.map((type, i, arr) => {\n        //         return type;\n        //     });\n    \n        //     return strTypes;\n        // } else {\n        //     return null;\n        // }        \n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({ \n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        loading: false,\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                });\n        }\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n\n        // let types = this.formatQueryTypes();\n        // if(types != null) {\n        //     url += types;\n        // }\n        // console.log('url = ' + url);\n\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n                // Object.keys(response).forEach(function (results) {\n                //     console.log('response == ');\n                //     console.log(response);\n\n                //     console.log('results == ');\n                //     console.log(results);\n\n                //     p_list[p_list.length] = response[results];\n                // });\n\n                this.setState({\n                    searchResults: p_list\n                });\n                this.setState({ loading: false });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'column'\n                }])\n            );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                // isLoading={this.state.loading}\n                                // disabled={this.state.loading}\n                                delay={300}\n                                labelKey=\"key\"\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{ \n                                    backgroundColor: \"#66a3ff\", \n                                    color:  \"#FFFFFF\",\n                                    cursor: 'pointer', \n                                    height: '34px', \n                                    padding: \"8px\", \n                                    width: '34px' \n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                { openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        <Col xs={1}>\n                            <h4>Filter By: </h4>\n                        </Col>\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight:  \"1.0em\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}</label>\n                                    </div>\n                                </Col>                                \n                            );\n                        })}\n                    </Row>\n                : null }\n                \n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\n// function createDsLink(ds) {\n//     return this.createDsLink2(ds.projectKey, ds.name)\n// }\n\n// function createDsLink2(proj, ds) {\n//     return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n// }\n\nfunction createDsLinkFull(proj, ds) {\n    return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkFull,\n    getIconForDataikuItemType\n};\n\nexport default Common;","import React, { Component } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport ReactFlow, { Controls } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\n\n// import EditColumnModal from \"./editColumnModal\";\n\nclass Lineage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n        };\n\n        // this.toggleModal = this.toggleModal.bind(this);\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        var baseElementId = 'base';\n        var elements = [{\n            id: baseElementId,\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', width: '200px', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold' },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        }];\n\n        // find all the end-nodes\n        var down_res = [];\n        var up_res = [];\n\n        if(this.props.type == 'column') {\n            if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n                if (base_elem['lineage_downstream'] != null)\n                    this.traverse(down_res, base_elem, 'lineage_downstream');\n                else\n                    down_res = eval(base_elem['lineage_downstream']);\n            }\n            \n            if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n                if (base_elem['lineage_upstream'] != null)\n                    this.traverse(up_res, base_elem, 'lineage_upstream');\n                else\n                    up_res = eval(base_elem['lineage_upstream']);\n            }\n        } else {\n            if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n                if (base_elem['lineage_downstream'] != null)\n                    this.traverse(down_res, base_elem, 'lineage_downstream');\n                else\n                    down_res = eval(base_elem['lineage_downstream']);\n            }\n            \n            if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n                if (base_elem['lineage_upstream'] != null)\n                    this.traverse(up_res, base_elem, 'lineage_upstream');\n                else\n                    up_res = eval(base_elem['lineage_upstream']);\n            }\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n\n            var downYPosition = (300 / (up_res.length + 1) * (x + 1));\n            console.log(\"downYPosition == \");\n            console.log(downYPosition);\n\n            elements[elements.length] = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n\n                position: { x: 500, y: (200 / (up_res.length + 1) * (x + 1)) },\n                // position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) },\n                draggable: false\n            }\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var upYPosition = (300 / (up_res.length + 1) * (x + 1));\n            console.log(\"upYPosition == \");\n            console.log(upYPosition);\n\n            var elementId = 'up_' + x.toString();\n            elements[elements.length] = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', width: '200px' },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            }\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n        }\n        var new_state = {}\n        new_state[st] = elements;\n\n        this.setState(new_state)\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {        \n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: \"500\", width: \"1030\" }}>\n                {this.state.elements && \n                <ReactFlow onLoad={this.onLoad} elements={this.state.elements} nodeTypes={this.nodeTypes} style={{ height: \"100%\", width: \"100%\" }} fitView>\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );\n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', textAlign: 'center', padding: '10px' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n      {/* <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"b\"\n        style={{ bottom: 10, top: 'auto', background: '#555' }}\n        isConnectable={isConnectable}\n      /> */}\n    </>\n  );\n});"],"sourceRoot":""}