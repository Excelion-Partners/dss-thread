{"version":3,"sources":["components/dataikuItem.js","components/customFlowNode.js","common/layout.js","components/definition.js","App.js","serviceWorker.js","index.js","eventBus.js","common/common.js","components/lineage.js"],"names":["DataikuItem","props","defSearch","term","url","window","getWebAppBackendUrl","setState","loading","fetch","method","headers","then","res","json","response","state","defSearchResults","selectDef","item","tempSelDef","newDefSelected","toggleNew","isNew","name","description","comment","applied_to","id","definition","console","log","lineage","newDefModal","selectedDef","isLineageVisible","elem","key","orig","idx","length","r","push","this","flattenArray","saveCol","applyUp","applyDown","applyTo","eval","concat","val","requestOptions","body","JSON","stringify","eventBus","dispatch","result","value","deets","full_ds_name","type","object_type","arrayTags","variant","tags","forEach","element","style","marginRight","size","alert","renderDataset","renderProject","renderColumn","renderDefinition","prevProps","prevState","resetSelectedDef","col","ds","proj","option","fontWeight","filterBy","buildLineage","handleClose","tabClicked","e","show","animation","onHide","Header","closeButton","Title","Body","labelKey","caseSensitive","minLength","onChange","onSearch","options","placeholder","renderMenuItemChildren","renderDefSearchMenuItem","paddingTop","Group","className","padding","Label","Control","disabled","defaultValue","target","buildTagsString","as","rows","Text","Footer","textAlign","onClick","ms-auto","xs","class","Common","getIconForDataikuItemType","marginLeft","href","createDatasetLink","project","dataset","openProject","openDataset","defaultActiveKey","onSelect","eventKey","title","def","newDef","editDef","meta","listItems","schema","map","openColumn","striped","bordered","hover","dataSetRows","datasets","split","paddingLeft","paddingBottom","createProjectLink","projectKey","folder","itemDetails","renderItemDetailsByType","Component","memo","data","isConnectable","column","_data","project_splits","formatData","position","preventDefault","createGraphLayout","elements","a","nodes","edges","elk","Elk","defaultLayoutOptions","el","isNode","width","__rf","Lineage","DEFAULT_NODE_WIDTH","height","DEFAULT_NODE_HEIGHT","source","layout","children","newGraph","node","find","n","sourcePosition","targetPosition","x","y","Math","random","Definition","App","filterDataikuItems","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","toString","entries","filters","sort","handleOnChange","tempFilters","loadItem","loadItemByKey","navToObject","itemKey","selectedItem","selectedItemType","search","searchResults","dataiku","undefined","currentUser","openFilter","$","document","ready","rendered","navDeepLink","on","isLoading","parts","top","location","obj","base_url","paddingRight","searchRef","React","createRef","Container","fontSize","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","rescan","cursor","Row","Col","delay","ref","toggleFilter","backgroundColor","color","marginTop","checked","htmlFor","Spinner","role","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message","event","callback","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","projkey","createDatasetLinkTag","traverse","lst","prop","ct","update","st","base_elem","base_splits","basePositionX","basePositionY","baseElementId","baseNode","draggable","_nodes","_edges","down_res","up_res","lbl","splits","elementId","edgeId","edge","arrowHeadType","count","label","animated","els","err","last_ds","nodeTypes","customFlowNode","flowInstance","rv","setTimeout","fitView","forceUpdate","DEFAULT_CONTAINER_HEIGHT","onLoad","showInteractive","DEFAULT_CONTAINER_WIDTH"],"mappings":"2uEAaMA,Y,kfACF,qBAAYC,GAAQ,IAAD,uPACf,mBAAMA,IAkNVC,UAAY,SAACC,GACT,IAKIC,EAAMC,OAAOC,oBAAoB,cAAgB,SAAWH,EAChE,EAAKI,SAAS,CAAEC,SAAS,IACzBC,MAAML,EAPiB,CACnBM,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAM1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKC,MAAMC,iBAAmBF,MA9NvB,EAyOnBG,UAAY,SAACC,GACT,EAAKZ,SAAS,CACVa,WAAYD,EAAK,GACjBE,gBAAgB,KA5OL,EAgPnBC,UAAY,SAACC,GACT,EAAKhB,SAAS,CACVc,eAAgBE,IAGhBA,EACA,EAAKhB,SAAS,CACVa,WAAY,CACRI,KAAM,EAAKvB,MAAMkB,KAAKK,KACtBC,YAAa,EAAKxB,MAAMkB,KAAKO,QAC7BC,WAAY,GACZC,IAAK,KAKb,EAAKrB,SAAS,CACVa,WAAY,CACRI,KAAM,EAAKvB,MAAMkB,KAAKU,WAAWL,KACjCG,WAAY,EAAK1B,MAAMkB,KAAKU,WAAWF,WACvCF,YAAa,EAAKxB,MAAMkB,KAAKU,WAAWJ,YACxCG,GAAI,EAAK3B,MAAMkB,KAAKU,WAAWD,OAlQ3CE,QAAQC,IAAI,aACZD,QAAQC,IAAI9B,GAEZ,EAAKe,MAAQ,CACTgB,QAAS,KACTC,aAAa,EACbC,YAAa,CACTN,IAAK,GAETR,WAAY,GAEZC,gBAAgB,EAChBJ,iBAAkB,GAClBkB,kBAAkB,GAhBP,E,sQAqBnB,SAAaC,EAAMC,GACf,IADgC,IAAZC,EAAW,uDAAJ,GAClBC,EAAM,EAAGA,EAAMH,EAAKC,GAAKG,OAAQD,IAAO,CAC7C,IAAIE,EAAIL,EAAKC,GAAKE,GAElBD,EAAKI,KAAKD,EAAEjB,MACRiB,EAAEJ,GAAKG,OAAS,IAChBF,EAAOK,KAAKC,aAAaH,EAAGJ,EAAKC,IAIzC,OAAOA,I,qBAGX,SAAAO,QAAQC,QAASC,WAAY,IAAD,YACpBC,QAAUC,KAAKN,KAAK3B,MAAMI,WAAWO,YACzCqB,QAAQN,KAAKC,KAAK1C,MAAMkB,KAAKkB,KAEzBS,UACAE,QAAUA,QAAQE,OAAOP,KAAKC,aAAaD,KAAK1C,MAAMkB,KAAM,sBAC5D4B,YACAC,QAAUA,QAAQE,OAAOP,KAAKC,aAAaD,KAAK1C,MAAMkB,KAAM,wBAEhE,IAAIgC,IAAM,GAC+B,MAArCR,KAAK3B,MAAMI,WAAWK,cACtB0B,IAAMR,KAAK3B,MAAMI,WAAWK,aAEhC,IAAM2B,eAAiB,CACnB1C,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpB0C,KAAMC,KAAKC,UAAU,CACjB,KAAQZ,KAAK3B,MAAMI,WAAWI,KAC9B,YAAe2B,IACf,WAAcH,QACd,GAAML,KAAK3B,MAAMI,WAAWQ,GAC5B,WAAce,KAAK1C,MAAMkB,KAAKkB,OAItCmB,0CAASC,SAAS,WAAW,GAE7BhD,MAAMJ,OAAOC,oBAAoB,eAAgB8C,gBAC5CxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAAC8C,GACG,OAAKzD,MAAMkB,KAAKU,WAAa6B,EAAOC,MAEpC,OAAKpD,SAAS,CACV0B,aAAa,EACbC,YAAawB,EAAOC,QAGxBH,0CAASC,SAAS,WAAW,Q,0BAI7C,WACI,OAAO,2DAAC,+CAAD,KACH,2DAAC,yCAAD,CAASG,MAAOjB,KAAK1C,MAAMkB,KAAM0C,aAAclB,KAAK1C,MAAMkB,KAAKK,KAAMsC,KAAMnB,KAAK1C,MAAM8D,iB,6BAI9F,SAAgBC,GAAiC,IAAtBC,EAAqB,uDAAX,UACjC,GAAiB,MAAbD,EAAJ,CAGA,IAAIE,EAAO,GAQX,OANAF,EAAUG,SAAQ,SAAAC,GACdF,EAAKA,EAAK1B,QAAU,2DAAC,gDAAD,CAAQ6B,MAAO,CAAEC,YAAa,OAASL,QAASA,EAASM,KAAK,MAC7EH,MAIFF,K,iCAGX,SAAoB7B,GAChBmC,MAAMnC,K,qCAGV,WACI,OAAQM,KAAK1C,MAAM8D,aACf,IAAK,UACD,OAAOpB,KAAK8B,gBAChB,IAAK,UACD,OAAO9B,KAAK+B,gBAChB,IAAK,SACD,OAAO/B,KAAKgC,eAChB,IAAK,aACD,OAAOhC,KAAKiC,sB,gCAIxB,SAAmBC,EAAWC,GAC1BhD,QAAQC,IAAI,yDACZD,QAAQC,IAAI8C,GACZ/C,QAAQC,IAAI,iBACZD,QAAQC,IAAI+C,GAEkB,UAA1BnC,KAAK1C,MAAM8D,aACW,MAAlBc,EAAU1D,MAAmC,MAAnBwB,KAAK1C,MAAMkB,MAGd,MAAlB0D,EAAU1D,MAAmC,MAAnBwB,KAAK1C,MAAMkB,MAAkB0D,EAAU1D,KAAKS,IAAMe,KAAK1C,MAAMkB,KAAKS,KAFjGe,KAAKoC,mBAOqB,cAA1BpC,KAAK1C,MAAM8D,aACW,MAAlBc,EAAU1D,MAAmC,MAAnBwB,KAAK1C,MAAMkB,MACrCwB,KAAKpC,SAAS,CACVa,WAAY,CACRI,KAAMmB,KAAK1C,MAAMkB,KAAKK,KACtBG,WAAYgB,KAAK1C,MAAMkB,KAAKQ,WAC5BF,YAAakB,KAAK1C,MAAMkB,KAAKM,YAC7BG,GAAIe,KAAK1C,MAAMkB,KAAKS,Q,oBAQ5C,WACIe,KAAKpC,SAAS,CACV0B,aAAa,EACbb,WAAY,CACRO,WAAY,GACZF,YAAakB,KAAK1C,MAAMkB,KAAKO,QAC7BF,KAAMmB,KAAK1C,MAAMkB,KAAKK,KACtBI,IAAK,O,8BAKjB,WACIe,KAAK3B,MAAMI,WAAa,CACpBQ,IAAK,IAG6B,GAAlCe,KAAK1C,MAAMkB,KAAKU,WAAWD,GAC3Be,KAAKpC,SAAS,CACV2B,YAAa,CACTV,KAAMmB,KAAK1C,MAAMkB,KAAKK,KACtBC,YAAakB,KAAK1C,MAAMkB,KAAKO,QAC7BE,IAAK,KAKbe,KAAKpC,SAAS,CACV2B,YAAa,CACTV,KAAMmB,KAAK1C,MAAMkB,KAAKU,WAAWL,KACjCC,YAAakB,KAAK1C,MAAMkB,KAAKU,WAAWJ,YACxCG,GAAIe,KAAK1C,MAAMkB,KAAKU,WAAWD,GAC/BD,WAAYgB,KAAK1C,MAAMkB,KAAKU,WAAWF,gB,qBAMvD,WACIgB,KAAKoC,mBAELpC,KAAKpC,SAAS,CACVa,WAAY,CACRI,KAAMmB,KAAK1C,MAAMkB,KAAKU,WAAWL,KACjCC,YAAakB,KAAK1C,MAAMkB,KAAKU,WAAWJ,YACxCG,GAAIe,KAAK1C,MAAMkB,KAAKU,WAAWD,GAC/BD,WAAYgB,KAAK1C,MAAMkB,KAAKU,WAAWF,cAG/CgB,KAAKpC,SAAS,CAAE0B,aAAa,M,wBAGjC,SAAW+C,GACPxB,0CAASC,SAAS,iBAAkBuB,K,yBAGxC,SAAYC,GACRzB,0CAASC,SAAS,kBAAmBwB,K,yBAGzC,SAAYC,GACR1B,0CAASC,SAAS,kBAAmByB,K,qCAkBzC,SAAwBC,EAAQlF,GAC5B,OAAO,2DAAC,4CAAD,KACH,kEAAKoE,MAAO,CAAEe,WAAY,SAAWD,EAAO3D,MAC5C,sEAAM2D,EAAO1D,gB,0BAsCrB,SAAAkD,eAAgB,IAAD,YACLU,SAAW,kBAAM,GACfpE,iBAAqB0B,KAAK3B,MAA1BC,iBAEJe,QAAUW,KAAK2C,eACbC,YAAc,kBAAM,OAAKhF,SAAS,CAAE0B,aAAa,KACjDuD,WAAa,SAACC,GAAQ,OAAKlF,SAAS,CAAE4B,iBAAyB,YAANsD,KAE/D,OAAO,2DAAC,+CAAD,KACH,2DAAC,gDAAD,CAAOlB,KAAK,KAAKmB,KAAM/C,KAAK3B,MAAMiB,YAAa0D,WAAW,EAAOC,OAAQL,aACrE,2DAAC,gDAAMM,OAAP,CAAcC,aAAW,GACrB,2DAAC,gDAAMC,MAAP,0BAEJ,2DAAC,gDAAMC,KAAP,KACI,2DAAC,+CAAD,KACI,2DAAC,+CAAD,KACI,2DAAC,+CAAD,MACMrD,KAAK3B,MAAMK,gBACT,sEACI,2DAAC,0DAAD,CAEIO,GAAG,aACHqE,SAAS,OACTZ,SAAU,CAAC,OAAQ,eACnBa,cAAc,QACdC,UAAW,EACXC,SAAUzD,KAAKzB,UACfmF,SAAU1D,KAAKzC,UACfoG,QAASrF,iBACTsF,YAAY,iCACZC,uBAAwB7D,KAAK8D,2BAIxC9D,KAAK3B,MAAMK,gBACR,sEACI,2DAAC,gDAAD,CAAMgD,MAAO,CAAEqC,WAAY,SACvB,2DAAC,gDAAKC,MAAN,CAAYC,UAAU,QACjBjE,KAAK3B,MAAMkB,YAAYN,IAAM,GAC1B,kEAAKyC,MAAO,CAAEwC,QAAS,aACnB,2DAAC,gDAAKC,MAAN,sBACA,2DAAC,gDAAKC,QAAN,CAAcC,SAAS,OAAOlD,KAAK,OAAOmD,aAActE,KAAK3B,MAAMI,WAAWQ,OAGvD,GAA9Be,KAAK3B,MAAMkB,YAAYN,IACpB,uFAEJ,2DAAC,gDAAKkF,MAAN,aACA,2DAAC,gDAAKC,QAAN,CAAcjD,KAAK,OAAOmD,aAActE,KAAK3B,MAAMI,WAAWI,KAC1D4E,SAAU,SAAAX,GAAC,OAAI,OAAKzE,MAAMI,WAAWI,KAAOiE,EAAEyB,OAAOvD,SAEnB,MAApChB,KAAK3B,MAAMI,WAAWO,YAAsBgB,KAAK3B,MAAMI,WAAWO,WAAWa,OAAS,GACpF,kEAAK6B,MAAO,CAAEwC,QAAS,aACnB,2DAAC,gDAAKC,MAAN,mBACA,sEACKnE,KAAKwE,gBAAgBlE,KAAKN,KAAK3B,MAAMI,WAAWO,YAAa,WAI1E,2DAAC,gDAAKmF,MAAN,oBACA,2DAAC,gDAAKC,QAAN,CAAcK,GAAG,WAAWC,KAAK,IAAIJ,aAActE,KAAK3B,MAAMI,WAAWK,YACrE2E,SAAU,SAAAX,GAAC,OAAI,OAAKzE,MAAMI,WAAWK,YAAcgE,EAAEyB,OAAOvD,SAEhE,2DAAC,gDAAK2D,KAAN,CAAWV,UAAU,cAArB,mEAYhC,2DAAC,gDAAMW,OAAP,KAEI,2DAAC,+CAAD,CAAKlD,MAAO,CAAEmD,UAAW,SAErB,2DAAC,gDAAD,CAAQvD,QAAQ,OAAOwD,QAAS,kBAAM,OAAKnG,WAAU,KAArD,OACA,2DAAC,gDAAD,CAAQ2C,QAAQ,OAAOwD,QAAS,kBAAM,OAAKnG,WAAU,KAArD,WAIJ,2DAAC,+CAAD,CAAKoG,WAAA,GACD,2DAAC,gDAAD,CAAQV,SAAS,OAAO/C,QAAQ,YAAYwD,QAAS,kBAAM,OAAK5E,SAAQ,GAAM,KAA9E,oBACA,2DAAC,gDAAD,CAAQmE,UAAWrE,KAAK3B,MAAMK,eAAgB4C,QAAQ,UAAUwD,QAAS,kBAAM,OAAK5E,SAAQ,GAAO,KAAnG,YAIZ,2DAAC,+CAAD,KACI,2DAAC,+CAAD,CAAK8E,GAAG,QACJ,kEAAKC,MAAM,QACNC,8CAAOC,0BAA0BnF,KAAK1C,MAAM8D,YAAa,UAGlE,2DAAC,+CAAD,KACI,qEAAKpB,KAAK1C,MAAMkB,KAAKK,KAAK,gEAAG6C,MAAO,CAAE0D,WAAY,QAAUC,KAAMH,8CAAOI,kBAAkBtF,KAAK1C,MAAMkB,KAAK+G,QAASvF,KAAK1C,MAAMkB,KAAKgH,SAAUjB,OAAO,UAAS,2DAAC,sDAAD,CAAoB3C,KAAM,OACxL,gEAAGqD,MAAM,QACL,oEAAIjF,KAAK1C,MAAMkB,KAAK2C,MADxB,cAC4C,mEAAM8C,UAAU,WAAWa,QAAS,kBAAM,OAAKW,YAAY,OAAKnI,MAAMkB,KAAK+G,WAAWvF,KAAK1C,MAAMkB,KAAK+G,SAC9I,mEAAM7D,MAAO,CAAEwC,QAAS,YAAxB,KACA,mEAAMD,UAAU,WAAWa,QAAS,kBAAM,OAAKY,YAAY,OAAKpI,MAAMkB,KAAK+G,QAAU,IAAM,OAAKjI,MAAMkB,KAAKgH,WAAWxF,KAAK1C,MAAMkB,KAAKgH,YAIlJ,2DAAC,+CAAD,KACI,kEAAK9D,MAAO,CAAEqC,WAAY,SACtB,2DAAC,qDAAD,CAAM4B,iBAAiB,aAAa1B,UAAU,OAAO2B,SAAU/C,YAC3D,2DAAC,oDAAD,CAAKgD,SAAS,aAAaC,MAAM,aAAaC,KAAG,IAEP,GAAlC/F,KAAK1C,MAAMkB,KAAKU,WAAWD,IAC3B,sEACI,2DAAC,gDAAD,CAAQqC,QAAQ,UACZwD,QAAS,kBAAM,OAAKkB,WADxB,kBAEyB,IACzB,kEAAKtE,MAAO,CAAEwC,QAAS,SAClBlE,KAAK1C,MAAMkB,KAAKO,UAKzBiB,KAAK1C,MAAMkB,KAAKU,WAAWD,GAAK,GAChC,sEACI,2DAAC,gDAAD,CAAQqC,QAAQ,UACZwD,QAAS,kBAAM,OAAKmB,YADxB,mBAE0B,IAC1B,kEAAKvE,MAAO,CAAEwC,QAAS,SACnB,2DAAC,4CAAD,CAAYhF,WAAYc,KAAK3B,MAAMkB,iBAKnD,2DAAC,oDAAD,CAAKsG,SAAS,UAAUC,MAAM,UAAUC,KAAG,GAEnC/F,KAAK3B,MAAMmB,kBACX,kEAAKyF,MAAM,UAAUhG,GAAG,qBAAqBI,gB,8BASzE,SAAA4C,mBAAoB,IAAD,YACf,OAAO,2DAAC,+CAAD,KACH,2DAAC,+CAAD,KACI,2DAAC,+CAAD,CAAK+C,GAAG,QACJ,kEAAKC,MAAM,QACNC,8CAAOC,0BAA0BnF,KAAK1C,MAAM8D,YAAa,UAGlE,2DAAC,+CAAD,KACI,qEAAKpB,KAAK1C,MAAMkB,KAAKK,MAErB,2DAAC,+CAAD,KACI,2DAAC,+CAAD,KACI,2DAAC,+CAAD,KAEI,sEACI,2DAAC,gDAAD,CAAM6C,MAAO,CAAEqC,WAAY,SACvB,2DAAC,gDAAKC,MAAN,CAAYC,UAAU,QACjBjE,KAAK3B,MAAMkB,YAAYN,IAAM,GAC1B,kEAAKyC,MAAO,CAAEwC,QAAS,aACnB,2DAAC,gDAAKC,MAAN,sBACA,2DAAC,gDAAKC,QAAN,CAAcC,SAAS,OAAOlD,KAAK,OAAOmD,aAActE,KAAK3B,MAAMI,WAAWQ,OAGvD,GAA9Be,KAAK3B,MAAMkB,YAAYN,IACpB,uFAEJ,2DAAC,gDAAKkF,MAAN,aACA,2DAAC,gDAAKC,QAAN,CAAcjD,KAAK,OAAOmD,aAActE,KAAK3B,MAAMI,WAAWI,KAC1D4E,SAAU,SAAAX,GAAC,OAAI,OAAKzE,MAAMI,WAAWI,KAAOiE,EAAEyB,OAAOvD,SAEnB,MAApChB,KAAK3B,MAAMI,WAAWO,YAAsBgB,KAAK3B,MAAMI,WAAWO,WAAWa,OAAS,GACpF,kEAAK6B,MAAO,CAAEwC,QAAS,aACnB,2DAAC,gDAAKC,MAAN,mBACA,sEACKnE,KAAKwE,gBAAgBlE,KAAKN,KAAK3B,MAAMI,WAAWO,YAAa,WAI1E,2DAAC,gDAAKmF,MAAN,oBACA,2DAAC,gDAAKC,QAAN,CAAcK,GAAG,WAAWC,KAAK,IAAIJ,aAActE,KAAK3B,MAAMI,WAAWK,YACrE2E,SAAU,SAAAX,GAAC,OAAI,OAAKzE,MAAMI,WAAWK,YAAcgE,EAAEyB,OAAOvD,SAEhE,2DAAC,gDAAK2D,KAAN,CAAWV,UAAU,cAArB,uE,2BAexC,WAAiB,IAAD,OACR1C,EAAOvB,KAAKwE,gBAAgBxE,KAAK1C,MAAMkB,KAAK0H,KAAK3E,MACjDlC,EAAUW,KAAK2C,eAEfwD,EAAYnG,KAAK1C,MAAMkB,KAAK4H,OAAOC,KAAI,SAAChE,GAAD,OACvC,iEAAIyC,QAAS,kBAAM,EAAKwB,WAAWjE,EAAI3C,OACnC,qEAAK2C,EAAIxD,MACT,qEAAKwD,EAAIlB,MACT,qEAAKkB,EAAItD,aAMjB,OAAO,2DAAC,+CAAD,KACH,2DAAC,+CAAD,KACI,2DAAC,+CAAD,CAAKiG,GAAG,QACJ,kEAAKC,MAAM,QACNC,8CAAOC,0BAA0BnF,KAAK1C,MAAM8D,YAAa,UAGlE,2DAAC,+CAAD,KACI,qEAAKpB,KAAK1C,MAAMkB,KAAKS,IACrB,kFAAc,mEAAMgF,UAAU,WAAWa,QAAS,kBAAM,EAAKW,YAAY,EAAKnI,MAAMkB,KAAK+G,WAAWvF,KAAK1C,MAAMkB,KAAK+G,UACpH,kEAAKN,MAAM,QAAQ1D,KAI3B,2DAAC,+CAAD,CAAKG,MAAO,CAAEqC,WAAY,SACtB,2DAAC,qDAAD,CAAM4B,iBAAiB,UAAU1G,GAAG,2BAA2BgF,UAAU,OAAO2B,SAjBrE,SAAC9C,GAAQ,EAAKlF,SAAS,CAAE4B,iBAAyB,YAANsD,MAkBnD,2DAAC,oDAAD,CAAK+C,SAAS,UAAUC,MAAM,UAAUC,KAAG,GACvC,2DAAC,qDAAD,CAAOQ,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,wEACI,qEACI,6EACA,6EACA,qFAGR,wEACKN,KAIb,2DAAC,oDAAD,CAAKN,SAAS,UAAUC,MAAM,WAEtB9F,KAAK3B,MAAMmB,kBACX,kEAAKyF,MAAM,UAAUhG,GAAG,qBAAqBI,S,2BAQrE,WAAiB,IAAD,OACRkC,EAAOvB,KAAKwE,gBAAgBxE,KAAK1C,MAAMkB,KAAK+C,MAC5CmF,EAAc1G,KAAK1C,MAAMkB,KAAKmI,SAASN,KAAI,SAAChE,GAAD,OAC3C,qEACI,iEAAI4C,MAAM,WAAWH,QAAS,kBAAM,EAAKY,YAAYrD,KAAOA,EAAIuE,MAAM,KAAK,QAInF,OAAO,2DAAC,+CAAD,KACH,2DAAC,+CAAD,KACI,2DAAC,+CAAD,CAAK5B,GAAG,QACJ,kEAAKC,MAAM,QACNC,8CAAOC,0BAA0BnF,KAAK1C,MAAM8D,YAAa,UAGlE,2DAAC,+CAAD,KACI,qEAAKpB,KAAK1C,MAAMkB,KAAKK,KAAK,mEAAM6C,MAAO,CAAEmF,YAAa,MAAOC,cAAe,QACxE,gEAAGzB,KAAMH,8CAAO6B,kBAAkB/G,KAAK1C,MAAMkB,KAAKwI,YAAazC,OAAO,UAAS,2DAAC,sDAAD,CAAoB3C,KAAM,QAG7G,8EAAU,mEAAMF,MAAO,CAAEmF,YAAa,QAA5B,MACH,mEAAMnF,MAAO,CAAEe,WAAY,SAAWzC,KAAK1C,MAAMkB,KAAKyI,QADnD,YAEV,kEAAKhC,MAAM,QAAQ1D,KAG3B,2DAAC,+CAAD,KACI,kEAAKG,MAAO,CAAEqC,WAAY,SACtB,2DAAC,qDAAD,CAAM4B,iBAAiB,WAAW1B,UAAU,OAAOhF,GAAG,gBAClD,2DAAC,oDAAD,CAAK4G,SAAS,WAAWC,MAAM,WAAWC,KAAG,GACzC,2DAAC,qDAAD,CAAOQ,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,wEACI,qEACI,+EAGR,wEACKC,W,oBAUjC,WACI,IAAIlI,EACA0I,EAAclH,KAAKmH,0BAWvB,OATI3I,EADmB,MAAnBwB,KAAK1C,MAAMkB,KACJ,2DAAC,+CAAD,CAAKyF,UAAU,qBACjBiD,GAGE,2DAAC,+CAAD,MAMP,kEAAKjC,MAAM,gBACNzG,O,aA1kBS4I,8CAglBX/J,mC,iCC7lBf,0CAMegK,oBAAK,YAA8B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACvBhC,EAAU,GACVC,EAAU,GACVgC,EAAS,GAgCb,OA9BA,SAAoBC,GAClB,IAAIC,EAAiBD,EAAMlC,QAAQqB,MAAM,KACzC,OAAOc,EAAe7H,QACpB,KAAK,EACH0F,EAAUkC,EAAMlC,QAChBC,EAAUiC,EAAMjC,QAChB,MACF,KAAK,EACHD,EAAUmC,EAAe,GACzBlC,EAAUkC,EAAe,GACzB,MACF,KAAK,EACHnC,EAAUmC,EAAe,GACzBlC,EAAUkC,EAAe,GACzBF,EAASE,EAAe,GACxB,MACF,QACEnC,EAAUkC,EAAMlC,QAChBC,EAAUiC,EAAMjC,SAUtBmC,CAAWL,GAGT,oCACE,kBAAC,IAAD,CACErD,UAAU,gBACV9C,KAAK,SACLyG,SAAS,OACTL,cAAeA,IAGjB,6BACE,6BACE,4BAAKhC,IAEP,6BACE,uBAAGF,KAAK,qBAAqBP,QArBrC,SAAuBhC,GACrBA,EAAE+E,iBACFhH,IAASC,SAAS,kBAAmByE,EAAU,IAAMC,KAmBOA,IAExD,6BACE,2BAAIgC,KAIR,kBAAC,IAAD,CACErG,KAAK,SACLyG,SAAS,QACTL,cAAeA,S,mIC7DVO,EAAiB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACzBC,EAAQ,GACRC,EAAQ,GAERC,EAAM,IAAIC,IAAI,CAClBC,qBAAsB,CACpB,gBAAiB,UACjB,uBAAwB,WACxB,gBAAiB,QAEjB,kBAAmB,UACnB,4CAA6C,GAC7C,cAAe,uCACf,uBAAwB,MAI5BN,EAASvG,SAAQ,SAAC8G,GACC,IAAD,QAAZC,YAAOD,GACTL,EAAMlI,KAAK,CACTd,GAAIqJ,EAAGrJ,GACPuJ,MAAK,oBAAEF,EAAGG,YAAL,aAAE,EAASD,aAAX,QAAoBE,IAAQC,mBACjCC,OAAM,oBAAEN,EAAGG,YAAL,aAAE,EAASG,cAAX,QAAqBF,IAAQG,sBAGrCX,EAAMnI,KAAK,CACTd,GAAIqJ,EAAGrJ,GACPsF,OAAQ+D,EAAG/D,OACXuE,OAAQR,EAAGQ,YA5Bc,SAiCRX,EAAIY,OAAO,CAChC9J,GAAI,OACJ+J,SAAUf,EACVC,MAAOA,IApCsB,cAiCzBe,EAjCyB,yBAuCxBlB,EAAS1B,KAAI,SAACiC,GACnB,GAAIC,YAAOD,GAAK,CAAC,IAAD,EACRY,EAAI,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAUD,gBAAb,aAAG,EAAoBG,MAAK,SAACC,GAAD,OAAOA,EAAEnK,KAAOqJ,EAAGrJ,MACzDqJ,EAAGe,eAAiB,QACpBf,EAAGgB,eAAiB,QACZ,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMK,KAAN,OAAWL,QAAX,IAAWA,OAAX,EAAWA,EAAMM,KAAjB,OAAsBN,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMV,SAA5B,OAAqCU,QAArC,IAAqCA,OAArC,EAAqCA,EAAMN,UAC7CN,EAAGV,SAAW,CACZ2B,EAAGL,EAAKK,EAAIL,EAAKV,MAAQ,EAAIiB,KAAKC,SAAW,IAC7CF,EAAGN,EAAKM,EAAIN,EAAKN,OAAS,IAKhC,OAAON,MApDsB,2CAAH,uD,6FCCxBqB,G,wDAEF,WAAYrM,GAAQ,uCACVA,G,0CAGV,WACI,OAAQ,kBAAC,IAAD,CAAMoE,MAAO,CAAE8G,MAAO,UAC1B,kBAAC,IAAKtF,OAAN,oBAA0BlD,KAAK1C,MAAM4B,WAAWL,MAChD,kBAAC,IAAKwE,KAAN,KACI,kBAAC,IAAKsB,KAAN,KACI,kCAGA,yBAAKjD,MAAO,CAAEoF,cAAe,SACxB9G,KAAK1C,MAAM4B,WAAWD,IAE3B,oCAGA,yBAAKyC,MAAO,CAAEoF,cAAe,SACxB9G,KAAK1C,MAAM4B,WAAWL,MAE3B,2CAGA,yBAAK6C,MAAO,CAAEoF,cAAe,SACxB9G,KAAK1C,MAAM4B,WAAWJ,oB,GA3BtBsI,cAoCVuC,O,2SC4XAC,E,kDAlYX,WAAYtM,GAAQ,IAAD,8BACf,cAAMA,IAoBVuM,mBAAqB,SAACzL,GAClB,IAAI0L,EAAQ,EAAKC,mBAEbC,EAAS,GAQb,OAPAC,OAAOC,KAAK9L,GAAUoD,SAAQ,SAAU2I,GACpC,IAAIC,EAAchM,EAAS+L,GACvBL,EAAMO,QAAQD,EAAYhJ,YAAYkJ,aAAe,IACrDN,EAAOA,EAAOnK,QAAUuK,MAIzBJ,GAhCQ,EAmCnBD,iBAAmB,WACf,IAAID,EAAQ,GAOZ,OANAG,OAAOM,QAAQ,EAAKlM,MAAMmM,SAASC,OAAOpE,KAAI,YAAmB,IAAD,mBAAhB3G,EAAgB,KAC/C,GAD+C,OAExDoK,EAAMA,EAAMjK,QAAUH,EAAI4K,eAI3BR,GA3CQ,EA8CnBY,eAAiB,SAACvJ,GACd,IAAIwJ,EAAc,EAAKtM,MAAMmM,QAC7BG,EAAYxJ,IAASwJ,EAAYxJ,GAEjC,EAAKvD,SAAS,CACV4M,QAASG,KAnDE,EAuDnBC,SAAW,SAACpM,GACR,EAAKZ,SAAS,CAAEC,SAAS,IACrBW,EAAKqB,OAAS,IACd,EAAKgL,cAAcrM,EAAK,GAAGkB,KAC3B,EAAKoL,YAAYtM,EAAK,GAAGkB,OA3Dd,EA+DnBmL,cAAgB,SAACE,GAabjN,MAAMJ,OAAOC,oBAAoB,aAAe,QAAUoN,EAZnC,CACnBhN,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAW1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACHe,QAAQC,IAAI,gBACZD,QAAQC,IAAIhB,GAEZ,EAAKR,SAAS,CACVC,SAAS,EACTmN,aAAc5M,EACd6M,iBAAkB7M,EAASgD,kBArFxB,EA0FnB8J,OAAS,SAAC1N,GACN,IAKIC,EAAMC,OAAOC,oBAAoB,UAAY,SAAWH,EAC5D,EAAKI,SAAS,CAAEC,SAAS,IACzBC,MAAML,EAPiB,CACnBM,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAM1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,IAAI4L,EAAS,EAAKH,mBAAmBzL,GAErC,EAAKR,SAAS,CACVuN,cAAenB,EACfnM,SAAS,QAtGrB,EAAKQ,MAAQ,CACT+M,aAASC,EACTjB,YAAa,KACbI,QAAS,CACLhD,QAAQ,EACRhC,SAAS,EACTD,SAAS,EACTrG,YAAY,GAEhBoM,YAAa,GACbzN,SAAS,EACT0N,YAAY,EACZP,aAAc,KACdC,iBAAkB,KAClBE,cAAe,IAjBJ,E,qDA8GnB,WAAqB,IAAD,OAEhBzN,OAAO8N,EAAEC,UAAUC,OAAM,WAErB5N,MAAMJ,OAAOC,oBAAoB,aAC5BM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAEH,EAAKR,SAAS,CACVwN,QAAS1N,OAAO0N,QAChBE,YAAalN,EAAQ,QACrBuN,UAAU,EACV9N,SAAS,IAGb,EAAK+N,cAEL/K,IAASgL,GAAG,mBAAmB,SAACvJ,GAC5B,EAAKsI,SAAS,CAAC,CACXlL,IAAK4C,EACLlB,YAAa,aAKjB,EAAK0J,YAAYxI,MAIrBzB,IAASgL,GAAG,mBAAmB,SAACtJ,GAC5B,EAAKqI,SAAS,CAAC,CACXlL,IAAK6C,EACLnB,YAAa,aAKjB,EAAK0J,YAAYvI,MAIrB1B,IAASgL,GAAG,kBAAkB,SAACxJ,GAC3B,EAAKuI,SAAS,CAAC,CACXlL,IAAK2C,EACLjB,YAAa,YAKjB,EAAK0J,YAAYzI,MAIrBxB,IAASgL,GAAG,WAAW,SAACC,GAAD,OACnB,EAAKlO,SAAS,CAAE,QAAWkO,e,yBAM/C,WACI,IAAIC,EAAQrO,OAAOsO,IAAIC,SAAS5G,KAAKuB,MAAM,OAEvCmF,EAAMlM,OAAS,IACfG,KAAKpC,SAAS,CAAE,SAAW,IAC3BoC,KAAK6K,cAAckB,EAAM,O,yBAIjC,SAAYG,GACR,IAAIC,EAAWzO,OAAOsO,IAAIC,SAAS5G,KAAKuB,MAAM,KAAK,GACnDlJ,OAAOsO,IAAIC,SAAS5G,KAAO8G,EAAW,MAAQD,I,oBAGlD,WAAU,IAAD,OACLlM,KAAKpC,SAAS,CAAEC,SAAS,IACzBC,MAAMJ,OAAOC,oBAAoB,SAC5BM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKR,SAAS,CAAEC,SAAS,S,oCAIrC,SAAuB2E,EAAQlF,GAC3B,OAAO,kBAAC,WAAD,KAEH,0BAAMoE,MAAO,CAAE0K,aAAc,QACxBlH,IAAOC,0BAA0B3C,EAAOpB,YAAa,SAEnC,cAAtBoB,EAAOpB,aACJ,8BACI,0BAAMM,MAAO,IAAb,gBACA,0BAAMA,MAAO,IAAKc,EAAO3D,OAGV,UAAtB2D,EAAOpB,aACJ,8BACI,0BAAMM,MAAO,IAAb,aACA,0BAAMA,MAAO,IAAKc,EAAO9C,IAAIkH,MAAM,KAAK,IAExC,0BAAMlF,MAAO,CAAEwC,QAAS,YAAxB,KAEA,0BAAMxC,MAAO,IAAb,YACA,0BAAMA,MAAO,CAAEwC,QAAS,YAAc1B,EAAO9C,IAAIkH,MAAM,KAAK,IAE5D,0BAAMlF,MAAO,CAAEwC,QAAS,YAAxB,KAEA,yCAAoB,0BAAMxC,MAAO,CAAEe,WAAY,OAAQyB,QAAS,YAAc1B,EAAO3D,OAGtE,WAAtB2D,EAAOpB,aACJ,8BACI,0BAAMM,MAAO,IAAb,YACA,0BAAMA,MAAO,IAAKc,EAAO9C,IAAIkH,MAAM,KAAK,IAExC,0BAAMlF,MAAO,CAAEwC,QAAS,YAAxB,KAEA,0BAAMxC,MAAO,IAAb,YACA,0BAAMA,MAAO,CAAEwC,QAAS,UAAWzB,WAAY,SAAWD,EAAO3D,OAGlD,WAAtB2D,EAAOpB,aACJ,8BACI,2CAAsB,0BAAMM,MAAO,CAAEe,WAAY,OAAQyB,QAAS,YAAc1B,EAAO3D,U,0BAOvG,WACImB,KAAKpC,SAAS,CAAE2N,YAAavL,KAAK3B,MAAMkN,e,oBAG5C,WAAU,IAAD,OACLvL,KAAKqM,UAAYC,IAAMC,YAkBvB,MAAwFvM,KAAK3B,MAArFmM,EAAR,EAAQA,QAAkBe,GAA1B,EAAiB1N,QAAjB,EAA0B0N,YAAYJ,EAAtC,EAAsCA,cAAeH,EAArD,EAAqDA,aAAcC,EAAnE,EAAmEA,iBAKnE,OAFAjL,KAAKoK,YAAc,kBAAC,IAAD,CAAa5L,KAAMwM,EAAc5J,YAAa6J,IAI7D,kBAACuB,EAAA,EAAD,CAAW9K,MAAO,CAAEqC,WAAY,SAC5B,yBAAKkB,MAAM,+CACP,yBAAKA,MAAM,mBAEP,uBAAGA,MAAM,eAAevD,MAAO,CAAEe,WAAY,OAAQgK,SAAU,SAA/D,UACA,4BAAQxH,MAAM,iBAAiB9D,KAAK,SAASuL,iBAAe,WAAWC,iBAAe,iBAAiBC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC3K,0BAAM7H,MAAM,yBAEhB,yBAAKA,MAAM,2BAA2BhG,GAAG,iBACrC,wBAAIgG,MAAM,oCAQV,wBAAIA,MAAM,cACN,wBAAIvD,MAAO,CAAEwC,QAAS,SAClB,kBAAC,IAAD,CAAQY,QAAS,kBAAM,EAAKiI,UAAUrL,MAAO,CAAE8G,MAAO,OAAQI,OAAQ,OAAQoE,OAAQ,cAE1F,wBAAI/H,MAAM,YACN,uBAAGA,MAAM,YAAYjF,KAAK3B,MAAMiN,kBAgBpD,kBAAC2B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKjJ,UAAU,cAAcvC,MAAO,CAAE8G,MAAO,SACzC,kBAAC,IAAD,CACI9F,SAhDP,kBAAM,GAiDCzD,GAAG,eACHkO,MAAO,IAKP7J,SAAS,OACT8J,IAAKpN,KAAKqM,UACV7I,UAAW,EACXC,SAAUzD,KAAK4K,SACflH,SAAU1D,KAAKkL,OACfvH,QAASwH,EACTvH,YAAY,SACZC,uBAAwB7D,KAAK6D,uBAC7BnC,MAAO,CAAE8G,MAAO,WAEpB,yBAAKvE,UAAU,mBACX,kBAAC,IAAD,CAAUa,QAAS,kBAAM,EAAKuI,gBAAgB3L,MAAO,CACjD4L,gBAAiB,UACjBC,MAAO,UACPP,OAAQ,UACRpE,OAAQ,OACR1E,QAAS,MACTsE,MAAO,cAO1B+C,EACG,kBAAC0B,EAAA,EAAD,CAAKhJ,UAAU,SAASvC,MAAO,CAAE8L,UAAW,UAIvCvD,OAAOM,QAAQC,GAASnE,KAAI,YAAmB,IAAD,mBAAhB3G,EAAgB,KAAXsB,EAAW,KAC3C,OACI,kBAACkM,EAAA,EAAD,CAAKlI,GAAI,GACL,yBAAKf,UAAU,eAAevE,IAAKA,GAC/B,2BACIyB,KAAK,WACLlC,GAAE,iBAAYS,GACdb,KAAMa,EACNsB,MAAOtB,EACP+N,QAASzM,EACTyC,SAAU,kBAAM,EAAKiH,eAAehL,IACpCgC,MAAO,CAAEC,YAAa,SAE1B,2BAAO+L,QAAO,iBAAYhO,IAAQA,EAAlC,WAMlB,KAEN,kBAACuN,EAAA,EAAD,KACI,yBAAKvL,MAAO,CAAEwC,QAAS,SAClBlE,KAAK3B,MAAMR,QACR,kBAAC8P,EAAA,EAAD,CAAS3K,UAAU,SAAS4K,KAAK,UAC7B,0BAAM3J,UAAU,mBAAhB,eAEF,OAGd,kBAACgJ,EAAA,EAAD,KACKjN,KAAKoK,kB,GA5XRhD,aCtBEyG,QACW,cAA7BnQ,OAAOuO,SAAS6B,UAEe,UAA7BpQ,OAAOuO,SAAS6B,UAEhBpQ,OAAOuO,SAAS6B,SAASC,MACvB,2DCVNC,IAASC,OAOP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzC,SAAS0C,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAc3C,MACrBzN,MAAK,SAAAqQ,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtP,QAAQsP,MAAMA,EAAMC,a,gCEzI5B,IAAM7N,EAAW,CACbgL,GADa,SACV8C,EAAOC,GACRnD,SAASoD,iBAAiBF,GAAO,SAAC7L,GAAD,OAAO8L,EAAS9L,EAAEgM,YAErDhO,SAJa,SAIJ6N,EAAOrH,GACdmE,SAASsD,cAAc,IAAIC,YAAYL,EAAO,CAAEG,OAAQxH,MAE1D2H,OAPa,SAONN,EAAOC,GACZnD,SAASyD,oBAAoBP,EAAOC,KAIzB/N,O,gCCZjB,4BA8BA,IAAMqE,EAAS,CACXI,kBAxBJ,SAA2B6J,EAAS7M,GAChC,MAAO,aAAe6M,EAAU,aAAe7M,EAAK,aAwBpDyE,kBA7BJ,SAA2BoI,GACvB,MAAO,aAAeA,EAAU,UA6BhCC,qBAtBJ,SAA8B7M,EAAMD,GAChC,MAAO,YAActC,KAAKsF,kBAAkB/C,EAAMD,GAAM,qBAAuBC,EAAO,IAAMD,EAAK,QAsBjG6C,0BAnBJ,SAAmChE,GAAsB,IAAhBS,EAAe,uDAAR,OAC5C,OAAOT,GACH,IAAK,UACD,OAAO,kBAAC,IAAD,CAAkBS,KAAMA,IACnC,IAAK,UACD,OAAO,kBAAC,IAAD,CAAYA,KAAMA,IAC7B,IAAK,SACD,OAAO,kBAAC,IAAD,CAAWA,KAAMA,IAC5B,IAAK,aACD,OAAO,kBAAC,IAAD,CAAQA,KAAMA,IACzB,QACI,OAAO,kBAAC,IAAD,CAAkBA,KAAMA,OAW5BsD,O,q6CC/BTwD,Q,0eASF,iBAAYpL,OAAQ,IAAD,+OACf,uBAAMA,OADS,MAoBnB+R,SAAW,SAACC,EAAKpG,EAAMqG,GAAkB,IAAZC,EAAW,uDAAN,EAC1BtR,EAAM,GACV,GAAkB,MAAdgL,EAAKqG,IAAiBrG,EAAKqG,GAAM1P,OAAS,EAAG,CAC7C2P,GAAU,EACV,IAAK,IAAIjG,EAAI,EAAGA,EAAIL,EAAKqG,GAAM1P,OAAQ0J,IACnC,MAAK8F,SAASC,EAAKpG,EAAKqG,GAAMhG,GAAIgG,EAAMC,QAI5CF,EAAIA,EAAIzP,QAAU,CACd,MAAS2P,EAAK,EACd,KAAQtG,EAAKrK,MAIrB,OAAOX,GAnCQ,MAsCnBuR,OAAS,SAACC,GAAIC,WACV,IAAIC,YAAcD,UAAU9Q,KAAK+H,MAAM,KAEnCiJ,cAAgB,EAChBC,cAAgB,EAEhBC,cAAgB,OAChBC,SAAW,CACX/Q,GAAI8Q,cACJ9L,UAAW,mBACX9C,KAAM,iBACNmG,KAAM,CAAE/B,QAASqK,YAAY,GAAIpK,QAASoK,YAAY,IACtDhI,SAAU,CAAE2B,EAAGsG,cAAerG,EAAGsG,eAEjCpO,MAAO,CAAEkH,OAAQF,QAAQG,oBAAqBL,MAAOE,QAAQC,oBAC7DU,eAAgB,QAChBC,eAAgB,OAChB2G,WAAW,GAKXlI,SAAW,CAACiI,UACZE,OAAS,CAACF,UACVG,OAAS,GAGTC,SAAW,GACwB,MAAnCT,UAAS,oBAAqE,IAAnCA,UAAS,qBACb,MAAnCA,UAAS,mBACT,MAAKN,SAASe,SAAUT,UAAW,sBAEnCS,SAAW9P,KAAKqP,UAAS,qBAGjC,IAAIU,OAAS,GACwB,MAAjCV,UAAS,kBAAiE,IAAjCA,UAAS,mBACb,MAAjCA,UAAS,iBACT,MAAKN,SAASgB,OAAQV,UAAW,oBAEjCU,OAAS/P,KAAKqP,UAAS,mBAG/B,IAAK,IAAIpG,EAAI,EAAGA,EAAI6G,SAASvQ,OAAQ0J,IAAK,CACtC,IAAI+G,IAAMF,SAAS7G,GACH,MAAZ+G,IAAIzR,OACJyR,IAAMF,SAAS7G,GAAG1K,MAEtB,IAAI0R,OAASD,IAAI1J,MAAM,KACnBrB,QAAUgL,OAAO,GACjB/K,QAAU,GACVnD,IAAM,GACNkO,OAAO1Q,OAAS,IAChB2F,QAAU+K,OAAO,IACjBA,OAAO1Q,OAAS,IAChBwC,IAAMkO,OAAO,IAEjB,IAAIC,UAAY,QAAUjH,EAAEe,WACxBpB,KAAO,CACPjK,GAAIuR,UACJvM,UAAW,cACX9C,KAAM,iBACNmG,KAAM,CAAE/B,QAASA,QAASC,QAASA,QAASgC,OAAQnF,KAEpDX,MAAO,CAAEkH,OAAQF,QAAQG,oBAAqBL,MAAOE,QAAQC,oBAC7DW,eAAgB,OAChBD,eAAgB,QAChBzB,SAAU,CAAE2B,EAAGsG,cAAerG,EAAGsG,eACjCG,WAAW,GAGflI,SAASA,SAASlI,QAAUqJ,KAC5BgH,OAAOA,OAAOrQ,QAAUqJ,KAExB,IAAIuH,OAAS,aAAelH,EAAEe,WAC1BoG,KAAO,CAAEzR,GAAIwR,OAAQ3H,OAAQiH,cAAexL,OAAQiM,UAAWG,cAAe,SAE9EP,SAAS7G,GAAGqH,MAAQ,IACpBF,KAAKG,MAAQ,IAAMT,SAAS7G,GAAGqH,MAAQ,IACvCF,KAAKI,UAAW,GAGpB/I,SAASA,SAASlI,QAAU6Q,KAC5BP,OAAOA,OAAOtQ,QAAU6Q,KAG5B,IAAK,IAAInH,EAAI,EAAGA,EAAI8G,OAAOxQ,OAAQ0J,IAAK,CACpC,IAAI+G,IAAMD,OAAO9G,GACD,MAAZ+G,IAAIzR,OACJyR,IAAMD,OAAO9G,GAAG1K,MAEpB,IAAI0R,OAASD,IAAI1J,MAAM,KACnBrB,QAAUgL,OAAO,GACjB/K,QAAU,GACVnD,IAAM,GACNkO,OAAO1Q,OAAS,IAChB2F,QAAU+K,OAAO,IACjBA,OAAO1Q,OAAS,IAChBwC,IAAMkO,OAAO,IAEjB,IAAIC,UAAY,MAAQjH,EAAEe,WACtBpB,KAAM,CACNjK,GAAIuR,UACJvM,UAAW,cACX9C,KAAM,iBACNmG,KAAM,CAAE/B,QAASA,QAASC,QAASA,QAASgC,OAAQnF,KAEpDX,MAAO,CAAEkH,OAAQF,QAAQG,oBAAqBL,MAAOE,QAAQC,oBAC7DU,eAAgB,QAChBC,eAAgB,OAChB1B,SAAU,CAAE2B,EAAGsG,cAAerG,EAAGsG,eACjCG,WAAW,GAGflI,SAASA,SAASlI,QAAUqJ,KAC5BgH,OAAOA,OAAOrQ,QAAUqJ,KAExB,IAAIuH,OAAS,WAAalH,EAAEe,WACxBoG,KAAO,CAAEzR,GAAIwR,OAAQ3H,OAAQ0H,UAAWjM,OAAQwL,cAAeY,cAAe,SAE9EN,OAAO9G,GAAGqH,MAAQ,IAClBF,KAAKI,UAAW,EAChBJ,KAAKG,MAAQ,IAAMR,OAAO9G,GAAGqH,MAAQ,KAGzC7I,SAASA,SAASlI,QAAU6Q,KAC5BP,OAAOA,OAAOtQ,QAAU6Q,KAG5B,MAAK9S,SAAS,CACVsK,MAAOiI,OACPpI,SAAUA,SACVE,MAAOiI,SAGXpI,yDAAkBC,UACb9J,MAAK,SAAC8S,GAAD,OAAS,MAAKnT,SAAS,CAACmK,SAAUgJ,OACvCvC,OAAM,SAACwC,GAAD,OAAS7R,QAAQsP,MAAMuC,OA5KlC,MAAK3S,MAAQ,CACT0J,SAAU,GACVkJ,QAAS,GACThJ,MAAO,GACPC,MAAO,IAGX,MAAKgJ,UAAY,CACbC,eAAgBA,mDAGpB,IAAIC,aAAe,KAdJ,a,4PAkLnB,SAAOC,GACHlS,QAAQC,IAAI,iCACZD,QAAQC,IAAIiS,GAEZC,YAAW,kBAAMD,EAAGE,YAAW,KAM/BpS,QAAQC,IAAI,YACZD,QAAQC,IAAIY,Q,8BAGhB,SAAiB+H,GACb5I,QAAQC,IAAI,iDACZD,QAAQC,IAAI2I,K,uBAGhB,SAAUsJ,GACNlS,QAAQC,IAAI,oCACZD,QAAQC,IAAIiS,GAEZlS,QAAQC,IAAI,YACZD,QAAQC,IAAIY,Q,gCAGhB,SAAmBkC,EAAWC,GAC1BhD,QAAQC,IAAI,oDACZD,QAAQC,IAAI8C,GACZ/C,QAAQC,IAAI,iBACZD,QAAQC,IAAI+C,K,+BAIhB,c,kCAEA,c,oBAEA,WAOI,OANInC,KAAK1C,MAAM2D,MAAMpC,MAAQmB,KAAK3B,MAAM4S,UACpCjR,KAAK3B,MAAM4S,QAAUjR,KAAK1C,MAAM2D,MAAMpC,KACtCmB,KAAKyP,OAAO,WAAYzP,KAAK1C,MAAM2D,OACnCjB,KAAKwR,eAIL,kEAAKvN,UAAU,uBAAuBvC,MAAO,CAAE4L,gBAAiB,OAAQ1E,OAAQF,QAAQ+I,yBAA0BjJ,MAAO,SACpHxI,KAAK3B,MAAM0J,UACZ,2DAAC,mDAAD,KACI,2DAAC,mDAAD,CACI2J,OAAQ1R,KAAK0R,OACb3J,SAAU/H,KAAK3B,MAAM0J,SACrBmJ,UAAWlR,KAAKkR,UAChBxP,MAAO,CAAEkH,OAAQ,OAAQJ,MAAO,SAEhC,2DAAC,mDAAD,CAAUmJ,gBAAgB,iB,SAnP5BvK,8CAAhBsB,QAGK+I,yBAA2B,IAHhC/I,QAIKkJ,wBAA0B,KAJ/BlJ,QAMKG,oBAAsB,GAN3BH,QAOKC,mBAAqB,IAoPjBD,gC","file":"static/js/main.27c20499.chunk.js","sourcesContent":["import React, { Component, Fragment, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast, ButtonGroup } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Definition from \"./definition\"\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log('props == ');\n        console.log(props);\n\n        this.state = {\n            lineage: null,\n            newDefModal: false,\n            selectedDef: {\n                id: -1\n            },\n            tempSelDef: {\n            },\n            newDefSelected: true,\n            defSearchResults: [],\n            isLineageVisible: false\n        };\n\n    }\n\n    flattenArray(elem, key, orig = []) {\n        for (var idx = 0; idx < elem[key].length; idx++) {\n            let r = elem[key][idx];\n\n            orig.push(r.name);\n            if (r[key].length > 0) {\n                orig = this.flattenArray(r, key, orig);\n            }\n        }\n\n        return orig;\n    }\n\n    saveCol(applyUp, applyDown) {\n        let applyTo = eval(this.state.tempSelDef.applied_to)\n        applyTo.push(this.props.item.key);\n\n        if (applyUp)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_upstream'))\n        if (applyDown)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_downstream'))\n\n        let val = '';\n        if (this.state.tempSelDef.description != null)\n            val = this.state.tempSelDef.description;\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"name\": this.state.tempSelDef.name,\n                \"description\": val,\n                \"applied_to\": applyTo,\n                \"id\": this.state.tempSelDef.id,\n                \"column_key\": this.props.item.key\n            })\n        }\n\n        eventBus.dispatch(\"loading\", true);\n\n        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.props.item.definition = result.value;\n\n                    this.setState({\n                        newDefModal: false,\n                        selectedDef: result.value\n                    });\n\n                    eventBus.dispatch(\"loading\", false);\n                });\n    };\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.object_type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags, variant = \"primary\") {\n        if (arrayTags == null)\n            return;\n\n        let tags = [];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <Button style={{ marginRight: '6px' }} variant={variant} size=\"sm\">\n                {element}\n            </Button>\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.object_type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'definition':\n                return this.renderDefinition();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(\"DATAIKU ITEM :: componentDidUpdate() :: prevProps == \");\n        console.log(prevProps);\n        console.log(\"prevState == \");\n        console.log(prevState);\n\n        if (this.props.object_type == 'column') {\n            if (prevProps.item == null && this.props.item != null) {\n                this.resetSelectedDef();\n            } else {\n                if ((prevProps.item != null && this.props.item != null) && (prevProps.item.id != this.props.item.id))\n                    this.resetSelectedDef();\n            }\n        }\n        else {\n            if (this.props.object_type == 'definition') {\n                if (prevProps.item == null && this.props.item != null) {\n                    this.setState({\n                        tempSelDef: {\n                            name: this.props.item.name,\n                            applied_to: this.props.item.applied_to,\n                            description: this.props.item.description,\n                            id: this.props.item.id\n                        }\n                    })\n                }\n            }\n        }\n    }\n\n    newDef() {\n        this.setState({\n            newDefModal: true,\n            tempSelDef: {\n                applied_to: [],\n                description: this.props.item.comment,\n                name: this.props.item.name,\n                id: -1\n            }\n        });\n    }\n\n    resetSelectedDef() {\n        this.state.tempSelDef = {\n            id: -1\n        };\n\n        if (this.props.item.definition.id == -1) {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                selectedDef: {\n                    name: this.props.item.definition.name,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id,\n                    applied_to: this.props.item.definition.applied_to\n                }\n            })\n        }\n    }\n\n    editDef() {\n        this.resetSelectedDef();\n\n        this.setState({\n            tempSelDef: {\n                name: this.props.item.definition.name,\n                description: this.props.item.definition.description,\n                id: this.props.item.definition.id,\n                applied_to: this.props.item.definition.applied_to\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    defSearch = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('def-search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                this.state.defSearchResults = response\n            });\n    }\n\n    renderDefSearchMenuItem(option, props) {\n        return <Fragment>\n            <div style={{ fontWeight: 'bold' }}>{option.name}</div>\n            <div>{option.description}</div>\n        </Fragment>;\n    }\n\n    selectDef = (item) => {\n        this.setState({\n            tempSelDef: item[0],\n            newDefSelected: true\n        })\n    }\n\n    toggleNew = (isNew) => {\n        this.setState({\n            newDefSelected: isNew\n        })\n\n        if (isNew) {\n            this.setState({\n                tempSelDef: {\n                    name: this.props.item.name,\n                    description: this.props.item.comment,\n                    applied_to: [],\n                    id: -1\n                }\n            })\n        }\n        else {\n            this.setState({\n                tempSelDef: {\n                    name: this.props.item.definition.name,\n                    applied_to: this.props.item.definition.applied_to,\n                    description: this.props.item.definition.description,\n                    id: this.props.item.definition.id\n                }\n            })\n        }\n    }\n\n    renderColumn() {\n        const filterBy = () => true;\n        const { defSearchResults } = this.state;\n\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n        const tabClicked = (e) => { this.setState({ isLineageVisible: (e === \"lineage\") }) };\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Apply Definition</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Col>\n                                {!this.state.newDefSelected &&\n                                    <div>\n                                        <AsyncTypeahead\n                                            // filterBy={filterBy}\n                                            id=\"def-search\"\n                                            labelKey=\"name\"\n                                            filterBy={['name', 'description']}\n                                            caseSensitive=\"false\"\n                                            minLength={3}\n                                            onChange={this.selectDef}\n                                            onSearch={this.defSearch}\n                                            options={defSearchResults}\n                                            placeholder='Search for existing Definition'\n                                            renderMenuItemChildren={this.renderDefSearchMenuItem}\n                                        />\n                                    </div>\n                                }\n                                {this.state.newDefSelected &&\n                                    <div>\n                                        <Form style={{ paddingTop: '10px' }}>\n                                            <Form.Group className=\"mb-3\">\n                                                {this.state.selectedDef.id > -1 &&\n                                                    <div style={{ padding: \"10px 0px\" }}>\n                                                        <Form.Label>Definition ID</Form.Label>\n                                                        <Form.Control disabled=\"true\" type=\"text\" defaultValue={this.state.tempSelDef.id}></Form.Control>\n                                                    </div>\n                                                }\n                                                {this.state.selectedDef.id == -1 &&\n                                                    <h3>New Definition</h3>\n                                                }\n                                                <Form.Label>Name</Form.Label>\n                                                <Form.Control type=\"text\" defaultValue={this.state.tempSelDef.name}\n                                                    onChange={e => this.state.tempSelDef.name = e.target.value}\n                                                />\n                                                {(this.state.tempSelDef.applied_to != null && this.state.tempSelDef.applied_to.length > 0) &&\n                                                    <div style={{ padding: \"10px 0px\" }}>\n                                                        <Form.Label>Applied To</Form.Label>\n                                                        <div>\n                                                            {this.buildTagsString(eval(this.state.tempSelDef.applied_to), 'light')}\n                                                        </div>\n                                                    </div>\n                                                }\n                                                <Form.Label>Description</Form.Label>\n                                                <Form.Control as=\"textarea\" rows=\"3\" defaultValue={this.state.tempSelDef.description}\n                                                    onChange={e => this.state.tempSelDef.description = e.target.value}\n                                                />\n                                                <Form.Text className=\"text-muted\">\n                                                    Will appear in the Dataiku Dataset's column description.\n                                                </Form.Text>\n                                            </Form.Group>\n                                        </Form>\n                                    </div>\n                                }\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Col style={{ textAlign: \"left\" }}>\n                        {/* <ButtonGroup style={{ float: \"right\" }}> */}\n                        <Button variant=\"dark\" onClick={() => this.toggleNew(true)}>New</Button>\n                        <Button variant=\"dark\" onClick={() => this.toggleNew(false)}>Search</Button>\n                        {/* </ButtonGroup> */}\n                        {/* // variant={this.state.newDefSelected ? \"primary\" : \"secondary\"} */}\n                    </Col>\n                    <Col ms-auto>\n                        <Button disabled=\"true\" variant=\"secondary\" onClick={() => this.saveCol(true, true)}>Apply to Lineage</Button>\n                        <Button disabled={!this.state.newDefSelected} variant=\"primary\" onClick={() => this.saveCol(false, false)}>Apply</Button>\n                    </Col>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}<a style={{ marginLeft: \"10px\" }} href={Common.createDatasetLink(this.props.item.project, this.props.item.dataset)} target=\"_blank\"><ArrowUpRightSquare size={22} /></a></h1>\n                    <p class=\"name\">\n                        <b>{this.props.item.type}</b> column in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n                        <span style={{ padding: \"0px 3px\" }}>|</span>\n                        <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '|' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n                    </p>\n                </Col>\n            </Row>\n            <Row>\n                <div style={{ paddingTop: '10px' }}>\n                    <Tabs defaultActiveKey=\"definition\" className=\"mb-3\" onSelect={tabClicked}>\n                        <Tab eventKey=\"definition\" title=\"Definition\" def>\n                            {\n                                this.props.item.definition.id == -1 &&\n                                <div>\n                                    <Button variant=\"primary\"\n                                        onClick={() => this.newDef()}\n                                    >Add Definition</Button>{' '}\n                                    <div style={{ padding: '10px' }}>\n                                        {this.props.item.comment}\n                                    </div>\n                                </div>\n                            }\n                            {\n                                this.props.item.definition.id > 0 &&\n                                <div>\n                                    <Button variant=\"primary\"\n                                        onClick={() => this.editDef()}\n                                    >Edit Definition</Button>{' '}\n                                    <div style={{ padding: '10px' }}>\n                                        <Definition definition={this.state.selectedDef}></Definition>\n                                    </div>\n                                </div>\n                            }\n                        </Tab>\n                        <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                            {\n                                this.state.isLineageVisible &&\n                                <div class=\"lineage\" id=\"lineage-container\">{lineage}</div>\n                            }\n                        </Tab>\n                    </Tabs>\n                </div>\n            </Row>\n        </Col>\n    }\n\n    renderDefinition() {\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}</h1>\n\n                    <Container>\n                        <Row>\n                            <Col>\n\n                                <div>\n                                    <Form style={{ paddingTop: '10px' }}>\n                                        <Form.Group className=\"mb-3\">\n                                            {this.state.selectedDef.id > -1 &&\n                                                <div style={{ padding: \"10px 0px\" }}>\n                                                    <Form.Label>Definition ID</Form.Label>\n                                                    <Form.Control disabled=\"true\" type=\"text\" defaultValue={this.state.tempSelDef.id}></Form.Control>\n                                                </div>\n                                            }\n                                            {this.state.selectedDef.id == -1 &&\n                                                <h3>New Definition</h3>\n                                            }\n                                            <Form.Label>Name</Form.Label>\n                                            <Form.Control type=\"text\" defaultValue={this.state.tempSelDef.name}\n                                                onChange={e => this.state.tempSelDef.name = e.target.value}\n                                            />\n                                            {(this.state.tempSelDef.applied_to != null && this.state.tempSelDef.applied_to.length > 0) &&\n                                                <div style={{ padding: \"10px 0px\" }}>\n                                                    <Form.Label>Applied To</Form.Label>\n                                                    <div>\n                                                        {this.buildTagsString(eval(this.state.tempSelDef.applied_to), 'light')}\n                                                    </div>\n                                                </div>\n                                            }\n                                            <Form.Label>Description</Form.Label>\n                                            <Form.Control as=\"textarea\" rows=\"3\" defaultValue={this.state.tempSelDef.description}\n                                                onChange={e => this.state.tempSelDef.description = e.target.value}\n                                            />\n                                            <Form.Text className=\"text-muted\">\n                                                Will appear in the Dataiku Dataset's column description.\n                                            </Form.Text>\n                                        </Form.Group>\n                                    </Form>\n                                </div>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        const tabClicked = (e) => { this.setState({ isLineageVisible: (e === \"lineage\") }) };\n\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.id}</h1>\n                    <p>Dataset in <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n                    <div class=\"tags\">{tags}</div>\n                </Col>\n            </Row>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"columns\" id=\"uncontrolled-tab-example\" className=\"mb-3\" onSelect={tabClicked}>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Definition</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        {\n                            this.state.isLineageVisible &&\n                            <div class=\"lineage\" id=\"lineage-container\">{lineage}</div>\n                        }\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td class=\"cellLink\" onClick={() => this.openDataset(col)}>{col.split('|')[1]}</td>\n            </tr>\n        );\n\n        return <Col>\n            <Row>\n                <Col xs=\"auto\">\n                    <div class=\"icon\">\n                        {Common.getIconForDataikuItemType(this.props.object_type, \"100%\")}\n                    </div>\n                </Col>\n                <Col>\n                    <h1>{this.props.item.name}<span style={{ paddingLeft: \"6px\", paddingBottom: \"2px\" }}>\n                        <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={22} /></a>\n                    </span>\n                    </h1>\n                    <p>Project<span style={{ paddingLeft: '4px' }}>\n                        in <span style={{ fontWeight: \"bold\" }}>{this.props.item.folder}</span> folder</span></p>\n                    <div class=\"tags\">{tags}</div>\n                </Col>\n            </Row>\n            <Row>\n                <div style={{ paddingTop: '10px' }}>\n                    <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\" id='project-tabs'>\n                        <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {dataSetRows}\n                                </tbody>\n                            </Table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </Row>\n        </Col >;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                {/* <p>No Item to display...</p> */}\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  var project = \"\";\n  var dataset = \"\";\n  var column = \"\";\n\n  function formatData(_data)  {  \n    var project_splits = _data.project.split('|');\n    switch(project_splits.length) {\n      case 1:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n      case 2:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        break;\n      case 3:\n        project = project_splits[0];\n        dataset = project_splits[1];\n        column = project_splits[2];\n        break;\n      default:\n        project = _data.project;\n        dataset = _data.dataset;\n        break;\n    }\n  }\n\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", project + '|' + dataset);\n  }\n\n  formatData(data);\n\n  return (\n    <>\n      <Handle\n        className='thread-handle'\n        type=\"target\"\n        position=\"left\"\n        isConnectable={isConnectable}\n      />\n\n      <div>\n        <div>\n          <h6>{project}</h6>\n        </div>\n        <div>\n          <a href='javascript:void(0)' onClick={selectDataset}>{dataset}</a>\n        </div>\n        <div>\n          <p>{column}</p>\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n      />\n    </>\n  );\n});","import Elk from \"elkjs\";\nimport { isNode } from \"react-flow-renderer\";\nimport Lineage from \"../components/lineage\";\n\nexport const createGraphLayout = async (elements) => {\n  const nodes = [];\n  const edges = [];\n\n  const elk = new Elk({\n    defaultLayoutOptions: {\n      \"elk.algorithm\": \"layered\",\n      \"elk.contentAlignment\": \"V_CENTER\",\n      \"elk.direction\": \"RIGHT\",\n      // \"elk.edgeLabels.inline\": true,\n      \"elk.edgeRouting\": \"SPLINES\",      \n      \"elk.layered.spacing.nodeNodeBetweenLayers\": 50,\n      \"elk.padding\": \"[top=50,left=150,bottom=25,right=25]\",\n      \"elk.spacing.nodeNode\": 25,      \n    }\n  });\n\n  elements.forEach((el) => {\n    if (isNode(el)) {\n      nodes.push({\n        id: el.id,\n        width: el.__rf?.width ?? Lineage.DEFAULT_NODE_WIDTH,\n        height: el.__rf?.height ?? Lineage.DEFAULT_NODE_HEIGHT\n      });\n    } else {\n      edges.push({\n        id: el.id,\n        target: el.target,\n        source: el.source\n      });\n    }\n  });\n\n  const newGraph = await elk.layout({\n    id: \"root\",\n    children: nodes,\n    edges: edges\n  });\n\n  return elements.map((el) => {\n    if (isNode(el)) {\n      const node = newGraph?.children?.find((n) => n.id === el.id);\n      el.sourcePosition = \"right\";\n      el.targetPosition = \"left\";\n      if (node?.x && node?.y && node?.width && node?.height) {\n        el.position = {\n          x: node.x - node.width / 2 + Math.random() / 1000,\n          y: node.y - node.height / 2\n        };\n      }\n    }\n\n    return el;\n  });\n};\n","import React, { Component } from \"react\";\nimport { Col, Container, Row, Card } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Definition extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (<Card style={{ width: '30rem' }}>\n            <Card.Header>Definition: {this.props.definition.name}</Card.Header>\n            <Card.Body>\n                <Card.Text>\n                    <h5>\n                        ID\n                    </h5>\n                    <div style={{ paddingBottom: \"10px\" }}>\n                        {this.props.definition.id}\n                    </div>\n                    <h5>\n                        Name\n                    </h5>\n                    <div style={{ paddingBottom: \"10px\" }}>\n                        {this.props.definition.name}\n                    </div>\n                    <h5>\n                        Description\n                    </h5>\n                    <div style={{ paddingBottom: \"10px\" }}>\n                        {this.props.definition.description}\n                    </div>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n        )\n    }\n}\n\nexport default Definition;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    FaFilter,\n    FaRedo\n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,\n                definition: true\n            },\n            currentUser: '',\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {\n            var dataikuItem = response[results];\n            if (types.indexOf(dataikuItem.object_type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n            }\n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).sort().map(([key, value]) => {\n            if (value == true) {\n                types[types.length] = key.toString();\n            }\n        });\n\n        return types;\n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({\n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        if (item.length > 0) {\n            this.loadItemByKey(item[0].key)\n            this.navToObject(item[0].key)\n        }\n    }\n\n    loadItemByKey = (itemKey) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        // let obj_type = 'project';\n        // let splitCt = (itemKey.split(\"|\").length - 1);\n        // if (splitCt == 1)\n        //     obj_type = 'dataset';\n        // else if (splitCt == 2)\n        //     obj_type = 'column'\n\n        fetch(window.getWebAppBackendUrl('load-item') + '?key=' + itemKey, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                console.log('response == ');\n                console.log(response);\n\n                this.setState({\n                    loading: false,\n                    selectedItem: response,\n                    selectedItemType: response.object_type\n                });\n            });\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n\n        window.$(document).ready(() => {\n\n            fetch(window.getWebAppBackendUrl('get-user'))\n                .then(res => res.json())\n                .then((response) => {\n\n                    this.setState({ \n                        dataiku: window.dataiku, \n                        currentUser: response['you_are'],\n                        rendered: true,\n                        loading: false\n                    });\n\n                    this.navDeepLink();\n\n                    eventBus.on(\"datasetSelected\", (ds) => {\n                        this.loadItem([{\n                            key: ds,\n                            object_type: 'dataset'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(ds)\n                    }\n                    );\n\n                    eventBus.on(\"projectSelected\", (proj) => {\n                        this.loadItem([{\n                            key: proj,\n                            object_type: 'project'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(proj)\n                    }\n                    );\n\n                    eventBus.on(\"columnSelected\", (col) => {\n                        this.loadItem([{\n                            key: col,\n                            object_type: 'column'\n                        }])\n\n                        // clear the search bar\n                        // this.searchRef.clear()\n                        this.navToObject(col)\n                    }\n                    );\n\n                    eventBus.on(\"loading\", (isLoading) =>\n                        this.setState({ \"loading\": isLoading })\n                    );\n                });\n        });\n    }\n\n    navDeepLink() {\n        let parts = window.top.location.href.split('#o=')\n\n        if (parts.length > 1) {\n            this.setState({ \"loading\": true });\n            this.loadItemByKey(parts[1])\n        }\n    }\n\n    navToObject(obj) {\n        let base_url = window.top.location.href.split('#')[0]\n        window.top.location.href = base_url + \"#o=\" + obj\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n\n            <span style={{ paddingRight: '5px' }}>\n                {Common.getIconForDataikuItemType(option.object_type, '13px')}\n            </span>\n            {option.object_type == 'definition' &&\n                <span>\n                    <span style={{}}>Definition: </span>\n                    <span style={{}}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'column' &&\n                <span>\n                    <span style={{}}>Project: </span>\n                    <span style={{}}>{option.key.split('|')[0]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span style={{}}>Dataset:</span>\n                    <span style={{ padding: '0px 4px' }}>{option.key.split('|')[1]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span>Column:</span><span style={{ fontWeight: 'bold', padding: '0px 4px' }}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'dataset' &&\n                <span>\n                    <span style={{}}>Project:</span>\n                    <span style={{}}>{option.key.split('|')[0]}</span>\n\n                    <span style={{ padding: '0px 4px' }}>|</span>\n\n                    <span style={{}}>Dataset:</span>\n                    <span style={{ padding: '0px 4px', fontWeight: 'bold' }}>{option.name}</span>\n                </span>\n            }\n            {option.object_type == 'project' &&\n                <span>\n                    <span>Project: </span><span style={{ fontWeight: 'bold', padding: '0px 4px' }}>{option.name}</span>\n                </span>\n            }\n\n        </Fragment >;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        this.searchRef = React.createRef();\n\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} object_type={selectedItemType} />;\n\n        return (\n\n            <Container style={{ paddingTop: '10px' }}>\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div class=\"container-fluid\">\n                        {/* <img src=\"../public/images/icon_thread.png\" /> */}\n                        <a class=\"navbar-brand\" style={{ fontWeight: \"bold\", fontSize: \"27px\" }}>Thread</a>\n                        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\n                            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                {/* <li class=\"nav-item\">\n                                    <a class=\"nav-link active\" href=\"#\">Home</a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" href=\"#\">Link</a>\n                                </li> */}\n                            </ul>\n                            <ul class=\"navbar-nav\">\n                                <li style={{ padding: '12px' }}>\n                                    <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\">{this.state.currentUser}</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n                {/* <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> */}\n                {/* <Row>\n                    <Col>\n                        <div class=\"title-row\"><h1>Thread</h1></div></Col>\n                    <Col style={{ textAlign: 'right', paddingTop: '16px', 'paddingRight': '16px' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                        <div>{this.state.currentUser}</div>\n                    </Col>\n                </Row> */}\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                // labelKey={option => {\n                                //     return option.key.replaceAll('|', ' | ') + ' (' + option.name + ')'\n                                // }\n                                // }\n                                labelKey=\"name\"\n                                ref={this.searchRef}\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{\n                                    backgroundColor: \"#66a3ff\",\n                                    color: \"#FFFFFF\",\n                                    cursor: 'pointer',\n                                    height: '34px',\n                                    padding: \"8px\",\n                                    width: '34px'\n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                {openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        {/* <Col xs={1}>\n                            <h5>Filter By: </h5>\n                        </Col> */}\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight: \"5px\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    : null}\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component, useState, useEffect } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction createDatasetLinkTag(proj, ds) {\n    return '<a href=\"' + this.createDatasetLink(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDatasetLinkTag,\n    getIconForDataikuItemType,\n};\n\nexport default Common;","import React, { Component } from 'react';\nimport ReactFlow, { Controls, ReactFlowProvider, useZoomPanHelper } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\nimport { createGraphLayout } from '../common/layout.js';\nimport Common from '../common/common.js';\n\nclass Lineage extends Component {\n\n    // CONSTANT VALUES\n    static DEFAULT_CONTAINER_HEIGHT = 500;\n    static DEFAULT_CONTAINER_WIDTH = 1030;\n\n    static DEFAULT_NODE_HEIGHT = 75;\n    static DEFAULT_NODE_WIDTH = 250;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n            nodes: [],\n            edges: []\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n\n        var flowInstance = null;\n        // const { fitView } = useZoomPanHelper();\n        // console.log('fitView == ');\n        // console.log(fitView);\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        let basePositionX = 0;\n        let basePositionY = 0;\n\n        var baseElementId = 'base';\n        var baseNode = {\n            id: baseElementId,\n            className: 'thread-node-base',\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: basePositionX, y: basePositionY },\n            // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n            style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        };\n\n        // console.log('base-node :: base_splits[1].length == ' + base_splits[1].length);\n\n        var elements = [baseNode];\n        var _nodes = [baseNode];\n        var _edges = [];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n            var node = {\n                id: elementId,\n                className: 'thread-node',\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n                style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: basePositionX, y: basePositionY },                     \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'up_' + x.toString();\n            var node ={\n                id: elementId,\n                className: 'thread-node',\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                // style: {  minHeight: Lineage.DEFAULT_NODE_HEIGHT, minWidth: Lineage.DEFAULT_NODE_WIDTH },\n                style: { height: Lineage.DEFAULT_NODE_HEIGHT, width: Lineage.DEFAULT_NODE_WIDTH },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: basePositionX, y: basePositionY },         \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }        \n\n        this.setState({\n            edges: _edges,\n            elements: elements,\n            nodes: _nodes\n        });\n\n        createGraphLayout(elements)\n            .then((els) => this.setState({elements: els}))\n            .catch((err) => console.error(err));\n    }\n\n    onLoad(rv) {\n        console.log('LINEAGE :: onLoad() :: rv == ');\n        console.log(rv);\n\n        setTimeout(() => rv.fitView(), 1000);\n\n        // this.flowInstance = rv;\n        // console.log('this.flowInstance == ');\n        // console.log(this.flowInstance);\n\n        console.log('this == ');\n        console.log(this);\n    }\n\n    onElementsRemove(elements) {\n        console.log('LINEAGE :: onElementsRemove() :: elements == ');\n        console.log(elements);\n    }\n\n    onFitView(rv) {\n        console.log('LINEAGE :: onFitView() :: rv == ');\n        console.log(rv);\n\n        console.log('this == ');\n        console.log(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(\"LINEAGE :: componentDidUpdate() :: prevProps == \");\n        console.log(prevProps);\n        console.log(\"prevState == \");\n        console.log(prevState);\n        // this.forceUpdate();\n    }\n\n    componentDidMount() { }\n\n    componentWillUnmount() { }\n\n    render() {\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n            this.forceUpdate();\n        }\n\n        return (            \n            <div className='react-flow-container' style={{ backgroundColor: '#EEE', height: Lineage.DEFAULT_CONTAINER_HEIGHT, width: \"100%\" }}>\n                {this.state.elements && \n                <ReactFlowProvider>\n                    <ReactFlow \n                        onLoad={this.onLoad} \n                        elements={this.state.elements}\n                        nodeTypes={this.nodeTypes} \n                        style={{ height: \"100%\", width: \"100%\" }}\n                    >\n                        <Controls showInteractive=\"false\" />\n                    </ReactFlow>\n                </ReactFlowProvider>}\n            </div>\n        );        \n    }\n}\n\nexport default Lineage;"],"sourceRoot":""}