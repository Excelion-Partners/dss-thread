{"version":3,"sources":["eventBus.js","components/lineage.js","components/customFlowNode.js","components/definition.js","components/dataikuItem.js","App.js","serviceWorker.js","index.js","common/common.js"],"names":["eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","Lineage","props","traverse","lst","node","prop","ct","res","length","x","name","update","st","base_elem","base_splits","split","basePositionX","basePositionY","console","log","dagreGraph","setGraph","rankdir","baseElementId","baseNode","id","type","project","dataset","position","y","style","backgroundColor","borderColor","borderWidth","fontWeight","height","nodeHeight","width","nodeWidth","sourcePosition","targetPosition","draggable","elements","_nodes","_edges","down_res","eval","up_res","lbl","splits","col","elementId","toString","downYPosition","Math","ceil","column","edgeId","edge","source","target","arrowHeadType","count","label","animated","forEach","setNode","setEdge","dagre","layout","nodeWithPosition","setState","nodes","edges","state","last_ds","nodeTypes","customFlowNode","setDefaultEdgeLabel","rv","fitView","this","deets","containerHeight","containerWidth","connectionLineType","onLoad","showInteractive","Component","graphlib","Graph","memo","isConnectable","background","border","borderRadius","padding","textAlign","href","onClick","preventDefault","Definition","maxWidth","Row","Col","paddingRight","definition","description","DataikuItem","newDefModal","selectedDef","elem","key","orig","idx","r","push","flattenArray","applyUp","applyDown","applyTo","item","concat","confirmAlert","title","message","buttons","val","requestOptions","method","headers","body","JSON","stringify","fetch","window","getWebAppBackendUrl","then","json","result","value","full_ds_name","arrayTags","tags","element","alert","renderDataset","renderProject","renderColumn","comment","ds","proj","lineage","buildLineage","Modal","size","show","animation","onHide","Header","closeButton","Title","Body","Container","Form","paddingTop","Group","className","Label","Control","defaultValue","onChange","Text","Footer","Button","variant","saveCol","class","openProject","openDataset","Tabs","defaultActiveKey","Tab","eventKey","def","newDef","editDef","buildTagsString","meta","listItems","schema","map","openColumn","paddingLeft","Common","createDatasetLink","Table","striped","bordered","hover","dataSetRows","datasets","createProjectLink","projectKey","itemDetails","renderItemDetailsByType","xs","getIconForDataikuItemType","App","filterDataikuItems","response","types","formatQueryTypes","p_list","Object","keys","results","dataikuItem","indexOf","entries","filters","handleOnChange","tempFilters","loadItem","loading","selectedItem","selectedItemType","search","term","url","searchResults","dataiku","undefined","openFilter","$","ready","rendered","isLoading","option","paddingBottom","rescan","cursor","filterBy","delay","labelKey","minLength","onSearch","options","placeholder","renderMenuItemChildren","toggleFilter","color","marginTop","checked","marginRight","htmlFor","Spinner","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","projkey","createDsLinkFull","createDsLink2"],"mappings":"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","file":"static/js/main.a8f47827.chunk.js","sourcesContent":["const eventBus = {\n    on(event, callback) {\n      document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n      document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n      document.removeEventListener(event, callback);\n    },\n  };\n  \n  export default eventBus;","import React, { Component, useCallback } from 'react';\nimport ReactFlow, { addEdge, Controls, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport customFlowNode from './customFlowNode.js';\nimport dagre from 'dagre';\n\nclass Lineage extends Component {\n\n    // CONSTANT VALUES\n    static containerHeight = 500;\n    static containerWidth = 1030;\n\n    static nodeWidth = 200;\n    static nodeHeight = 60;\n\n    static dagreGraph = new dagre.graphlib.Graph();\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elements: [],\n            last_ds: '',\n            // dagreGraph: new dagre.graphlib.Graph(),\n            nodes: [],\n            edges: []\n        };\n\n        this.nodeTypes = {\n            customFlowNode: customFlowNode,\n        };\n\n        Lineage.dagreGraph.setDefaultEdgeLabel(() => ({}));\n    }\n\n    traverse = (lst, node, prop, ct = 0) => {\n        var res = [];\n        if (node[prop] != null && node[prop].length > 0) {\n            ct = ct + 1;\n            for (var x = 0; x < node[prop].length; x++) {\n                this.traverse(lst, node[prop][x], prop, ct);\n            }\n        }\n        else {\n            lst[lst.length] = {\n                'count': ct - 1,\n                'name': node.name\n            }\n        }\n\n        return res;\n    }\n\n    // STRUCTURE FOR NODES AND EDGES FOR AUTO LAYOUT\n    // example = () => {\n    //     const nodes = [{\n    //         id: '1',\n    //         type: 'input',\n    //         data: { label: 'input' },\n    //         position,\n    //       }];\n\n    //     const edges = [{ \n    //         id: 'e12', \n    //         source: '1', \n    //         target: '2', \n    //         type: edgeType, \n    //         animated: true \n    //     }];\n    // }\n\n    update = (st, base_elem) => {\n        var base_splits = base_elem.name.split('.');\n\n        // let basePositionX = (Lineage.containerWidth / 2) - (Lineage.nodeWidth / 2);\n        // let basePositionY = (Lineage.containerHeight / 2) - (Lineage.nodeHeight / 2);\n\n        let basePositionX = 0;\n        let basePositionY = 0;\n\n        console.log(\"basePositionX == \");\n        console.log(basePositionX);\n        console.log(\"basePositionY == \");\n        console.log(basePositionY);\n\n        Lineage.dagreGraph.setGraph({ rankdir: 'LR' });\n        // this.state.dagreGraph.setGraph({ rankdir: 'LR' });\n\n        var baseElementId = 'base';\n        var baseNode = {\n            id: baseElementId,\n            type: 'customFlowNode',\n            data: { project: base_splits[0], dataset: base_splits[1], },\n            position: { x: basePositionX, y: basePositionY },\n            // position: { x: 250, y: 140 },\n            style: { backgroundColor: '#FFF', borderColor: 'red', borderWidth: '2px', fontWeight: 'bold', height: Lineage.nodeHeight, width: Lineage.nodeWidth },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            draggable: false\n        };\n\n        var elements = [baseNode];\n        var _nodes = [baseNode];\n        var _edges = [];\n\n        // find all the end-nodes\n        var down_res = [];\n        if (base_elem['lineage_downstream'] != null && base_elem['lineage_downstream'] != '') {\n            if (base_elem['lineage_downstream'] != null)\n                this.traverse(down_res, base_elem, 'lineage_downstream');\n            else\n                down_res = eval(base_elem['lineage_downstream']);\n        }\n        \n        var up_res = [];\n        if (base_elem['lineage_upstream'] != null && base_elem['lineage_upstream'] != '') {\n            if (base_elem['lineage_upstream'] != null)\n                this.traverse(up_res, base_elem, 'lineage_upstream');\n            else\n                up_res = eval(base_elem['lineage_upstream']);\n        }\n\n        for (var x = 0; x < down_res.length; x++) {\n            var lbl = down_res[x];\n            if (lbl.name != null)\n                lbl = down_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            var elementId = 'down_' + x.toString();\n\n            var downYPosition = ((x + 1) - Math.ceil(down_res.length * 0.5));\n            console.log(\"downYPosition == \");\n            console.log(downYPosition);\n\n            // basePositionY + (nodeHeight * ((x + 1) - Math.ceil(down_res.length * 0.5))) // I believe this is the way to good, but untested.\n\n            var node = {\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', height: Lineage.nodeHeight, width: Lineage.nodeWidth },\n                targetPosition: 'left',\n                sourcePosition: 'right',\n                position: { x: basePositionX, y: basePositionY },\n                // position: { x: 500, y: ((300 / (down_res.length + 1)) * (x + 1)) }, // OG\n                // position: { x: basePositionX + (Lineage.nodeWidth + 50), y: (200 / (down_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX + (Lineage.nodeWidth + 50), y: (300 / (down_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX + (Lineage.nodeWidth + 50), y: (250 / (x + 1) - (down_res.length / 2)) },\n                \n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_down_' + x.toString();\n            var edge = { id: edgeId, source: baseElementId, target: elementId, arrowHeadType: 'arrow' };\n            if (down_res[x].count > 0) {\n                edge.label = '[' + down_res[x].count + ']';\n                edge.animated = true;\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }\n\n        for (var x = 0; x < up_res.length; x++) {\n            var lbl = up_res[x];\n            if (lbl.name != null)\n                lbl = up_res[x].name;\n\n            var splits = lbl.split('.');\n            var project = splits[0];\n            var dataset = '';\n            var col = '';\n            if (splits.length > 1)\n                dataset = splits[1];\n            if (splits.length > 2)\n                col = splits[2];\n\n            // var upYPosition = (250 / (x + 1) - (down_res.length / 2));\n            // console.log(\"upYPosition == \");\n            // console.log(upYPosition);\n\n            var elementId = 'up_' + x.toString();\n            var node ={\n                id: elementId,\n                type: 'customFlowNode',\n                data: { project: project, dataset: dataset, column: col },\n                style: { backgroundColor: '#FFF', height: Lineage.nodeHeight, width: Lineage.nodeWidth },\n                sourcePosition: 'right',\n                targetPosition: 'left',\n                position: { x: basePositionX, y: basePositionY },\n                // position: { x: 0, y: (300 / (up_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX - (Lineage.nodeWidth + 50), y: (300 / (up_res.length + 1) * (x + 1)) },\n                // position: { x: basePositionX - (Lineage.nodeWidth + 50), y: (300 / (up_res.length + 1) * (x + 1)) },\n                draggable: false\n            };\n\n            elements[elements.length] = node;\n            _nodes[_nodes.length] = node;\n\n            var edgeId = 'edge_up_' + x.toString();\n            var edge = { id: edgeId, source: elementId, target: baseElementId, arrowHeadType: 'arrow' };\n            if (up_res[x].count > 0) {\n                edge.animated = true;\n                edge.label = '[' + up_res[x].count + ']';\n            }\n\n            elements[elements.length] = edge;\n            _edges[_edges.length] = edge;\n        }        \n\n        console.log('elements == ');\n        console.log(elements);\n\n        console.log('_nodes == ');\n        console.log(_nodes);\n\n        console.log('_edges == ');\n        console.log(_edges);\n\n        // const { dagreGraph } = this.state;\n        \n\n        _nodes.forEach((node) => {\n            Lineage.dagreGraph.setNode(node.id, { width: Lineage.nodeWidth, height: Lineage.nodeHeight });\n            // dagreGraph.setNode(node.id, { width: Lineage.nodeWidth, height: Lineage.nodeHeight });\n        });\n\n        _edges.forEach((edge) => {\n            Lineage.dagreGraph.setEdge(edge.source, edge.target);\n            // dagreGraph.setEdge(edge.source, edge.target);\n        });\n\n        dagre.layout(Lineage.dagreGraph);\n        // dagre.layout(dagreGraph);\n\n        _nodes.forEach((node) => {\n            const nodeWithPosition = Lineage.dagreGraph.node(node.id);\n            // const nodeWithPosition = dagreGraph.node(node.id);\n            node.targetPosition = 'left';\n            node.sourcePosition = 'right';\n        \n            // We are shifting the dagre node position (anchor=center center) to the top left\n            // so it matches the React Flow node anchor point (top left).\n            node.position = {\n              x: nodeWithPosition.x - Lineage.nodeWidth / 2,\n              y: nodeWithPosition.y - Lineage.nodeHeight / 2,\n            };\n        \n            return node;\n          });\n\n        this.setState({\n            nodes: _nodes,\n            edges: _edges,\n            elements: elements\n        });\n\n        // ELMENTS STATE UPDATE\n        // var new_state = {}\n        // new_state[st] = elements;\n        // this.setState(new_state)\n    }\n\n    onLoad(rv) {\n        rv.fitView();\n    }\n\n    render() {      \n        console.log('Render() :: this.state == ');\n        console.log(this.state);\n\n        // SEPARATED NODES AND EDGES\n        // if (this.props.deets.name != this.state.last_ds) {\n        //     this.state.last_ds = this.props.deets.name;\n        //     this.update('elements', this.props.deets);\n        // }\n\n        // // const [nodes, setNodes, onNodesChange] = useNodesState(this.state.nodes);\n        // // const [edges, setEdges, onEdgesChange] = useEdgesState(this.state.edges);\n\n        // // const onConnect = useCallback(\n        // //     (params) => setEdges((eds) => addEdge({ ...params, type: 'smoothstep', animated: true }, eds)),\n        // //     []\n        // // );\n        \n        // return (\n        //     <div style={{ backgroundColor: '#EEE', height: Lineage.containerHeight, width: Lineage.containerWidth }}>\n        //         {this.state.elements && \n        //         <ReactFlow                     \n        //             nodes={this.state.nodes}\n        //             edges={this.state.edges} \n        //             nodeTypes={this.nodeTypes} \n        //             // onConnect={onConnect}\n        //             onLoad={this.onLoad} \n        //             // onEdgesChange={onEdgesChange}\n        //             // onNodesChange={onNodesChange}                    \n        //             connectionLineType=\"smoothstep\"\n        //             style={{ height: \"100%\", width: \"100%\" }}\n        //         >\n        //             <Controls showInteractive=\"false\" />\n        //         </ReactFlow>}\n        //     </div>\n        // );\n\n        // WORKING RENDER\n        if (this.props.deets.name != this.state.last_ds) {\n            this.state.last_ds = this.props.deets.name;\n            this.update('elements', this.props.deets);\n        }\n        \n        return (\n            <div style={{ backgroundColor: '#EEE', height: Lineage.containerHeight, width: Lineage.containerWidth }}>\n                {this.state.elements && \n                <ReactFlow \n                    connectionLineType=\"smoothstep\"                    \n                    elements={this.state.elements} \n                    nodeTypes={this.nodeTypes} \n                    onLoad={this.onLoad} \n                    style={{ height: \"100%\", width: \"100%\" }}\n                >\n                    <Controls showInteractive=\"false\" />\n                </ReactFlow>}\n            </div>\n        );\n    }\n}\n\nexport default Lineage;","import React, { memo } from 'react';\nimport eventBus from \"../eventBus\";\n\nimport { Handle } from 'react-flow-renderer';\nimport Common from '../common/common';\n\nexport default memo(({ data, isConnectable }) => {\n  function selectDataset(e) {\n    e.preventDefault();\n    eventBus.dispatch(\"datasetSelected\", data.project + '.' + data.dataset);\n  }\n\n  console.log('data == ');\n  console.log(data);\n  console.log('isConnectable == ');\n  console.log(isConnectable);\n\n  // <Handle\n  //   type=\"target\"\n  //   position=\"left\"\n  //   isValidConnection={(connection) => connection.source === 'some-id'}\n  //   onConnect={(params) => console.log('handle onConnect', params)}\n  //   style={{ background: '#fff' }}\n  // />\n\n  return (\n    <>\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        style={{ background: '#555' }}\n        isConnectable={isConnectable}\n      />\n      <div style={{ border: 'solid 1px #333', borderRadius: '3px', height: '100%', padding: '10px', textAlign: 'center', width: '100%' }}>\n        <div style={{ fontWeight: 'bold' }}>{data.project}</div>\n        <div>\n          {/* <a href={Common.createDsLink2(data.project, data.dataset)} target=\"_blank\">{data.dataset}</a> */}\n          <a href='javascript:void(0)' onClick={selectDataset}>{data.dataset}</a>\n        </div>\n        <div>\n          {data.column}\n        </div>\n      </div>\n\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        isConnectable={isConnectable}\n        style={{ background: '#555' }}\n      />\n    </>\n  );\n});","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\n\n\nclass Definition extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{ maxWidth: \"300px\", border: \"solid 1px #999\", borderRadius: \"2px\", padding: \"10px\" }}>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            ID\n                        </span>\n                        <span>\n                            {this.props.definition.id}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Name\n                        </span>\n                        <span>\n                            {this.props.definition.name}\n                        </span>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <span style={{ fontWeight: \"bold\", paddingRight: \"10px\" }}>\n                            Description\n                        </span>\n                        <span>\n                            {this.props.definition.description}\n                        </span>\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default Definition;","import React, { Component } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Common from \"../common/common\";\nimport Table from 'react-bootstrap/Table';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { Modal, Button, Form, Toast } from \"react-bootstrap\";\nimport eventBus from \"../eventBus\";\nimport { ArrowUpRightSquare } from 'react-bootstrap-icons'\nimport Lineage from \"./lineage\";\nimport Definition from \"./definition\"\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass DataikuItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newDefModal: false,\n            selectedDef: {\n                name: \"New Definition\",\n                description: \"\"\n            }\n        };\n    }\n\n    flattenArray(elem, key, orig = []) {\n\n        for (var idx = 0; idx < elem[key].length; idx++) {\n            let r = elem[key][idx];\n\n            orig.push(r.name);\n            if (r[key].length > 0) {\n                orig = this.flattenArray(r, key, orig);\n            }\n        }\n\n        return orig;\n    }\n\n    saveCol(applyUp, applyDown) {\n        let applyTo = [this.props.item.key];\n        if (applyUp)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_upstream'))\n        if (applyDown)\n            applyTo = applyTo.concat(this.flattenArray(this.props.item, 'lineage_downstream'))\n\n        confirmAlert({\n            title: 'Confirm Save',\n            message: 'Are you sure to apply this definition to ' + applyTo,\n            buttons: [\n                {\n                    label: 'Apply',\n                    onClick: () => {\n                        let val = '';\n                        if (this.state.selectedDef.description != null)\n                            val = this.state.selectedDef.description;\n\n\n                        const requestOptions = {\n                            method: 'POST',\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                \"name\": this.state.selectedDef.name,\n                                \"description\": val,\n                                \"applied_to\": applyTo,\n                                \"id\": this.state.selectedDef.id\n                            })\n                        }\n\n                        eventBus.dispatch(\"loading\", true);\n\n                        fetch(window.getWebAppBackendUrl('update-desc'), requestOptions)\n                            .then(res => res.json())\n                            .then(\n                                (result) => {\n                                    this.props.item.definition = result.value;\n\n                                    this.setState({\n                                        newDefModal: false,\n                                        selectedDef: result.value\n                                    });\n\n                                    eventBus.dispatch(\"loading\", false);\n                                });\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => {}\n                }\n            ]\n        });\n    };\n\n    buildLineage() {\n        return <Row>\n            <Lineage deets={this.props.item} full_ds_name={this.props.item.name} type={this.props.type}></Lineage>\n        </Row>\n    }\n\n    buildTagsString(arrayTags) {\n        let tags = [<b>Tags: </b>];\n\n        arrayTags.forEach(element => {\n            tags[tags.length] = <span>{element}</span>;\n        });\n\n        return tags;\n    }\n\n    openExternalProject(key) {\n        alert(key)\n    }\n\n    renderItemDetailsByType() {\n        switch (this.props.type) {\n            case 'dataset':\n                return this.renderDataset();\n            case 'project':\n                return this.renderProject();\n            case 'column':\n                return this.renderColumn();\n            case 'dataset':\n                return <Col>\n                    <p>No rendering has been setup for this item.</p>\n                </Col>;\n        }\n    }\n\n    newDef() {\n        this.setState({\n            selectedDef: {\n                name: 'New Definition',\n                value: this.props.item.comment\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    editDef() {\n        this.setState({\n            selectedDef: {\n                name: this.props.item.definition.name,\n                value: this.props.item.definition.description,\n                id: this.props.item.definition.id\n            }\n        })\n        this.setState({ newDefModal: true });\n    }\n\n    openColumn(col) {\n        eventBus.dispatch(\"columnSelected\", col);\n    };\n\n    openDataset(ds) {\n        eventBus.dispatch(\"datasetSelected\", ds);\n    }\n\n    openProject(proj) {\n        eventBus.dispatch(\"projectSelected\", proj);\n    }\n\n    renderColumn() {\n        let lineage = this.buildLineage();\n        const handleClose = () => this.setState({ newDefModal: false });\n\n        if (this.props.item.definition.id > -1) {\n            this.state.selectedDef.name = this.props.item.definition.name;\n            this.state.selectedDef.id = this.props.item.definition.id;\n            this.state.selectedDef.description = this.props.item.definition.description;\n        }\n        else {\n            this.state.selectedDef.name = \"New Definition\";\n            this.state.selectedDef.description = \"\";\n            this.state.selectedDef.id = -1;\n        }\n\n        return <Col>\n            <Modal size=\"lg\" show={this.state.newDefModal} animation={false} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Definition: {this.state.selectedDef.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Form style={{ paddingTop: '5px' }}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Definition Name</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.name}\n                                        onChange={e => this.state.selectedDef.name = e.target.value}\n                                    />\n                                    <div style={{ height: \"10px\" }}></div>\n                                    <Form.Label>Definition Description</Form.Label>\n                                    <Form.Control type=\"text\" defaultValue={this.state.selectedDef.value}\n                                        onChange={e => this.state.selectedDef.description = e.target.value}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Will appear in the Dataiku Dataset's column description.\n                                    </Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Row>\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    {/* onClick={() => this.saveColLineage()} */}\n                    <Button variant=\"secondary\" onClick={() => this.saveCol(true, true)}>Save all Lineage</Button>\n                    <Button variant=\"primary\" onClick={() => this.saveCol(false, false)}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <p class=\"name\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span>\n            </p>\n            <p class=\"name\"><b>Dataset: </b>\n                <span className='app-link' onClick={() => this.openDataset(this.props.item.project + '.' + this.props.item.dataset)}>{this.props.item.dataset}</span>\n            </p>\n            <p class=\"name\"><b>Column Name: </b>{this.props.item.name}\n            </p>\n            <p class=\"name\"><b>Type: </b>{this.props.item.type}</p>\n\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"definition\" className=\"mb-3\">\n                    <Tab eventKey=\"definition\" title=\"Definition\" def>\n                        {\n                            this.props.item.definition.id == -1 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.newDef()}\n                                >Add Definition</Button>{' '}\n                            </div>\n                        }\n                        {\n                            this.props.item.definition.id > 0 &&\n                            <div>\n                                <Button variant=\"primary\"\n                                    onClick={() => this.editDef()}\n                                >Edit Definition</Button>{' '}\n                                <div style={{ padding: '10px' }}>\n                                    <Definition definition={this.state.selectedDef}></Definition>\n                                </div>\n                            </div>\n                        }\n                    </Tab>\n                    <Tab eventKey=\"lineage\" title=\"Lineage\" def>\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>\n    }\n\n    renderDataset() {\n        let tags = this.buildTagsString(this.props.item.meta.tags);\n        let lineage = this.buildLineage();\n\n        var listItems = this.props.item.schema.map((col) =>\n            <tr onClick={() => this.openColumn(col.key)}>\n                <td>{col.name}</td>\n                <td>{col.type}</td>\n                <td>{col.comment}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b>{this.props.item.name}\n                <span style={{ paddingLeft: '4px' }}>\n                    <a href={Common.createDatasetLink(this.props.item.project, this.props.item.id)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                    </a></span>\n            </p>\n            <p class=\"project\"><b>Project: </b>\n                <span className='app-link' onClick={() => this.openProject(this.props.item.project)}>{this.props.item.project}</span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n\n            <Row style={{ paddingTop: '20px' }}>\n                <Tabs defaultActiveKey=\"lineage\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                    <Tab eventKey=\"lineage\" title=\"Lineage\">\n                        <div class=\"lineage\">{lineage}</div>\n                    </Tab>\n                    <Tab eventKey=\"columns\" title=\"Columns\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {listItems}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </Row>\n        </Col>;\n    }\n\n    renderProject() {\n        let tags = this.buildTagsString(this.props.item.tags);\n        let dataSetRows = this.props.item.datasets.map((col) =>\n            <tr>\n                <td onClick={() => this.openDataset(col)}>{col}</td>\n            </tr>\n        );\n\n        return <Col>\n            <p class=\"name\"><b>Name: </b><span>{this.props.item.name}</span><span style={{ paddingLeft: '4px' }}>\n                <a href={Common.createProjectLink(this.props.item.projectKey)} target=\"_blank\"><ArrowUpRightSquare size={20} />\n                </a></span></p>\n            <p class=\"name\"><b>Type: </b>{this.props.type}</p>\n\n            <div class=\"tags\">{tags}</div>\n            <div style={{ paddingTop: '10px' }}>\n                <Tabs defaultActiveKey=\"datasets\" className=\"mb-3\">\n                    <Tab eventKey=\"datasets\" title=\"Datasets\" def>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dataSetRows}\n                            </tbody>\n                        </Table>\n                    </Tab>\n                </Tabs>\n            </div>\n        </Col>;\n    }\n\n    render() {\n        let item;\n        let itemDetails = this.renderItemDetailsByType();\n        if (this.props.item != null) {\n            item = <Row className=\"align-items-start\">\n                <Col xs={1}>\n                    {Common.getIconForDataikuItemType(this.props.type, \"100%\")}\n                </Col>\n                {itemDetails}\n            </Row>\n        } else {\n            item = <Row>\n                <p>No Item to display...</p>\n            </Row>\n        }\n\n        return (\n            <div class=\"dataiku-item\">\n                {item}\n            </div>\n        );\n    }\n}\n\nexport default DataikuItem;","import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport eventBus from \"./eventBus\";\n\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport {\n    FaFilter,\n    FaRedo\n} from 'react-icons/fa';\n\nimport {\n    Button,\n    Container,\n    Col,\n    Row,\n    Spinner,\n} from 'react-bootstrap';\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\n\nimport Common from \"./common/common\";\nimport DataikuItem from \"./components/dataikuItem\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dataiku: undefined,\n            dataikuItem: null,\n            filters: {\n                column: true,\n                dataset: true,\n                project: true,\n            },\n            loading: true,\n            openFilter: true,\n            selectedItem: null,\n            selectedItemType: null,\n            searchResults: [],\n        }\n    }\n\n    filterDataikuItems = (response) => {\n        let types = this.formatQueryTypes();\n\n        var p_list = [];\n        Object.keys(response).forEach(function (results) {\n            var dataikuItem = response[results];\n            if (types.indexOf(dataikuItem.type.toString()) >= 0) {\n                p_list[p_list.length] = dataikuItem;\n\n            }\n        });\n\n        return p_list;\n    }\n\n    formatQueryTypes = () => {\n        let types = [];\n        Object.entries(this.state.filters).map(([key, value]) => {\n            if (value == true) {\n                types[types.length] = key.toString();\n            }\n        });\n\n        return types;\n    }\n\n    handleOnChange = (type) => {\n        let tempFilters = this.state.filters;\n        tempFilters[type] = !tempFilters[type];\n\n        this.setState({\n            filters: tempFilters\n        });\n    }\n\n    loadItem = (item) => {\n        this.setState({ loading: true });\n        console.log('loadItem :: item == ');\n        console.log(item);\n\n        if (item.length > 0) {\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n\n            fetch(window.getWebAppBackendUrl('load-item') + '?key=' + item[0].key, requestOptions)\n                .then(res => res.json())\n                .then((response) => {\n                    console.log('response == ');\n                    console.log(response);\n\n                    this.setState({\n                        loading: false,\n                        selectedItem: response,\n                        selectedItemType: item[0].type\n                    });\n                });\n        }\n    }\n\n    search = (term) => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' },\n        };\n\n        let url = window.getWebAppBackendUrl('search') + '?term=' + term;\n        this.setState({ loading: true });\n        fetch(url, requestOptions)\n            .then(res => res.json())\n            .then((response) => {\n                var p_list = this.filterDataikuItems(response);\n\n                this.setState({\n                    searchResults: p_list,\n                    loading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n            this.setState({ loading: false });\n\n            // eventBus.on(\"dataRefresh\", (data) =>\n            //     this.refreshData()\n            // );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.loadItem([{\n                    key: ds,\n                    type: 'dataset'\n                }])\n            );\n\n            eventBus.on(\"projectSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'project'\n                }])\n            );\n\n            eventBus.on(\"columnSelected\", (proj) =>\n                this.loadItem([{\n                    key: proj,\n                    type: 'column'\n                }])\n            );\n\n            eventBus.on(\"loading\", (isLoading) =>\n                this.setState({ \"loading\": isLoading })\n            );\n\n            // this.search('thread');\n            // this.refreshData();\n        });\n    }\n\n    rescan() {\n        this.setState({ loading: true });\n        fetch(window.getWebAppBackendUrl('scan'))\n            .then(res => res.json())\n            .then((response) => {\n                this.setState({ loading: false });\n            });\n    }\n\n    renderMenuItemChildren(option, props) {\n        return <Fragment>\n            {Common.getIconForDataikuItemType(option.type)}\n            <span style={{ fontWeight: 'bold', paddingLeft: '4px' }}>Name: {option.name}</span>\n            <span style={{ padding: '3px' }}>|</span>\n            <span>Type: {option.type}</span>\n            {option.type == 'dataset' || option.type == 'column' &&\n                <span>\n                    <span style={{ padding: '3px' }}>|</span>\n                    <span>Project: {option.key.split('.')[0]}</span>\n                </span>\n            }\n        </Fragment>;\n    }\n\n    toggleFilter() {\n        this.setState({ openFilter: !this.state.openFilter });\n    }\n\n    render() {\n        // <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n\n        //         <Routes>\n        //             <Route path=\"/\" exact component={Home} />\n        //         </Routes>\n        //     </main>\n        // </Router>\n\n        const { filters, loading, openFilter, searchResults, selectedItem, selectedItemType } = this.state;\n        const filterBy = () => true;\n\n        this.dataikuItem = <DataikuItem item={selectedItem} type={selectedItemType} />;\n\n        return (\n            <Container style={{ paddingTop: '20px' }}>\n                <Row style={{ paddingBottom: '10px' }}>\n                    <Col><h1>Thread</h1></Col>\n                    <Col style={{ textAlign: 'right' }}>\n                        <FaRedo onClick={() => this.rescan()} style={{ width: '20px', height: '20px', cursor: 'pointer' }} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <div className=\"input-group\" style={{ width: \"100%\" }}>\n                            <AsyncTypeahead\n                                filterBy={filterBy}\n                                id=\"async-search\"\n                                delay={300}\n                                labelKey=\"key\"\n                                minLength={3}\n                                onChange={this.loadItem}\n                                onSearch={this.search}\n                                options={searchResults}\n                                placeholder='Search'\n                                renderMenuItemChildren={this.renderMenuItemChildren}\n                                style={{ width: \"97.5%\" }}\n                            />\n                            <div className=\"input-group-btn\">\n                                <FaFilter onClick={() => this.toggleFilter()} style={{\n                                    backgroundColor: \"#66a3ff\",\n                                    color: \"#FFFFFF\",\n                                    cursor: 'pointer',\n                                    height: '34px',\n                                    padding: \"8px\",\n                                    width: '34px'\n                                }} />\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n\n                {openFilter ?\n                    <Row className=\"filter\" style={{ marginTop: \"0.5em\" }}>\n                        <Col xs={1}>\n                            <h4>Filter By: </h4>\n                        </Col>\n                        {Object.entries(filters).map(([key, value]) => {\n                            return (\n                                <Col xs={1}>\n                                    <div className=\"filter-types\" key={key}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id={`filter-${key}`}\n                                            name={key}\n                                            value={key}\n                                            checked={value}\n                                            onChange={() => this.handleOnChange(key)}\n                                            style={{ marginRight: \"1.0em\" }}\n                                        />\n                                        <label htmlFor={`filter-${key}`}>{key}s</label>\n                                    </div>\n                                </Col>\n                            );\n                        })}\n                    </Row>\n                    : null}\n\n                <Row>\n                    <div style={{ padding: '10px' }}>\n                        {this.state.loading ?\n                            <Spinner animation=\"border\" role=\"status\">\n                                <span className=\"visually-hidden\">Loading...</span>\n                            </Spinner>\n                            : null}\n                    </div>\n                </Row>\n                <Row>\n                    {this.dataikuItem}\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  // <BrowserRouter>\n  //   <Route path=\"/\" element={<App />}>\n  //     <Route path=\"expenses\" element={<Expenses />} />\n  //     {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n  //   </Route>\n  // </BrowserRouter>,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport { FaColumns, FaDatabase, FaList, FaProjectDiagram, FaQuestionCircle } from \"react-icons/fa\";\n\n// function createDsLink(ds) {\n//     return this.createDsLink2(ds.projectKey, ds.name)\n// }\n\n// function createDsLink2(proj, ds) {\n//     return '/projects/' + proj + '/datasets/' + ds + '/explore/';\n// }\n\nfunction createDsLinkFull(proj, ds) {\n    return '<a href=\"' + this.createDsLink2(proj, ds) + '\" target=\"_blank\">' + proj + '.' + ds + '</a>';\n}\n\nfunction createProjectLink(projkey) {\n    return '/projects/' + projkey + '/flow/';\n}\n\nfunction createDatasetLink(projkey, ds) {\n    return '/projects/' + projkey + '/datasets/' + ds + '/explore/';\n}\n\nfunction getIconForDataikuItemType(type, size = \"11px\") {\n    // console.log();\n    switch(type) {\n        case \"project\":\n            return <FaProjectDiagram size={size} />;\n        case \"dataset\":\n            return <FaDatabase size={size} />;\n        case \"column\":\n            return <FaColumns size={size} />;\n        case \"definition\":\n            return <FaList size={size} />;\n        default: \n            return <FaQuestionCircle size={size} />;\n    }   \n}\n\nconst Common = {\n    createDatasetLink,\n    createProjectLink,\n    createDsLinkFull,\n    getIconForDataikuItemType\n};\n\nexport default Common;"],"sourceRoot":""}