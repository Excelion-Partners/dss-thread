{"ast":null,"code":"import _classCallCheck from\"/Users/dudac/Documents/_source/strados/dss-thread/resource/thread/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dudac/Documents/_source/strados/dss-thread/resource/thread/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/dudac/Documents/_source/strados/dss-thread/resource/thread/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dudac/Documents/_source/strados/dss-thread/resource/thread/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Fragment}from\"react\";import{Component}from'react';import{useEffect}from'react';import logo from\"./logo.svg\";import'./App.css';import Button from'react-bootstrap/Button';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Form from'react-bootstrap/Form';import Col from'react-bootstrap/Col';import'bootstrap/dist/css/bootstrap.min.css';import{Typeahead}from'react-bootstrap-typeahead';import eventBus from\"./eventBus\";import{BrowserRouter as Router,Switch,Route,Routes,Link}from\"react-router-dom\";import Dataset from'./components/dataset.js';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.findDataset=function(key){var proj=key.split('.')[0];var ds_name=key.split('.')[1];// var p_ref = tree[proj];\nconsole.log(ds_name);var ds=_this.state.full_tree[proj]['datasets'].find(function(element){return element.name==ds_name;});_this.setState({selectedDataset:ds,full_ds_name:ds_name});// fetch(window.getWebAppBackendUrl('dataset-details'), {\n//     method: 'POST', body: JSON.stringify({\n//         'dataset-name': ds_name,\n//         'project': proj\n//     })\n// })\n//     .then(res => res.json())\n//     .then(\n//         (result) => {\n//             this.setState({\n// selectedDataset: result.dataset,\n//         full_ds_name: result.dataset_name\n//     })\n// });\n// return p_ref.datasets.find(({ name }) => name === ds_name);\n// this.setState({\n//     selectedDataset: this.findDataset(full_tree, selected[0].id),\n//     full_ds_name: selected[0].id\n// })\n};_this.refreshData=function(){fetch(window.getWebAppBackendUrl('get-projects')).then(function(res){return res.json();}).then(function(result){var p_list=[];Object.keys(result).forEach(function(proj_name){for(var x=0;x<result[proj_name].datasets.length;x++){var ds=result[proj_name].datasets[x];p_list[p_list.length]={id:proj_name+'.'+ds.name,label:ds.name+' ('+proj_name+')'};}});_this.setState({isLoaded:true,project_list:p_list,full_tree:result});});};_this.state={rendered:false,dataiku:undefined,isLoaded:false,project_list:[],full_ds_name:'',full_tree:{},selectedDataset:null};_this.project_list=[];// This binding is necessary to make `this` work in the callback\n// this.handleClick = this.handleClick.bind(this);\nreturn _this;}// handleClick = () => {\n//     console.log('The link was clicked.');\n//     window.$.getJSON(window.getWebAppBackendUrl('initialize'), function (data) {\n//         const output = window.$('<pre />').text('Backend reply: ' + JSON.stringify(data));\n//         window.$('body').append(output)\n//     });\n// }\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;window.$(document).ready(function(){_this2.setState({dataiku:window.dataiku});_this2.setState({rendered:true});eventBus.on(\"dataRefresh\",function(data){return _this2.refreshData();});eventBus.on(\"datasetSelected\",function(ds){return _this2.findDataset(ds);});_this2.refreshData();});}},{key:\"render\",value:function render(){var _this3=this;//        <Router>\n//     <main>\n//       <nav>\n//         <ul>\n//           <li><Link to=\"/\">Home</Link></li>\n//           <li><a href=\"/about\">About</a></li>\n//           <li><a href=\"/contact\">Contact</a></li>\n//         </ul>\n//       </nav>\n//             <Routes>\n//   <Route path=\"/\" exact component={Home} />\n//             </Routes>\n//     </main>\n// </Router>\n// )\nvar _this$state=this.state,isLoaded=_this$state.isLoaded,project_list=_this$state.project_list,full_tree=_this$state.full_tree,showDetail=_this$state.showDetail,selectedDataset=_this$state.selectedDataset,full_ds_name=_this$state.full_ds_name;var ref=React.createRef();if(!isLoaded){return/*#__PURE__*/React.createElement(\"div\",null,\"Scanning DSS...\");}else{if(selectedDataset==null){return/*#__PURE__*/React.createElement(Container,{style:{paddingTop:'20px'}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Typeahead,{ref:ref,placeholder:\"Search for Dataset\",onChange:function onChange(selected){if(selected.length>0){_this3.findDataset(selected[0].id);ref.current.clear();};},options:project_list})));}else{return/*#__PURE__*/React.createElement(Container,{style:{paddingTop:'20px'}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Typeahead,{ref:ref,placeholder:\"Search for Dataset\",onChange:function onChange(selected){if(selected.length>0){_this3.findDataset(selected[0].id);ref.current.clear();};},options:project_list})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Dataset,{deets:selectedDataset,full_ds_name:full_ds_name})));}}}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/dudac/Documents/_source/strados/dss-thread/resource/thread/src/App.js"],"names":["React","Fragment","Component","useEffect","Button","Container","Row","Form","Col","Typeahead","eventBus","BrowserRouter","Router","Switch","Route","Routes","Link","Dataset","App","props","findDataset","key","proj","split","ds_name","console","log","ds","state","full_tree","find","element","name","setState","selectedDataset","full_ds_name","refreshData","fetch","window","getWebAppBackendUrl","then","res","json","result","p_list","Object","keys","forEach","proj_name","x","datasets","length","id","label","isLoaded","project_list","rendered","dataiku","undefined","$","document","ready","on","data","showDetail","ref","createRef","paddingTop","selected","current","clear"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Component } from 'react';\nimport { useEffect } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport eventBus from \"./eventBus\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Routes,\n    Link\n} from \"react-router-dom\";\nimport Dataset from './components/dataset.js';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rendered: false,\n            dataiku: undefined,\n            isLoaded: false,\n            project_list: [],\n            full_ds_name: '',\n            full_tree: {},\n            selectedDataset: null\n        };\n\n        this.project_list = []\n\n        // This binding is necessary to make `this` work in the callback\n        // this.handleClick = this.handleClick.bind(this);\n    }\n\n    // handleClick = () => {\n    //     console.log('The link was clicked.');\n\n    //     window.$.getJSON(window.getWebAppBackendUrl('initialize'), function (data) {\n    //         const output = window.$('<pre />').text('Backend reply: ' + JSON.stringify(data));\n    //         window.$('body').append(output)\n    //     });\n\n    // }\n\n    findDataset = (key) => {\n        var proj = key.split('.')[0];\n        var ds_name = key.split('.')[1];\n\n        // var p_ref = tree[proj];\n        console.log(ds_name);\n\n        var ds = this.state.full_tree[proj]['datasets'].find(element => element.name == ds_name);\n\n        this.setState({\n            selectedDataset: ds,\n            full_ds_name: ds_name\n        })\n\n        // fetch(window.getWebAppBackendUrl('dataset-details'), {\n        //     method: 'POST', body: JSON.stringify({\n        //         'dataset-name': ds_name,\n        //         'project': proj\n        //     })\n        // })\n        //     .then(res => res.json())\n        //     .then(\n        //         (result) => {\n        //             this.setState({\n        // selectedDataset: result.dataset,\n                //         full_ds_name: result.dataset_name\n                //     })\n                // });\n\n        // return p_ref.datasets.find(({ name }) => name === ds_name);\n\n        // this.setState({\n        //     selectedDataset: this.findDataset(full_tree, selected[0].id),\n        //     full_ds_name: selected[0].id\n        // })\n    }\n\n    refreshData = () => {\n        fetch(window.getWebAppBackendUrl('get-projects'))\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    var p_list = []\n                    Object.keys(result).forEach(function (proj_name) {\n                        for (var x = 0; x < result[proj_name].datasets.length; x++) {\n                            var ds = result[proj_name].datasets[x];\n                            p_list[p_list.length] = { id: proj_name + '.' + ds.name, label: ds.name + ' (' + proj_name + ')' };\n                        }\n                    });\n\n                    this.setState({\n                        isLoaded: true,\n                        project_list: p_list,\n                        full_tree: result\n                    });\n                });\n    }\n\n    componentDidMount() {\n        window.$(document).ready(() => {\n            this.setState({ dataiku: window.dataiku });\n            this.setState({ rendered: true });\n\n            eventBus.on(\"dataRefresh\", (data) =>\n                this.refreshData()\n            );\n\n            eventBus.on(\"datasetSelected\", (ds) =>\n                this.findDataset(ds)\n            );\n\n            this.refreshData()\n        }\n\n        );\n    }\n\n    render() {\n        //        <Router>\n        //     <main>\n        //       <nav>\n        //         <ul>\n        //           <li><Link to=\"/\">Home</Link></li>\n        //           <li><a href=\"/about\">About</a></li>\n        //           <li><a href=\"/contact\">Contact</a></li>\n        //         </ul>\n        //       </nav>\n        //             <Routes>\n        //   <Route path=\"/\" exact component={Home} />\n        //             </Routes>\n        //     </main>\n        // </Router>\n        // )\n        const { isLoaded, project_list, full_tree, showDetail, selectedDataset, full_ds_name } = this.state;\n        const ref = React.createRef();\n\n        if (!isLoaded) {\n            return <div>Scanning DSS...</div>;\n        } else {\n            if (selectedDataset == null) {\n                return (\n                    <Container style={{ paddingTop: '20px' }}>\n                        <Row>\n                            <Typeahead\n                                ref={ref}\n                                placeholder='Search for Dataset'\n                                onChange={(selected) => {\n                                    if (selected.length > 0) {\n                                        this.findDataset(selected[0].id)\n                                        ref.current.clear()\n                                    };\n                                }}\n                                options={project_list}\n                            />\n                        </Row>\n                    </Container>\n                );\n            }\n            else {\n                return (\n                    <Container style={{ paddingTop: '20px' }}>\n                        <Row>\n                            <Typeahead\n                                ref={ref}\n                                placeholder='Search for Dataset'\n                                onChange={(selected) => {\n                                    if (selected.length > 0) {\n                                        this.findDataset(selected[0].id)\n                                        ref.current.clear()\n                                    };\n                                }}\n                                options={project_list}\n                            />\n                        </Row>\n                        <Row>\n                            <Dataset deets={selectedDataset} full_ds_name={full_ds_name}></Dataset>\n                        </Row>\n                    </Container>\n                );\n            }\n        }\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}